<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="d0/d77/body_8h" kind="file" language="C++">
    <compoundname>body.h</compoundname>
    <includes refid="dc/d54/common_8h" local="yes">common.h</includes>
    <includes local="yes">LMX/lmx.h</includes>
    <includes refid="dc/d6b/boundarygroup_8h" local="yes">boundarygroup.h</includes>
    <includes refid="db/d20/cellboundary_8h" local="no">core/cellboundary.h</includes>
    <includes refid="d1/d77/node_8h" local="no">core/node.h</includes>
    <includedby refid="d1/d5f/body_8cpp" local="yes">body.cpp</includedby>
    <includedby refid="dd/dbc/bodyflex_8h" local="yes">bodyflex.h</includedby>
    <includedby refid="d1/d67/bodyrigid_8h" local="yes">bodyrigid.h</includedby>
    <includedby refid="d6/df8/system_8cpp" local="yes">system.cpp</includedby>
    <incdepgraph>
      <node id="2404">
        <label>core/cellboundary.h</label>
        <link refid="db/d20/cellboundary_8h"/>
        <childnode refid="2405" relation="include">
        </childnode>
        <childnode refid="2406" relation="include">
        </childnode>
        <childnode refid="2399" relation="include">
        </childnode>
      </node>
      <node id="2406">
        <label>string</label>
      </node>
      <node id="2400">
        <label>map</label>
      </node>
      <node id="2399">
        <label>common.h</label>
        <link refid="dc/d54/common_8h"/>
        <childnode refid="2400" relation="include">
        </childnode>
        <childnode refid="2401" relation="include">
        </childnode>
      </node>
      <node id="2403">
        <label>boundarygroup.h</label>
        <link refid="dc/d6b/boundarygroup_8h"/>
        <childnode refid="2399" relation="include">
        </childnode>
        <childnode refid="2402" relation="include">
        </childnode>
      </node>
      <node id="2405">
        <label>vector</label>
      </node>
      <node id="2402">
        <label>LMX/lmx.h</label>
      </node>
      <node id="2407">
        <label>core/node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="2408" relation="include">
        </childnode>
        <childnode refid="2402" relation="include">
        </childnode>
      </node>
      <node id="2408">
        <label>point.h</label>
        <link refid="d2/d91/point_8h"/>
        <childnode refid="2405" relation="include">
        </childnode>
        <childnode refid="2400" relation="include">
        </childnode>
        <childnode refid="2406" relation="include">
        </childnode>
        <childnode refid="2399" relation="include">
        </childnode>
      </node>
      <node id="2398">
        <label>body.h</label>
        <link refid="body.h"/>
        <childnode refid="2399" relation="include">
        </childnode>
        <childnode refid="2402" relation="include">
        </childnode>
        <childnode refid="2403" relation="include">
        </childnode>
        <childnode refid="2404" relation="include">
        </childnode>
        <childnode refid="2407" relation="include">
        </childnode>
      </node>
      <node id="2401">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2410">
        <label>body.cpp</label>
        <link refid="d1/d5f/body_8cpp"/>
      </node>
      <node id="2426">
        <label>bodyrigid1D.h</label>
        <link refid="d7/d1c/bodyrigid1_d_8h"/>
        <childnode refid="2424" relation="include">
        </childnode>
        <childnode refid="2427" relation="include">
        </childnode>
        <childnode refid="2428" relation="include">
        </childnode>
        <childnode refid="2429" relation="include">
        </childnode>
      </node>
      <node id="2428">
        <label>systemchain.cpp</label>
        <link refid="d2/d04/systemchain_8cpp"/>
      </node>
      <node id="2429">
        <label>systemchain2.cpp</label>
        <link refid="df/d87/systemchain2_8cpp"/>
      </node>
      <node id="2433">
        <label>bodyrigid3D.cpp</label>
        <link refid="d0/da1/bodyrigid3_d_8cpp"/>
      </node>
      <node id="2419">
        <label>bodyflexglobalgalerkin.cpp</label>
        <link refid="db/dcf/bodyflexglobalgalerkin_8cpp"/>
      </node>
      <node id="2416">
        <label>bodyflexframegalerkin.cpp</label>
        <link refid="d7/dfd/bodyflexframegalerkin_8cpp"/>
      </node>
      <node id="2424">
        <label>readerrigid.cpp</label>
        <link refid="d9/d6a/readerrigid_8cpp"/>
      </node>
      <node id="2411">
        <label>bodyflex.h</label>
        <link refid="dd/dbc/bodyflex_8h"/>
        <childnode refid="2412" relation="include">
        </childnode>
        <childnode refid="2413" relation="include">
        </childnode>
        <childnode refid="2414" relation="include">
        </childnode>
        <childnode refid="2415" relation="include">
        </childnode>
        <childnode refid="2417" relation="include">
        </childnode>
        <childnode refid="2420" relation="include">
        </childnode>
      </node>
      <node id="2425">
        <label>bodyrigid0D.cpp</label>
        <link refid="dc/d48/bodyrigid0_d_8cpp"/>
      </node>
      <node id="2415">
        <label>bodyflexframegalerkin.h</label>
        <link refid="d6/d10/bodyflexframegalerkin_8h"/>
        <childnode refid="2416" relation="include">
        </childnode>
      </node>
      <node id="2421">
        <label>bodyrigid.h</label>
        <link refid="d1/d67/bodyrigid_8h"/>
        <childnode refid="2412" relation="include">
        </childnode>
        <childnode refid="2413" relation="include">
        </childnode>
        <childnode refid="2422" relation="include">
        </childnode>
        <childnode refid="2423" relation="include">
        </childnode>
        <childnode refid="2426" relation="include">
        </childnode>
        <childnode refid="2430" relation="include">
        </childnode>
        <childnode refid="2432" relation="include">
        </childnode>
        <childnode refid="2420" relation="include">
        </childnode>
      </node>
      <node id="2417">
        <label>bodyflexglobalgalerkin.h</label>
        <link refid="df/d1c/bodyflexglobalgalerkin_8h"/>
        <childnode refid="2418" relation="include">
        </childnode>
        <childnode refid="2419" relation="include">
        </childnode>
      </node>
      <node id="2422">
        <label>bodyrigid.cpp</label>
        <link refid="da/d4a/bodyrigid_8cpp"/>
      </node>
      <node id="2414">
        <label>bodyflex.cpp</label>
        <link refid="d6/d1e/bodyflex_8cpp"/>
      </node>
      <node id="2427">
        <label>bodyrigid1D.cpp</label>
        <link refid="d5/d29/bodyrigid1_d_8cpp"/>
      </node>
      <node id="2420">
        <label>system.cpp</label>
        <link refid="d6/df8/system_8cpp"/>
      </node>
      <node id="2412">
        <label>reader.cpp</label>
        <link refid="d7/dff/reader_8cpp"/>
      </node>
      <node id="2418">
        <label>readerflex.cpp</label>
        <link refid="d6/daf/readerflex_8cpp"/>
      </node>
      <node id="2409">
        <label>body.h</label>
        <link refid="body.h"/>
        <childnode refid="2410" relation="include">
        </childnode>
        <childnode refid="2411" relation="include">
        </childnode>
        <childnode refid="2421" relation="include">
        </childnode>
        <childnode refid="2420" relation="include">
        </childnode>
      </node>
      <node id="2413">
        <label>readerconstraints.cpp</label>
        <link refid="d2/d38/readerconstraints_8cpp"/>
      </node>
      <node id="2430">
        <label>bodyrigid2D.h</label>
        <link refid="d3/d80/bodyrigid2_d_8h"/>
        <childnode refid="2424" relation="include">
        </childnode>
        <childnode refid="2431" relation="include">
        </childnode>
      </node>
      <node id="2432">
        <label>bodyrigid3D.h</label>
        <link refid="d1/dbe/bodyrigid3_d_8h"/>
        <childnode refid="2424" relation="include">
        </childnode>
        <childnode refid="2433" relation="include">
        </childnode>
      </node>
      <node id="2431">
        <label>bodyrigid2D.cpp</label>
        <link refid="dc/d0c/bodyrigid2_d_8cpp"/>
      </node>
      <node id="2423">
        <label>bodyrigid0D.h</label>
        <link refid="da/d60/bodyrigid0_d_8h"/>
        <childnode refid="2424" relation="include">
        </childnode>
        <childnode refid="2425" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="dd/de3/classmknix_1_1_body" prot="public">mknix::Body</innerclass>
    <innernamespace refid="d2/dde/namespacemknix">mknix</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2015<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Nemesis.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Nemesis<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>Nemesis<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>Nemesis.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.<sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MKNIXBODY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MKNIXBODY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d54/common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LMX/lmx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d6b/boundarygroup_8h" kindref="compound">boundarygroup.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="db/d20/cellboundary_8h" kindref="compound">core/cellboundary.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d1/d77/node_8h" kindref="compound">core/node.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d2/dde/namespacemknix" kindref="compound">mknix</ref><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Point;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>Node;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Cell;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>BoundaryGroup;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LoadThermalBody;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LoadThermalBoundary1D;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="dd/de3/classmknix_1_1_body" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/de3/classmknix_1_1_body" kindref="compound">Body</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/de3/classmknix_1_1_body_1a5f11ba30f14169c567d8e3f84afbbf40" kindref="member">Body</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/de3/classmknix_1_1_body_1a5f11ba30f14169c567d8e3f84afbbf40" kindref="member">Body</ref>(std::string);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ad58a0a50a821e1adaa5abd1320e5a837" kindref="member">~Body</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="dd/de3/classmknix_1_1_body_1a603ed0a11eee91957b2655a0e4667cd4" kindref="member">getType</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a054b7576fbd1e8c39f02105b8572c372" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1acd598d48de1ed25dbbf11a438154f3d9" kindref="member">calcCapacityMatrix</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1af3b11d33d15d6b2411bca681ddd10b9c" kindref="member">calcConductivityMatrix</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a2251d4224fdaeef6c78ee3edce4d94fe" kindref="member">calcExternalHeat</ref>();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a073f28930ce01dbf40244625538326ce" kindref="member">assembleCapacityMatrix</ref>(<ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix&lt;data_type&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a7185066ed04c51946b256412ee92c00c" kindref="member">assembleConductivityMatrix</ref>(<ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix&lt;data_type&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a7b8c3fab4eaa4ecba277317fa7bfb0f3" kindref="member">assembleExternalHeat</ref>(<ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ad34fa07c6620c9fcc2268bfdbfd42194" kindref="member">calcMassMatrix</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a71d21e817523058098bcec62fb377187" kindref="member">calcExternalForces</ref>()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1acd6c47f4e0a25e927141cb325df896a9" kindref="member">assembleMassMatrix</ref>(<ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix&lt;data_type&gt;</ref>&amp;)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a46a17ef341d6ea217e1548108a4e9efc" kindref="member">assembleExternalForces</ref>(<ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a7a59c0a2063ce89772d24e0fc7118dd9" kindref="member">setTemperature</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="dd/de3/classmknix_1_1_body_1a863cfa7288a25874f4e4ce6d329fc26b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a863cfa7288a25874f4e4ce6d329fc26b" kindref="member">setMechanical</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a2b8de3291a8b2678b1c989f4d6c52b89" kindref="member">isThermal</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a689970a0729d557ed56492bbfeae4ecd" kindref="member">setOutput</ref>(std::string)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" kindref="member">outputStep</ref></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" kindref="member">outputStep</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" kindref="member">outputStep</ref>();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a65fb5dd34d3a6925f611f7ea49da5cd0" kindref="member">outputToFile</ref>(std::ofstream<sp/>*);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="dd/de3/classmknix_1_1_body_1abf7eec507e5fc918e4901864a6db0f84" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1abf7eec507e5fc918e4901864a6db0f84" kindref="member">addNode</ref>(<ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref><sp/>*<sp/>node_in)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.push_back(node_in);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="dd/de3/classmknix_1_1_body_1a29eb7ca2168e7674ddb553a85d43a8d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a29eb7ca2168e7674ddb553a85d43a8d8" kindref="member">addNodes</ref>(std::vector&lt;Node<sp/>*&gt;&amp;<sp/>nodes_in)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a4c8d492ccd9472119b5f8b47392c1dcd" kindref="member">bondedBodyNodes</ref>.insert(<ref refid="dd/de3/classmknix_1_1_body_1a4c8d492ccd9472119b5f8b47392c1dcd" kindref="member">bondedBodyNodes</ref>.end(),<sp/>nodes_in.begin(),<sp/>nodes_in.end());</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="dd/de3/classmknix_1_1_body_1af1e6e6589c5dfb4016e1e6af2225ae5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1af1e6e6589c5dfb4016e1e6af2225ae5f" kindref="member">getNodesSize</ref>()</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.size();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="dd/de3/classmknix_1_1_body_1aba386146267f71d398fb4dabb41a550c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Node<sp/>*&gt;&amp;<sp/><ref refid="dd/de3/classmknix_1_1_body_1aba386146267f71d398fb4dabb41a550c" kindref="member">getNodes</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="dd/de3/classmknix_1_1_body_1abb933258861ddadd9d7c7792e9303e02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref><sp/>*<sp/><ref refid="dd/de3/classmknix_1_1_body_1abb933258861ddadd9d7c7792e9303e02" kindref="member">getNode</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_number)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>[node_number];</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="dd/de3/classmknix_1_1_body_1a95fad3fdd4c18a0adcbeba2891b55140" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref><sp/>*<sp/><ref refid="dd/de3/classmknix_1_1_body_1a95fad3fdd4c18a0adcbeba2891b55140" kindref="member">getLastNode</ref>()</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a55bd3106cf4c12c8b4644e48b412f3c9" kindref="member">lastNode</ref>;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="dd/de3/classmknix_1_1_body_1a023da531b8383f798f4ef31bad1cff60" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a023da531b8383f798f4ef31bad1cff60" kindref="member">addBoundaryLine</ref>(<ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref><sp/>*<sp/>node1,<sp/><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref><sp/>*<sp/>node2)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" kindref="member">linearBoundary</ref>[node1]<sp/>=<sp/>node2;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;linearBoundary:<sp/>&quot;<sp/>&lt;&lt;<sp/>node1-&gt;getNumber()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>node2-&gt;getNumber()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a9b3e566b0c8758701f1583667caf6657" kindref="member">addBoundaryConnectivity</ref>(std::vector&lt;int&gt;<sp/>connectivity_in);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>void<sp/>addBoundaryGroup(<sp/>std::string<sp/>boundary_name<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;boundaryGroups[boundary_name];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>BoundaryGroup&amp;<sp/>getBoundaryGroup(<sp/>std::string<sp/>boundary_name<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>this-&gt;boundaryGroups[boundary_name];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147" refid="dd/de3/classmknix_1_1_body_1aa7de934eb85ec4e68741d0c7395a9a10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1aa7de934eb85ec4e68741d0c7395a9a10" kindref="member">getBoundarySize</ref>()</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" kindref="member">linearBoundary</ref>.size();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152" refid="dd/de3/classmknix_1_1_body_1a030d73d6f97c9fc81220ca0d21cfa4c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref><sp/>*<sp/><ref refid="dd/de3/classmknix_1_1_body_1a030d73d6f97c9fc81220ca0d21cfa4c1" kindref="member">getBoundaryFirstNode</ref>()</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" kindref="member">linearBoundary</ref>.begin()-&gt;first;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="dd/de3/classmknix_1_1_body_1abadb51ea072fcd48be388467507c4fb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref><sp/>*<sp/><ref refid="dd/de3/classmknix_1_1_body_1abadb51ea072fcd48be388467507c4fb0" kindref="member">getBoundaryNextNode</ref>(<ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref><sp/>*<sp/>node_in)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" kindref="member">linearBoundary</ref>[node_in];</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="dd/de3/classmknix_1_1_body_1ab83a1a1e344d3cacb0319da5f579ce93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ab83a1a1e344d3cacb0319da5f579ce93" kindref="member">addBoundaryGroup</ref>(std::string<sp/>boundaryName_in)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" kindref="member">boundaryGroups</ref>[boundaryName_in]<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group" kindref="compound">BoundaryGroup</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="dd/de3/classmknix_1_1_body_1a8ee89e6b0f3bf8bbb20a3435e5a42c3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a8ee89e6b0f3bf8bbb20a3435e5a42c3d" kindref="member">addNodeToBoundaryGroup</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeNumber_in,<sp/>std::string<sp/>boundaryName_in)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref><sp/>*<sp/>temp<sp/>=<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>[nodeNumber_in];</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" kindref="member">boundaryGroups</ref>[boundaryName_in]-&gt;addNode(temp);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="dd/de3/classmknix_1_1_body_1ae9c1eb483544a2a0c113dae3843184fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ae9c1eb483544a2a0c113dae3843184fe" kindref="member">addCellToBoundaryGroup</ref>(<ref refid="d8/d1e/classmknix_1_1_cell_boundary" kindref="compound">CellBoundary</ref><sp/>*<sp/>cell_in,<sp/>std::string<sp/>boundaryName_in)</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" kindref="member">boundaryGroups</ref>[boundaryName_in]-&gt;addCell(cell_in);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="dd/de3/classmknix_1_1_body_1ad3c25b3400585c33a55e82ba8898f760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ad3c25b3400585c33a55e82ba8898f760" kindref="member">setLoadThermalInBoundaryGroup</ref>(<ref refid="df/df4/classmknix_1_1_load_thermal_boundary1_d" kindref="compound">LoadThermalBoundary1D</ref><sp/>*<sp/>load_in,<sp/>std::string<sp/>boundaryName_in)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" kindref="member">boundaryGroups</ref>[boundaryName_in]-&gt;setLoadThermal(load_in);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="dd/de3/classmknix_1_1_body_1a60025d1f29dad28094719a92335b0450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a60025d1f29dad28094719a92335b0450" kindref="member">getCellLastNumber</ref>()</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.end()-&gt;first;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="dd/de3/classmknix_1_1_body_1abb4237e7f457287766e29bfe0cbb0f01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1abb4237e7f457287766e29bfe0cbb0f01" kindref="member">addCell</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num,<sp/><ref refid="db/dd4/classmknix_1_1_cell" kindref="compound">Cell</ref><sp/>*<sp/>cell_in)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[num]<sp/>=<sp/>cell_in;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a25c23173ef74c5ef821f6850bc1d8861" kindref="member">writeBodyInfo</ref>(std::ofstream<sp/>*)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ac1b5b8a41f713a7d569598e43f9cde61" kindref="member">writeBoundaryNodes</ref>(std::vector&lt;Point<sp/>*&gt;&amp;)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1addb14e7d7db378199a0ece0707611129" kindref="member">writeBoundaryConnectivity</ref>(std::vector&lt;std::vector&lt;Point<sp/>*&gt;<sp/>&gt;&amp;)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a5f58f8e5398bbacc973b046be600eb5f" kindref="member">translate</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary,<sp/>should<sp/>be<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>load<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="dd/de3/classmknix_1_1_body_1a95a6a5e78013a9ca160842915f3a4703" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a95a6a5e78013a9ca160842915f3a4703" kindref="member">setLoadThermal</ref>(<ref refid="d2/d5c/classmknix_1_1_load_thermal_body" kindref="compound">LoadThermalBody</ref><sp/>*<sp/>theLoad)</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/de3/classmknix_1_1_body_1aef21ef0ead5775597ca38a9304a26682" kindref="member">loadThermalBody</ref><sp/>=<sp/>theLoad;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209" refid="dd/de3/classmknix_1_1_body_1a3c05cdff2d5f2b150046cd734d0ed7ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="dd/de3/classmknix_1_1_body_1a3c05cdff2d5f2b150046cd734d0ed7ce" kindref="member">title</ref>;</highlight></codeline>
<codeline lineno="210" refid="dd/de3/classmknix_1_1_body_1a55bd3106cf4c12c8b4644e48b412f3c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref><sp/>*<sp/><ref refid="dd/de3/classmknix_1_1_body_1a55bd3106cf4c12c8b4644e48b412f3c9" kindref="member">lastNode</ref>;</highlight></codeline>
<codeline lineno="211" refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Node<sp/>*&gt;<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="212" refid="dd/de3/classmknix_1_1_body_1a4c8d492ccd9472119b5f8b47392c1dcd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Node<sp/>*&gt;<sp/><ref refid="dd/de3/classmknix_1_1_body_1a4c8d492ccd9472119b5f8b47392c1dcd" kindref="member">bondedBodyNodes</ref>;</highlight></codeline>
<codeline lineno="213" refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>BoundaryGroup<sp/>*&gt;<sp/><ref refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" kindref="member">boundaryGroups</ref>;</highlight></codeline>
<codeline lineno="214" refid="dd/de3/classmknix_1_1_body_1a49d2061c709f04eacd6bc1ad2abe8e92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;<sp/><ref refid="dd/de3/classmknix_1_1_body_1a49d2061c709f04eacd6bc1ad2abe8e92" kindref="member">boundaryConnectivity</ref>;</highlight></codeline>
<codeline lineno="215" refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;Point<sp/>*,<sp/>Point<sp/>*&gt;<sp/><ref refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" kindref="member">linearBoundary</ref>;</highlight></codeline>
<codeline lineno="217" refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>Cell<sp/>*&gt;<sp/><ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="219" refid="dd/de3/classmknix_1_1_body_1a64fa35111fa3252c60971811dec421de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a64fa35111fa3252c60971811dec421de" kindref="member">computeEnergy</ref>;</highlight></codeline>
<codeline lineno="220" refid="dd/de3/classmknix_1_1_body_1a2b8de3291a8b2678b1c989f4d6c52b89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1a2b8de3291a8b2678b1c989f4d6c52b89" kindref="member">isThermal</ref>;</highlight></codeline>
<codeline lineno="221" refid="dd/de3/classmknix_1_1_body_1a29e955d93a12919d2adfec07a0f2f566" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;lmx::Vector&lt;data_type&gt;<sp/>*&gt;<sp/><ref refid="dd/de3/classmknix_1_1_body_1a29e955d93a12919d2adfec07a0f2f566" kindref="member">temperature</ref>;</highlight></codeline>
<codeline lineno="222" refid="dd/de3/classmknix_1_1_body_1aef21ef0ead5775597ca38a9304a26682" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d5c/classmknix_1_1_load_thermal_body" kindref="compound">LoadThermalBody</ref><sp/>*<sp/><ref refid="dd/de3/classmknix_1_1_body_1aef21ef0ead5775597ca38a9304a26682" kindref="member">loadThermalBody</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">};</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/daniel/Projects/MkniX/src/system/body.h"/>
  </compounddef>
</doxygen>

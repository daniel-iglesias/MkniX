<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="dd/de3/classmknix_1_1_body" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>mknix::Body</compoundname>
    <derivedcompoundref refid="dd/d8d/classmknix_1_1_flex_body" prot="public" virt="non-virtual">mknix::FlexBody</derivedcompoundref>
    <derivedcompoundref refid="d0/d13/classmknix_1_1_rigid_body" prot="public" virt="non-virtual">mknix::RigidBody</derivedcompoundref>
    <includes refid="d0/d77/body_8h" local="no">body.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1a3c05cdff2d5f2b150046cd734d0ed7ce" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string mknix::Body::title</definition>
        <argsstring></argsstring>
        <name>title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="209" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="209" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a65fb5dd34d3a6925f611f7ea49da5cd0" compoundref="d1/d5f/body_8cpp" startline="267" endline="309">outputToFile</referencedby>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a1cf57f024248bbb196e91aac9b9ab9fe" compoundref="d6/d1e/bodyflex_8cpp" startline="128" endline="153">mknix::FlexBody::outputToFile</referencedby>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a504be54b6f3009687ed85d17d5ade510" compoundref="d6/d1e/bodyflex_8cpp" startline="155" endline="230">mknix::FlexBody::writeBodyInfo</referencedby>
        <referencedby refid="d0/d13/classmknix_1_1_rigid_body_1a0b0df6ee53217187a301f224b8fe0d92" compoundref="da/d4a/bodyrigid_8cpp" startline="210" endline="241">mknix::RigidBody::outputToFile</referencedby>
        <referencedby refid="d0/d13/classmknix_1_1_rigid_body_1aec0efdaa5c27b8e1611af7c9f047497a" compoundref="da/d4a/bodyrigid_8cpp" startline="243" endline="255">mknix::RigidBody::writeBodyInfo</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1a55bd3106cf4c12c8b4644e48b412f3c9" prot="protected" static="no" mutable="no">
        <type><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> *</type>
        <definition>Node* mknix::Body::lastNode</definition>
        <argsstring></argsstring>
        <name>lastNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="210" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="210" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a054b7576fbd1e8c39f02105b8572c372" compoundref="d1/d5f/body_8cpp" startline="73" endline="121">initialize</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a95fad3fdd4c18a0adcbeba2891b55140" compoundref="d0/d77/body_8h" startline="123" endline="126">getLastNode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> * &gt;</type>
        <definition>std::vector&lt;Node *&gt; mknix::Body::nodes</definition>
        <argsstring></argsstring>
        <name>nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="211" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="211" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a054b7576fbd1e8c39f02105b8572c372" compoundref="d1/d5f/body_8cpp" startline="73" endline="121">initialize</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a7a59c0a2063ce89772d24e0fc7118dd9" compoundref="d1/d5f/body_8cpp" startline="218" endline="224">setTemperature</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" compoundref="d1/d5f/body_8cpp" startline="232" endline="259">outputStep</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a5f58f8e5398bbacc973b046be600eb5f" compoundref="d1/d5f/body_8cpp" startline="317" endline="324">translate</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1abf7eec507e5fc918e4901864a6db0f84" compoundref="d0/d77/body_8h" startline="98" endline="101">addNode</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1af1e6e6589c5dfb4016e1e6af2225ae5f" compoundref="d0/d77/body_8h" startline="108" endline="111">getNodesSize</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1aba386146267f71d398fb4dabb41a550c" compoundref="d0/d77/body_8h" startline="113" endline="116">getNodes</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1abb933258861ddadd9d7c7792e9303e02" compoundref="d0/d77/body_8h" startline="118" endline="121">getNode</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a8ee89e6b0f3bf8bbb20a3435e5a42c3d" compoundref="d0/d77/body_8h" startline="167" endline="171">addNodeToBoundaryGroup</referencedby>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1aa6eeb315791be5a79d70448190ada4d4" compoundref="d6/d1e/bodyflex_8cpp" startline="49" endline="62">mknix::FlexBody::initialize</referencedby>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a3819e507043e7173b307e0a8c4d71f4d" compoundref="d6/d1e/bodyflex_8cpp" startline="89" endline="101">mknix::FlexBody::addPoint</referencedby>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a35d251c9e9329d388936af27eee5b5ff" compoundref="dd/dbc/bodyflex_8h" startline="51" endline="54">mknix::FlexBody::getNode</referencedby>
        <referencedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1ae3f612bf542ac40c5a3d531760f12edd" compoundref="d7/dfd/bodyflexframegalerkin_8cpp" startline="180" endline="229">mknix::FlexFrameGalerkin::outputStep</referencedby>
        <referencedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a031a130b73e3fe0fc862393f94d235cb" compoundref="db/dcf/bodyflexglobalgalerkin_8cpp" startline="161" endline="204">mknix::FlexGlobalGalerkin::outputStep</referencedby>
        <referencedby refid="d0/d13/classmknix_1_1_rigid_body_1ad0295b9c8e71166c1ec6b1c0ab0335be" compoundref="da/d4a/bodyrigid_8cpp" startline="97" endline="118">mknix::RigidBody::getNode</referencedby>
        <referencedby refid="d0/d13/classmknix_1_1_rigid_body_1a605ed074fed7570c6620a6a6f6cd4bb0" compoundref="da/d4a/bodyrigid_8cpp" startline="174" endline="208">mknix::RigidBody::outputStep</referencedby>
        <referencedby refid="d0/d13/classmknix_1_1_rigid_body_1a0b0df6ee53217187a301f224b8fe0d92" compoundref="da/d4a/bodyrigid_8cpp" startline="210" endline="241">mknix::RigidBody::outputToFile</referencedby>
        <referencedby refid="d6/dd9/classmknix_1_1_rigid_bar_1a1f05aae37c654229c4f6c3ef32944125" compoundref="d5/d29/bodyrigid1_d_8cpp" startline="110" endline="117">mknix::RigidBar::addNode</referencedby>
        <referencedby refid="d6/d6d/classmknix_1_1_rigid_body2_d_1a62a44eed6a60518564005506cefc7595" compoundref="dc/d0c/bodyrigid2_d_8cpp" startline="132" endline="141">mknix::RigidBody2D::addNode</referencedby>
        <referencedby refid="dd/d2a/classmknix_1_1_rigid_body3_d_1a276784501249da5c366003a27afba4ea" compoundref="d0/da1/bodyrigid3_d_8cpp" startline="174" endline="184">mknix::RigidBody3D::addNode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1a4c8d492ccd9472119b5f8b47392c1dcd" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> * &gt;</type>
        <definition>std::vector&lt;Node *&gt; mknix::Body::bondedBodyNodes</definition>
        <argsstring></argsstring>
        <name>bondedBodyNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="212" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="212" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a054b7576fbd1e8c39f02105b8572c372" compoundref="d1/d5f/body_8cpp" startline="73" endline="121">initialize</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a29eb7ca2168e7674ddb553a85d43a8d8" compoundref="d0/d77/body_8h" startline="103" endline="106">addNodes</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="d8/d6b/classmknix_1_1_boundary_group" kindref="compound">BoundaryGroup</ref> * &gt;</type>
        <definition>std::map&lt;std::string, BoundaryGroup *&gt; mknix::Body::boundaryGroups</definition>
        <argsstring></argsstring>
        <name>boundaryGroups</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="213" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="213" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1ad58a0a50a821e1adaa5abd1320e5a837" compoundref="d1/d5f/body_8cpp" startline="46" endline="65">~Body</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a054b7576fbd1e8c39f02105b8572c372" compoundref="d1/d5f/body_8cpp" startline="73" endline="121">initialize</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a2251d4224fdaeef6c78ee3edce4d94fe" compoundref="d1/d5f/body_8cpp" startline="156" endline="168">calcExternalHeat</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a7b8c3fab4eaa4ecba277317fa7bfb0f3" compoundref="d1/d5f/body_8cpp" startline="205" endline="216">assembleExternalHeat</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1ab83a1a1e344d3cacb0319da5f579ce93" compoundref="d0/d77/body_8h" startline="162" endline="165">addBoundaryGroup</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a8ee89e6b0f3bf8bbb20a3435e5a42c3d" compoundref="d0/d77/body_8h" startline="167" endline="171">addNodeToBoundaryGroup</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1ae9c1eb483544a2a0c113dae3843184fe" compoundref="d0/d77/body_8h" startline="173" endline="176">addCellToBoundaryGroup</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1ad3c25b3400585c33a55e82ba8898f760" compoundref="d0/d77/body_8h" startline="178" endline="181">setLoadThermalInBoundaryGroup</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1a49d2061c709f04eacd6bc1ad2abe8e92" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
        <definition>std::vector&lt;std::vector&lt;int&gt; &gt; mknix::Body::boundaryConnectivity</definition>
        <argsstring></argsstring>
        <name>boundaryConnectivity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="214" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="214" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a65fb5dd34d3a6925f611f7ea49da5cd0" compoundref="d1/d5f/body_8cpp" startline="267" endline="309">outputToFile</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a9b3e566b0c8758701f1583667caf6657" compoundref="d1/d5f/body_8cpp" startline="311" endline="314">addBoundaryConnectivity</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" prot="protected" static="no" mutable="no">
        <type>std::map&lt; <ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *, <ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> * &gt;</type>
        <definition>std::map&lt;Point *, Point *&gt; mknix::Body::linearBoundary</definition>
        <argsstring></argsstring>
        <name>linearBoundary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map of linear boundary. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="215" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="215" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a023da531b8383f798f4ef31bad1cff60" compoundref="d0/d77/body_8h" startline="128" endline="133">addBoundaryLine</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1aa7de934eb85ec4e68741d0c7395a9a10" compoundref="d0/d77/body_8h" startline="147" endline="150">getBoundarySize</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a030d73d6f97c9fc81220ca0d21cfa4c1" compoundref="d0/d77/body_8h" startline="152" endline="155">getBoundaryFirstNode</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1abadb51ea072fcd48be388467507c4fb0" compoundref="d0/d77/body_8h" startline="157" endline="160">getBoundaryNextNode</referencedby>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a504be54b6f3009687ed85d17d5ade510" compoundref="d6/d1e/bodyflex_8cpp" startline="155" endline="230">mknix::FlexBody::writeBodyInfo</referencedby>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1af17d65a1eba1f2de409ce43d88904751" compoundref="d6/d1e/bodyflex_8cpp" startline="233" endline="238">mknix::FlexBody::writeBoundaryNodes</referencedby>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a258ec4de12c53390875e731cace33219" compoundref="d6/d1e/bodyflex_8cpp" startline="240" endline="250">mknix::FlexBody::writeBoundaryConnectivity</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" prot="protected" static="no" mutable="no">
        <type>std::map&lt; int, <ref refid="db/dd4/classmknix_1_1_cell" kindref="compound">Cell</ref> * &gt;</type>
        <definition>std::map&lt;int, Cell *&gt; mknix::Body::cells</definition>
        <argsstring></argsstring>
        <name>cells</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Map of integration cells. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="217" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="217" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1ad58a0a50a821e1adaa5abd1320e5a837" compoundref="d1/d5f/body_8cpp" startline="46" endline="65">~Body</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a054b7576fbd1e8c39f02105b8572c372" compoundref="d1/d5f/body_8cpp" startline="73" endline="121">initialize</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1acd598d48de1ed25dbbf11a438154f3d9" compoundref="d1/d5f/body_8cpp" startline="128" endline="135">calcCapacityMatrix</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1af3b11d33d15d6b2411bca681ddd10b9c" compoundref="d1/d5f/body_8cpp" startline="142" endline="149">calcConductivityMatrix</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a2251d4224fdaeef6c78ee3edce4d94fe" compoundref="d1/d5f/body_8cpp" startline="156" endline="168">calcExternalHeat</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a073f28930ce01dbf40244625538326ce" compoundref="d1/d5f/body_8cpp" startline="176" endline="183">assembleCapacityMatrix</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a7185066ed04c51946b256412ee92c00c" compoundref="d1/d5f/body_8cpp" startline="191" endline="198">assembleConductivityMatrix</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a7b8c3fab4eaa4ecba277317fa7bfb0f3" compoundref="d1/d5f/body_8cpp" startline="205" endline="216">assembleExternalHeat</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a60025d1f29dad28094719a92335b0450" compoundref="d0/d77/body_8h" startline="183" endline="186">getCellLastNumber</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1abb4237e7f457287766e29bfe0cbb0f01" compoundref="d0/d77/body_8h" startline="188" endline="191">addCell</referencedby>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a504be54b6f3009687ed85d17d5ade510" compoundref="d6/d1e/bodyflex_8cpp" startline="155" endline="230">mknix::FlexBody::writeBodyInfo</referencedby>
        <referencedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1ad11cf5adf433ec3ed3b0bf205fd0adda" compoundref="d7/dfd/bodyflexframegalerkin_8cpp" startline="43" endline="53">mknix::FlexFrameGalerkin::calcMassMatrix</referencedby>
        <referencedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1ae58a90cc7c8bb1f00012f6aa49c3271d" compoundref="d7/dfd/bodyflexframegalerkin_8cpp" startline="55" endline="75">mknix::FlexFrameGalerkin::calcInternalForces</referencedby>
        <referencedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1a01c9230736b636729edf5b8c6a206d82" compoundref="d7/dfd/bodyflexframegalerkin_8cpp" startline="77" endline="87">mknix::FlexFrameGalerkin::calcExternalForces</referencedby>
        <referencedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1a87a87843237896446126a3bbbde63ae3" compoundref="d7/dfd/bodyflexframegalerkin_8cpp" startline="89" endline="109">mknix::FlexFrameGalerkin::calcTangentMatrix</referencedby>
        <referencedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1ab7f2e487dd295e1bb1bf27105fc598c1" compoundref="d7/dfd/bodyflexframegalerkin_8cpp" startline="162" endline="171">mknix::FlexFrameGalerkin::assembleTangentMatrix</referencedby>
        <referencedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1ae3f612bf542ac40c5a3d531760f12edd" compoundref="d7/dfd/bodyflexframegalerkin_8cpp" startline="180" endline="229">mknix::FlexFrameGalerkin::outputStep</referencedby>
        <referencedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ae5bb8c27e7494b233a96d971833a0d0d" compoundref="db/dcf/bodyflexglobalgalerkin_8cpp" startline="43" endline="52">mknix::FlexGlobalGalerkin::calcMassMatrix</referencedby>
        <referencedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ad9cbe937a3795ad5f9c5bd1990a14731" compoundref="db/dcf/bodyflexglobalgalerkin_8cpp" startline="54" endline="70">mknix::FlexGlobalGalerkin::calcInternalForces</referencedby>
        <referencedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a2ed7079f0f2674c3556ff8dbbf3a63d3" compoundref="db/dcf/bodyflexglobalgalerkin_8cpp" startline="72" endline="80">mknix::FlexGlobalGalerkin::calcExternalForces</referencedby>
        <referencedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a723916e65683c2ed77385ce0e3c3bd1a" compoundref="db/dcf/bodyflexglobalgalerkin_8cpp" startline="82" endline="98">mknix::FlexGlobalGalerkin::calcTangentMatrix</referencedby>
        <referencedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ab5ddc03826dcf8dea98fd53093b2dfe7" compoundref="db/dcf/bodyflexglobalgalerkin_8cpp" startline="145" endline="152">mknix::FlexGlobalGalerkin::assembleTangentMatrix</referencedby>
        <referencedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a031a130b73e3fe0fc862393f94d235cb" compoundref="db/dcf/bodyflexglobalgalerkin_8cpp" startline="161" endline="204">mknix::FlexGlobalGalerkin::outputStep</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1a64fa35111fa3252c60971811dec421de" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mknix::Body::computeEnergy</definition>
        <argsstring></argsstring>
        <name>computeEnergy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="219" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="219" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" compoundref="d1/d5f/body_8cpp" startline="232" endline="259">outputStep</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1a2b8de3291a8b2678b1c989f4d6c52b89" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mknix::Body::isThermal</definition>
        <argsstring></argsstring>
        <name>isThermal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="220" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="220" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" compoundref="d1/d5f/body_8cpp" startline="232" endline="259">outputStep</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a863cfa7288a25874f4e4ce6d329fc26b" compoundref="d0/d77/body_8h" startline="82" endline="85">setMechanical</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1a29e955d93a12919d2adfec07a0f2f566" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; * &gt;</type>
        <definition>std::vector&lt;lmx::Vector&lt;data_type&gt; *&gt; mknix::Body::temperature</definition>
        <argsstring></argsstring>
        <name>temperature</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="221" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="221" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1ad58a0a50a821e1adaa5abd1320e5a837" compoundref="d1/d5f/body_8cpp" startline="46" endline="65">~Body</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" compoundref="d1/d5f/body_8cpp" startline="232" endline="259">outputStep</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a65fb5dd34d3a6925f611f7ea49da5cd0" compoundref="d1/d5f/body_8cpp" startline="267" endline="309">outputToFile</referencedby>
      </memberdef>
      <memberdef kind="variable" id="dd/de3/classmknix_1_1_body_1aef21ef0ead5775597ca38a9304a26682" prot="protected" static="no" mutable="no">
        <type><ref refid="d2/d5c/classmknix_1_1_load_thermal_body" kindref="compound">LoadThermalBody</ref> *</type>
        <definition>LoadThermalBody* mknix::Body::loadThermalBody</definition>
        <argsstring></argsstring>
        <name>loadThermalBody</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="222" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="222" bodyend="-1"/>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a2251d4224fdaeef6c78ee3edce4d94fe" compoundref="d1/d5f/body_8cpp" startline="156" endline="168">calcExternalHeat</referencedby>
        <referencedby refid="dd/de3/classmknix_1_1_body_1a95a6a5e78013a9ca160842915f3a4703" compoundref="d0/d77/body_8h" startline="202" endline="205">setLoadThermal</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a5f11ba30f14169c567d8e3f84afbbf40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::Body::Body</definition>
        <argsstring>()</argsstring>
        <name>Body</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="50" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="26" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a121c49df553ac35ca246052168eccb7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::Body::Body</definition>
        <argsstring>(std::string)</argsstring>
        <name>Body</name>
        <param>
          <type>std::string</type>
          <defname>title_in</defname>
        </param>
        <briefdescription>
<para>Constructor with 1 parameter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>title_in</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of body in the system. Will be the same as the associated material body </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="52" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1ad58a0a50a821e1adaa5abd1320e5a837" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>mknix::Body::~Body</definition>
        <argsstring>()</argsstring>
        <name>~Body</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="54" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="46" bodyend="65"/>
        <references refid="dd/de3/classmknix_1_1_body_1a29e955d93a12919d2adfec07a0f2f566" compoundref="d0/d77/body_8h" startline="221">temperature</references>
        <references refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" compoundref="d0/d77/body_8h" startline="217">cells</references>
        <references refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" compoundref="d0/d77/body_8h" startline="213">boundaryGroups</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a603ed0a11eee91957b2655a0e4667cd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>std::string</type>
        <definition>virtual std::string mknix::Body::getType</definition>
        <argsstring>()=0</argsstring>
        <name>getType</name>
        <reimplementedby refid="dd/d2a/classmknix_1_1_rigid_body3_d_1a3cdb37910a3ed061017926d67932ad06">getType</reimplementedby>
        <reimplementedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a31c93b0ce740217ce4cd12e71646d8cf">getType</reimplementedby>
        <reimplementedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1ad383da86bfdaa68f2178fc87eb664c87">getType</reimplementedby>
        <reimplementedby refid="d6/d6d/classmknix_1_1_rigid_body2_d_1a36d7142c5123c4055c019109fb6169dc">getType</reimplementedby>
        <reimplementedby refid="d6/dd9/classmknix_1_1_rigid_bar_1acc95a2895043626253a4bb8ee1eb341a">getType</reimplementedby>
        <reimplementedby refid="d8/de9/classmknix_1_1_rigid_body_mass_point_1aa97f367f1f1701f5d7981c994a96fb5e">getType</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="56" column="1"/>
        <referencedby refid="d0/d13/classmknix_1_1_rigid_body_1aec0efdaa5c27b8e1611af7c9f047497a" compoundref="da/d4a/bodyrigid_8cpp" startline="243" endline="255">mknix::RigidBody::writeBodyInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a054b7576fbd1e8c39f02105b8572c372" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::initialize</definition>
        <argsstring>()</argsstring>
        <name>initialize</name>
        <reimplementedby refid="dd/d8d/classmknix_1_1_flex_body_1aa6eeb315791be5a79d70448190ada4d4">initialize</reimplementedby>
        <briefdescription>
<para>Cascade initialization funtion. Calls the initialize methods for each of the Cells and tells them to compute their shapefunction values. Both loops are parallelized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="58" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="73" bodyend="121"/>
        <references refid="dd/de3/classmknix_1_1_body_1a55bd3106cf4c12c8b4644e48b412f3c9" compoundref="d0/d77/body_8h" startline="210">lastNode</references>
        <references refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" compoundref="d0/d77/body_8h" startline="211">nodes</references>
        <references refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" compoundref="d0/d77/body_8h" startline="217">cells</references>
        <references refid="dd/de3/classmknix_1_1_body_1a4c8d492ccd9472119b5f8b47392c1dcd" compoundref="d0/d77/body_8h" startline="212">bondedBodyNodes</references>
        <references refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" compoundref="d0/d77/body_8h" startline="213">boundaryGroups</references>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1aa6eeb315791be5a79d70448190ada4d4" compoundref="d6/d1e/bodyflex_8cpp" startline="49" endline="62">mknix::FlexBody::initialize</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1acd598d48de1ed25dbbf11a438154f3d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::calcCapacityMatrix</definition>
        <argsstring>()</argsstring>
        <name>calcCapacityMatrix</name>
        <briefdescription>
<para>Computes the local Capacity of the material body by calling each cell&apos;s cascade function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="60" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="128" bodyend="135"/>
        <references refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" compoundref="d0/d77/body_8h" startline="217">cells</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1af3b11d33d15d6b2411bca681ddd10b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::calcConductivityMatrix</definition>
        <argsstring>()</argsstring>
        <name>calcConductivityMatrix</name>
        <briefdescription>
<para>Computes the local Conductivity of the material body by calling each cell&apos;s cascade function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="62" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="142" bodyend="149"/>
        <references refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" compoundref="d0/d77/body_8h" startline="217">cells</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a2251d4224fdaeef6c78ee3edce4d94fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::calcExternalHeat</definition>
        <argsstring>()</argsstring>
        <name>calcExternalHeat</name>
        <briefdescription>
<para>Computes the local volumetric heat vector of the material body by calling each cell&apos;s cascade function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="64" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="156" bodyend="168"/>
        <references refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" compoundref="d0/d77/body_8h" startline="217">cells</references>
        <references refid="dd/de3/classmknix_1_1_body_1aef21ef0ead5775597ca38a9304a26682" compoundref="d0/d77/body_8h" startline="222">loadThermalBody</references>
        <references refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" compoundref="d0/d77/body_8h" startline="213">boundaryGroups</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a073f28930ce01dbf40244625538326ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::assembleCapacityMatrix</definition>
        <argsstring>(lmx::Matrix&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleCapacityMatrix</name>
        <param>
          <type><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>globalCapacity</defname>
        </param>
        <briefdescription>
<para>Assembles the local conductivity into the global matrix by calling each cell&apos;s cascade function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>globalCapacity</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the global matrix of the thermal simulation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="66" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="176" bodyend="183"/>
        <references refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" compoundref="d0/d77/body_8h" startline="217">cells</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a7185066ed04c51946b256412ee92c00c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::assembleConductivityMatrix</definition>
        <argsstring>(lmx::Matrix&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleConductivityMatrix</name>
        <param>
          <type><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>globalConductivity</defname>
        </param>
        <briefdescription>
<para>Assembles the local conductivity into the global matrix by calling each cell&apos;s cascade function. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>globalConductivity</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the global matrix of the thermal simulation. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="68" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="191" bodyend="198"/>
        <references refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" compoundref="d0/d77/body_8h" startline="217">cells</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a7b8c3fab4eaa4ecba277317fa7bfb0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::assembleExternalHeat</definition>
        <argsstring>(lmx::Vector&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleExternalHeat</name>
        <param>
          <type><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>globalExternalHeat</defname>
        </param>
        <briefdescription>
<para>Assembles the local volumetric heat into the global heat load vector by calling each cell&apos;s cascade function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="70" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="205" bodyend="216"/>
        <references refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" compoundref="d0/d77/body_8h" startline="217">cells</references>
        <references refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" compoundref="d0/d77/body_8h" startline="213">boundaryGroups</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1ad34fa07c6620c9fcc2268bfdbfd42194" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::calcMassMatrix</definition>
        <argsstring>()=0</argsstring>
        <name>calcMassMatrix</name>
        <reimplementedby refid="d8/de9/classmknix_1_1_rigid_body_mass_point_1aed37447f963c4393b30febe281589b99">calcMassMatrix</reimplementedby>
        <reimplementedby refid="dd/d2a/classmknix_1_1_rigid_body3_d_1a257d9b0bb9fe27664227270cd73194a4">calcMassMatrix</reimplementedby>
        <reimplementedby refid="d6/d6d/classmknix_1_1_rigid_body2_d_1a9ee8593743364a723107d307c12d8ad1">calcMassMatrix</reimplementedby>
        <reimplementedby refid="d6/dd9/classmknix_1_1_rigid_bar_1a3d368a1a10b600179fbb7e901472c301">calcMassMatrix</reimplementedby>
        <reimplementedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ae5bb8c27e7494b233a96d971833a0d0d">calcMassMatrix</reimplementedby>
        <reimplementedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1ad11cf5adf433ec3ed3b0bf205fd0adda">calcMassMatrix</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a71d21e817523058098bcec62fb377187" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::calcExternalForces</definition>
        <argsstring>()=0</argsstring>
        <name>calcExternalForces</name>
        <reimplementedby refid="d8/de9/classmknix_1_1_rigid_body_mass_point_1a281842fc7cf1367bbed4c5e477ac8da9">calcExternalForces</reimplementedby>
        <reimplementedby refid="dd/d2a/classmknix_1_1_rigid_body3_d_1a66bff0110ce5d201875f068050c84c96">calcExternalForces</reimplementedby>
        <reimplementedby refid="d6/d6d/classmknix_1_1_rigid_body2_d_1a2d1b7d48c98c3e0ef63dc2c975637793">calcExternalForces</reimplementedby>
        <reimplementedby refid="d6/dd9/classmknix_1_1_rigid_bar_1a4325fbe1df7832ce09bd2bf72b00cf67">calcExternalForces</reimplementedby>
        <reimplementedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a2ed7079f0f2674c3556ff8dbbf3a63d3">calcExternalForces</reimplementedby>
        <reimplementedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1a01c9230736b636729edf5b8c6a206d82">calcExternalForces</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="74" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1acd6c47f4e0a25e927141cb325df896a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::assembleMassMatrix</definition>
        <argsstring>(lmx::Matrix&lt; data_type &gt; &amp;)=0</argsstring>
        <name>assembleMassMatrix</name>
        <reimplementedby refid="d0/d13/classmknix_1_1_rigid_body_1ac20200b40e6e222261bb8257e339d7b4">assembleMassMatrix</reimplementedby>
        <reimplementedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a689a56babe9734eb504a9c948b6a3587">assembleMassMatrix</reimplementedby>
        <reimplementedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1a0552eca6a0212ebf7248e1d40c9b4304">assembleMassMatrix</reimplementedby>
        <param>
          <type><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="76" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a46a17ef341d6ea217e1548108a4e9efc" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::assembleExternalForces</definition>
        <argsstring>(lmx::Vector&lt; data_type &gt; &amp;)=0</argsstring>
        <name>assembleExternalForces</name>
        <reimplementedby refid="d0/d13/classmknix_1_1_rigid_body_1a18c7ffa5b9f2d3df008a92f421404fac">assembleExternalForces</reimplementedby>
        <reimplementedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1acc0254dbedc2543be9051aab1acb7d99">assembleExternalForces</reimplementedby>
        <reimplementedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1a1a3ebbc84b363ce243bbb7a5ed5d9ae9">assembleExternalForces</reimplementedby>
        <param>
          <type><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a7a59c0a2063ce89772d24e0fc7118dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Body::setTemperature</definition>
        <argsstring>(double)</argsstring>
        <name>setTemperature</name>
        <param>
          <type>double</type>
          <defname>temp_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="80" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="218" bodyend="224"/>
        <references refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" compoundref="d0/d77/body_8h" startline="211">nodes</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a863cfa7288a25874f4e4ce6d329fc26b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::setMechanical</definition>
        <argsstring>()</argsstring>
        <name>setMechanical</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="82" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="82" bodyend="85"/>
        <references refid="dd/de3/classmknix_1_1_body_1a2b8de3291a8b2678b1c989f4d6c52b89" compoundref="d0/d77/body_8h" startline="220">isThermal</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a689970a0729d557ed56492bbfeae4ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::setOutput</definition>
        <argsstring>(std::string)=0</argsstring>
        <name>setOutput</name>
        <reimplementedby refid="d0/d13/classmknix_1_1_rigid_body_1a7d3b331008d65caf46f5575fec6943b5">setOutput</reimplementedby>
        <reimplementedby refid="dd/d8d/classmknix_1_1_flex_body_1ab863f9c782ccffbcea5c5e485fff52bc">setOutput</reimplementedby>
        <param>
          <type>std::string</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a2655307ec61a79f8d2e5716c984a44df" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::outputStep</definition>
        <argsstring>(const lmx::Vector&lt; data_type &gt; &amp;, const lmx::Vector&lt; data_type &gt; &amp;)=0</argsstring>
        <name>outputStep</name>
        <reimplementedby refid="d0/d13/classmknix_1_1_rigid_body_1a721e9f81cfba9a3d425df36f7cf5ef71">outputStep</reimplementedby>
        <reimplementedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a031a130b73e3fe0fc862393f94d235cb">outputStep</reimplementedby>
        <reimplementedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1ae3f612bf542ac40c5a3d531760f12edd">outputStep</reimplementedby>
        <param>
          <type>const <ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
        </param>
        <param>
          <type>const <ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a0570075194360f453b763866969548e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::outputStep</definition>
        <argsstring>(const lmx::Vector&lt; data_type &gt; &amp;)=0</argsstring>
        <name>outputStep</name>
        <reimplementedby refid="d0/d13/classmknix_1_1_rigid_body_1a605ed074fed7570c6620a6a6f6cd4bb0">outputStep</reimplementedby>
        <reimplementedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a1882efa0a8f8c8832f6116b8f7874d2a">outputStep</reimplementedby>
        <reimplementedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1adc9bc8c1c277474fe2f62b49883c790a">outputStep</reimplementedby>
        <param>
          <type>const <ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::outputStep</definition>
        <argsstring>()</argsstring>
        <name>outputStep</name>
        <briefdescription>
<para>Postprocess and store thermal step results for any analysis. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="94" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="232" bodyend="259"/>
        <references refid="dd/de3/classmknix_1_1_body_1a2b8de3291a8b2678b1c989f4d6c52b89" compoundref="d0/d77/body_8h" startline="220">isThermal</references>
        <references refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" compoundref="d0/d77/body_8h" startline="211">nodes</references>
        <references refid="dd/de3/classmknix_1_1_body_1a29e955d93a12919d2adfec07a0f2f566" compoundref="d0/d77/body_8h" startline="221">temperature</references>
        <references refid="dd/de3/classmknix_1_1_body_1a64fa35111fa3252c60971811dec421de" compoundref="d0/d77/body_8h" startline="219">computeEnergy</references>
        <referencedby refid="db/d6e/classmknix_1_1_flex_frame_galerkin_1ae3f612bf542ac40c5a3d531760f12edd" compoundref="d7/dfd/bodyflexframegalerkin_8cpp" startline="180" endline="229">mknix::FlexFrameGalerkin::outputStep</referencedby>
        <referencedby refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a031a130b73e3fe0fc862393f94d235cb" compoundref="db/dcf/bodyflexglobalgalerkin_8cpp" startline="161" endline="204">mknix::FlexGlobalGalerkin::outputStep</referencedby>
        <referencedby refid="d0/d13/classmknix_1_1_rigid_body_1a721e9f81cfba9a3d425df36f7cf5ef71" compoundref="da/d4a/bodyrigid_8cpp" startline="122" endline="172">mknix::RigidBody::outputStep</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a65fb5dd34d3a6925f611f7ea49da5cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::outputToFile</definition>
        <argsstring>(std::ofstream *)</argsstring>
        <name>outputToFile</name>
        <reimplementedby refid="d0/d13/classmknix_1_1_rigid_body_1a0b0df6ee53217187a301f224b8fe0d92">outputToFile</reimplementedby>
        <reimplementedby refid="dd/d8d/classmknix_1_1_flex_body_1a1cf57f024248bbb196e91aac9b9ab9fe">outputToFile</reimplementedby>
        <param>
          <type>std::ofstream *</type>
          <defname>outFile</defname>
        </param>
        <briefdescription>
<para>Streams the data stored during the analysis to a file. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>outFile</parametername>
</parameternamelist>
<parameterdescription>
<para>Output files </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="96" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="267" bodyend="309"/>
        <references refid="dd/de3/classmknix_1_1_body_1a49d2061c709f04eacd6bc1ad2abe8e92" compoundref="d0/d77/body_8h" startline="214">boundaryConnectivity</references>
        <references refid="dd/de3/classmknix_1_1_body_1a3c05cdff2d5f2b150046cd734d0ed7ce" compoundref="d0/d77/body_8h" startline="209">title</references>
        <references refid="dd/de3/classmknix_1_1_body_1a29e955d93a12919d2adfec07a0f2f566" compoundref="d0/d77/body_8h" startline="221">temperature</references>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a1cf57f024248bbb196e91aac9b9ab9fe" compoundref="d6/d1e/bodyflex_8cpp" startline="128" endline="153">mknix::FlexBody::outputToFile</referencedby>
        <referencedby refid="d0/d13/classmknix_1_1_rigid_body_1a0b0df6ee53217187a301f224b8fe0d92" compoundref="da/d4a/bodyrigid_8cpp" startline="210" endline="241">mknix::RigidBody::outputToFile</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1abf7eec507e5fc918e4901864a6db0f84" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::addNode</definition>
        <argsstring>(Node *node_in)</argsstring>
        <name>addNode</name>
        <reimplementedby refid="dd/d2a/classmknix_1_1_rigid_body3_d_1a276784501249da5c366003a27afba4ea">addNode</reimplementedby>
        <reimplementedby refid="d6/d6d/classmknix_1_1_rigid_body2_d_1a62a44eed6a60518564005506cefc7595">addNode</reimplementedby>
        <reimplementedby refid="d6/dd9/classmknix_1_1_rigid_bar_1a1f05aae37c654229c4f6c3ef32944125">addNode</reimplementedby>
        <param>
          <type><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> *</type>
          <declname>node_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="98" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="98" bodyend="101"/>
        <references refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" compoundref="d0/d77/body_8h" startline="211">nodes</references>
        <referencedby refid="d6/dd9/classmknix_1_1_rigid_bar_1a1f05aae37c654229c4f6c3ef32944125" compoundref="d5/d29/bodyrigid1_d_8cpp" startline="110" endline="117">mknix::RigidBar::addNode</referencedby>
        <referencedby refid="d6/d6d/classmknix_1_1_rigid_body2_d_1a62a44eed6a60518564005506cefc7595" compoundref="dc/d0c/bodyrigid2_d_8cpp" startline="132" endline="141">mknix::RigidBody2D::addNode</referencedby>
        <referencedby refid="dd/d2a/classmknix_1_1_rigid_body3_d_1a276784501249da5c366003a27afba4ea" compoundref="d0/da1/bodyrigid3_d_8cpp" startline="174" endline="184">mknix::RigidBody3D::addNode</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a29eb7ca2168e7674ddb553a85d43a8d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Body::addNodes</definition>
        <argsstring>(std::vector&lt; Node * &gt; &amp;nodes_in)</argsstring>
        <name>addNodes</name>
        <param>
          <type>std::vector&lt; <ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> * &gt; &amp;</type>
          <declname>nodes_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="103" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="103" bodyend="106"/>
        <references refid="dd/de3/classmknix_1_1_body_1a4c8d492ccd9472119b5f8b47392c1dcd" compoundref="d0/d77/body_8h" startline="212">bondedBodyNodes</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1af1e6e6589c5dfb4016e1e6af2225ae5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int mknix::Body::getNodesSize</definition>
        <argsstring>()</argsstring>
        <name>getNodesSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="108" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="108" bodyend="111"/>
        <references refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" compoundref="d0/d77/body_8h" startline="211">nodes</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1aba386146267f71d398fb4dabb41a550c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> * &gt; &amp;</type>
        <definition>std::vector&lt;Node *&gt;&amp; mknix::Body::getNodes</definition>
        <argsstring>()</argsstring>
        <name>getNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="113" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="113" bodyend="116"/>
        <references refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" compoundref="d0/d77/body_8h" startline="211">nodes</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1abb933258861ddadd9d7c7792e9303e02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> *</type>
        <definition>virtual Node* mknix::Body::getNode</definition>
        <argsstring>(int node_number)</argsstring>
        <name>getNode</name>
        <reimplementedby refid="dd/d8d/classmknix_1_1_flex_body_1a35d251c9e9329d388936af27eee5b5ff">getNode</reimplementedby>
        <reimplementedby refid="d0/d13/classmknix_1_1_rigid_body_1ad0295b9c8e71166c1ec6b1c0ab0335be">getNode</reimplementedby>
        <param>
          <type>int</type>
          <declname>node_number</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="118" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="118" bodyend="121"/>
        <references refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" compoundref="d0/d77/body_8h" startline="211">nodes</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a95fad3fdd4c18a0adcbeba2891b55140" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> *</type>
        <definition>virtual Node* mknix::Body::getLastNode</definition>
        <argsstring>()</argsstring>
        <name>getLastNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="123" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="123" bodyend="126"/>
        <references refid="dd/de3/classmknix_1_1_body_1a55bd3106cf4c12c8b4644e48b412f3c9" compoundref="d0/d77/body_8h" startline="210">lastNode</references>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a504be54b6f3009687ed85d17d5ade510" compoundref="d6/d1e/bodyflex_8cpp" startline="155" endline="230">mknix::FlexBody::writeBodyInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a023da531b8383f798f4ef31bad1cff60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::addBoundaryLine</definition>
        <argsstring>(Point *node1, Point *node2)</argsstring>
        <name>addBoundaryLine</name>
        <param>
          <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
          <declname>node1</declname>
        </param>
        <param>
          <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
          <declname>node2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="128" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="128" bodyend="133"/>
        <references refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" compoundref="d0/d77/body_8h" startline="215">linearBoundary</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a9b3e566b0c8758701f1583667caf6657" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::addBoundaryConnectivity</definition>
        <argsstring>(std::vector&lt; int &gt; connectivity_in)</argsstring>
        <name>addBoundaryConnectivity</name>
        <param>
          <type>std::vector&lt; int &gt;</type>
          <declname>connectivity_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="135" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="311" bodyend="314"/>
        <references refid="dd/de3/classmknix_1_1_body_1a49d2061c709f04eacd6bc1ad2abe8e92" compoundref="d0/d77/body_8h" startline="214">boundaryConnectivity</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1aa7de934eb85ec4e68741d0c7395a9a10" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int mknix::Body::getBoundarySize</definition>
        <argsstring>()</argsstring>
        <name>getBoundarySize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="147" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="147" bodyend="150"/>
        <references refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" compoundref="d0/d77/body_8h" startline="215">linearBoundary</references>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a504be54b6f3009687ed85d17d5ade510" compoundref="d6/d1e/bodyflex_8cpp" startline="155" endline="230">mknix::FlexBody::writeBodyInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a030d73d6f97c9fc81220ca0d21cfa4c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
        <definition>virtual Point* mknix::Body::getBoundaryFirstNode</definition>
        <argsstring>()</argsstring>
        <name>getBoundaryFirstNode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="152" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="152" bodyend="155"/>
        <references refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" compoundref="d0/d77/body_8h" startline="215">linearBoundary</references>
        <referencedby refid="dd/d8d/classmknix_1_1_flex_body_1a504be54b6f3009687ed85d17d5ade510" compoundref="d6/d1e/bodyflex_8cpp" startline="155" endline="230">mknix::FlexBody::writeBodyInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1abadb51ea072fcd48be388467507c4fb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
        <definition>virtual Point* mknix::Body::getBoundaryNextNode</definition>
        <argsstring>(Point *node_in)</argsstring>
        <name>getBoundaryNextNode</name>
        <param>
          <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
          <declname>node_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="157" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="157" bodyend="160"/>
        <references refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" compoundref="d0/d77/body_8h" startline="215">linearBoundary</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1ab83a1a1e344d3cacb0319da5f579ce93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Body::addBoundaryGroup</definition>
        <argsstring>(std::string boundaryName_in)</argsstring>
        <name>addBoundaryGroup</name>
        <param>
          <type>std::string</type>
          <declname>boundaryName_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="162" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="162" bodyend="165"/>
        <references refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" compoundref="d0/d77/body_8h" startline="213">boundaryGroups</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a8ee89e6b0f3bf8bbb20a3435e5a42c3d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Body::addNodeToBoundaryGroup</definition>
        <argsstring>(int nodeNumber_in, std::string boundaryName_in)</argsstring>
        <name>addNodeToBoundaryGroup</name>
        <param>
          <type>int</type>
          <declname>nodeNumber_in</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>boundaryName_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="167" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="167" bodyend="171"/>
        <references refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" compoundref="d0/d77/body_8h" startline="211">nodes</references>
        <references refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" compoundref="d0/d77/body_8h" startline="213">boundaryGroups</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1ae9c1eb483544a2a0c113dae3843184fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Body::addCellToBoundaryGroup</definition>
        <argsstring>(CellBoundary *cell_in, std::string boundaryName_in)</argsstring>
        <name>addCellToBoundaryGroup</name>
        <param>
          <type><ref refid="d8/d1e/classmknix_1_1_cell_boundary" kindref="compound">CellBoundary</ref> *</type>
          <declname>cell_in</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>boundaryName_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="173" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="173" bodyend="176"/>
        <references refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" compoundref="d0/d77/body_8h" startline="213">boundaryGroups</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1ad3c25b3400585c33a55e82ba8898f760" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Body::setLoadThermalInBoundaryGroup</definition>
        <argsstring>(LoadThermalBoundary1D *load_in, std::string boundaryName_in)</argsstring>
        <name>setLoadThermalInBoundaryGroup</name>
        <param>
          <type><ref refid="df/df4/classmknix_1_1_load_thermal_boundary1_d" kindref="compound">LoadThermalBoundary1D</ref> *</type>
          <declname>load_in</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>boundaryName_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="178" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="178" bodyend="181"/>
        <references refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" compoundref="d0/d77/body_8h" startline="213">boundaryGroups</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a60025d1f29dad28094719a92335b0450" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int mknix::Body::getCellLastNumber</definition>
        <argsstring>()</argsstring>
        <name>getCellLastNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="183" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="183" bodyend="186"/>
        <references refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" compoundref="d0/d77/body_8h" startline="217">cells</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1abb4237e7f457287766e29bfe0cbb0f01" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::addCell</definition>
        <argsstring>(int num, Cell *cell_in)</argsstring>
        <name>addCell</name>
        <param>
          <type>int</type>
          <declname>num</declname>
        </param>
        <param>
          <type><ref refid="db/dd4/classmknix_1_1_cell" kindref="compound">Cell</ref> *</type>
          <declname>cell_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="188" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="188" bodyend="191"/>
        <references refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" compoundref="d0/d77/body_8h" startline="217">cells</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a25c23173ef74c5ef821f6850bc1d8861" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::writeBodyInfo</definition>
        <argsstring>(std::ofstream *)=0</argsstring>
        <name>writeBodyInfo</name>
        <reimplementedby refid="d0/d13/classmknix_1_1_rigid_body_1aec0efdaa5c27b8e1611af7c9f047497a">writeBodyInfo</reimplementedby>
        <reimplementedby refid="dd/d8d/classmknix_1_1_flex_body_1a504be54b6f3009687ed85d17d5ade510">writeBodyInfo</reimplementedby>
        <param>
          <type>std::ofstream *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1ac1b5b8a41f713a7d569598e43f9cde61" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::writeBoundaryNodes</definition>
        <argsstring>(std::vector&lt; Point * &gt; &amp;)=0</argsstring>
        <name>writeBoundaryNodes</name>
        <reimplementedby refid="d0/d13/classmknix_1_1_rigid_body_1a82d8d5b7abc4218fcab65e7f0dc266d8">writeBoundaryNodes</reimplementedby>
        <reimplementedby refid="dd/d8d/classmknix_1_1_flex_body_1af17d65a1eba1f2de409ce43d88904751">writeBoundaryNodes</reimplementedby>
        <param>
          <type>std::vector&lt; <ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> * &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1addb14e7d7db378199a0ece0707611129" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::writeBoundaryConnectivity</definition>
        <argsstring>(std::vector&lt; std::vector&lt; Point * &gt; &gt; &amp;)=0</argsstring>
        <name>writeBoundaryConnectivity</name>
        <reimplementedby refid="d0/d13/classmknix_1_1_rigid_body_1a127f3394edf38438e794bfed1a6ce0d8">writeBoundaryConnectivity</reimplementedby>
        <reimplementedby refid="dd/d8d/classmknix_1_1_flex_body_1a258ec4de12c53390875e731cace33219">writeBoundaryConnectivity</reimplementedby>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> * &gt; &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a5f58f8e5398bbacc973b046be600eb5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::Body::translate</definition>
        <argsstring>(double, double, double)</argsstring>
        <name>translate</name>
        <param>
          <type>double</type>
          <defname>x_in</defname>
        </param>
        <param>
          <type>double</type>
          <defname>y_in</defname>
        </param>
        <param>
          <type>double</type>
          <defname>z_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="199" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.cpp" bodystart="317" bodyend="324"/>
        <references refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" compoundref="d0/d77/body_8h" startline="211">nodes</references>
      </memberdef>
      <memberdef kind="function" id="dd/de3/classmknix_1_1_body_1a95a6a5e78013a9ca160842915f3a4703" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void mknix::Body::setLoadThermal</definition>
        <argsstring>(LoadThermalBody *theLoad)</argsstring>
        <name>setLoadThermal</name>
        <param>
          <type><ref refid="d2/d5c/classmknix_1_1_load_thermal_body" kindref="compound">LoadThermalBody</ref> *</type>
          <declname>theLoad</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="202" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="202" bodyend="205"/>
        <references refid="dd/de3/classmknix_1_1_body_1aef21ef0ead5775597ca38a9304a26682" compoundref="d0/d77/body_8h" startline="222">loadThermalBody</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>AUTHORS &lt;MAILS&gt; </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="458">
        <label>mknix::FlexGlobalGalerkin</label>
        <link refid="d6/d4a/classmknix_1_1_flex_global_galerkin"/>
        <childnode refid="456" relation="public-inheritance">
        </childnode>
      </node>
      <node id="457">
        <label>mknix::FlexFrameGalerkin</label>
        <link refid="db/d6e/classmknix_1_1_flex_frame_galerkin"/>
        <childnode refid="456" relation="public-inheritance">
        </childnode>
      </node>
      <node id="459">
        <label>mknix::RigidBody</label>
        <link refid="d0/d13/classmknix_1_1_rigid_body"/>
        <childnode refid="455" relation="public-inheritance">
        </childnode>
      </node>
      <node id="460">
        <label>mknix::RigidBar</label>
        <link refid="d6/dd9/classmknix_1_1_rigid_bar"/>
        <childnode refid="459" relation="public-inheritance">
        </childnode>
      </node>
      <node id="456">
        <label>mknix::FlexBody</label>
        <link refid="dd/d8d/classmknix_1_1_flex_body"/>
        <childnode refid="455" relation="public-inheritance">
        </childnode>
      </node>
      <node id="461">
        <label>mknix::RigidBody2D</label>
        <link refid="d6/d6d/classmknix_1_1_rigid_body2_d"/>
        <childnode refid="459" relation="public-inheritance">
        </childnode>
      </node>
      <node id="462">
        <label>mknix::RigidBody3D</label>
        <link refid="dd/d2a/classmknix_1_1_rigid_body3_d"/>
        <childnode refid="459" relation="public-inheritance">
        </childnode>
      </node>
      <node id="455">
        <label>mknix::Body</label>
        <link refid="dd/de3/classmknix_1_1_body"/>
      </node>
      <node id="463">
        <label>mknix::RigidBodyMassPoint</label>
        <link refid="d8/de9/classmknix_1_1_rigid_body_mass_point"/>
        <childnode refid="459" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="466">
        <label>mknix::Point</label>
        <link refid="d3/d19/classmknix_1_1_point"/>
        <childnode refid="467" relation="usage">
          <edgelabel>shapeFun</edgelabel>
        </childnode>
      </node>
      <node id="469">
        <label>mknix::LoadThermalBody</label>
        <link refid="d2/d5c/classmknix_1_1_load_thermal_body"/>
      </node>
      <node id="465">
        <label>mknix::Node</label>
        <link refid="d3/d25/classmknix_1_1_node"/>
        <childnode refid="466" relation="public-inheritance">
        </childnode>
      </node>
      <node id="467">
        <label>mknix::ShapeFunction</label>
        <link refid="dd/d8d/classmknix_1_1_shape_function"/>
        <childnode refid="468" relation="usage">
          <edgelabel>phi</edgelabel>
        </childnode>
        <childnode refid="466" relation="usage">
          <edgelabel>gp</edgelabel>
        </childnode>
      </node>
      <node id="468">
        <label>lmx::DenseMatrix&lt; double &gt;</label>
        <link refid="d2/d8d/classlmx_1_1_dense_matrix"/>
      </node>
      <node id="464">
        <label>mknix::Body</label>
        <link refid="dd/de3/classmknix_1_1_body"/>
        <childnode refid="465" relation="usage">
          <edgelabel>lastNode</edgelabel>
        </childnode>
        <childnode refid="469" relation="usage">
          <edgelabel>loadThermalBody</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/daniel/Projects/MkniX/src/system/body.h" line="47" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/body.h" bodystart="46" bodyend="224"/>
    <listofallmembers>
      <member refid="dd/de3/classmknix_1_1_body_1a9b3e566b0c8758701f1583667caf6657" prot="public" virt="virtual"><scope>mknix::Body</scope><name>addBoundaryConnectivity</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1ab83a1a1e344d3cacb0319da5f579ce93" prot="public" virt="non-virtual"><scope>mknix::Body</scope><name>addBoundaryGroup</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a023da531b8383f798f4ef31bad1cff60" prot="public" virt="virtual"><scope>mknix::Body</scope><name>addBoundaryLine</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1abb4237e7f457287766e29bfe0cbb0f01" prot="public" virt="virtual"><scope>mknix::Body</scope><name>addCell</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1ae9c1eb483544a2a0c113dae3843184fe" prot="public" virt="non-virtual"><scope>mknix::Body</scope><name>addCellToBoundaryGroup</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1abf7eec507e5fc918e4901864a6db0f84" prot="public" virt="virtual"><scope>mknix::Body</scope><name>addNode</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a29eb7ca2168e7674ddb553a85d43a8d8" prot="public" virt="non-virtual"><scope>mknix::Body</scope><name>addNodes</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a8ee89e6b0f3bf8bbb20a3435e5a42c3d" prot="public" virt="non-virtual"><scope>mknix::Body</scope><name>addNodeToBoundaryGroup</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a073f28930ce01dbf40244625538326ce" prot="public" virt="virtual"><scope>mknix::Body</scope><name>assembleCapacityMatrix</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a7185066ed04c51946b256412ee92c00c" prot="public" virt="virtual"><scope>mknix::Body</scope><name>assembleConductivityMatrix</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a46a17ef341d6ea217e1548108a4e9efc" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>assembleExternalForces</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a7b8c3fab4eaa4ecba277317fa7bfb0f3" prot="public" virt="virtual"><scope>mknix::Body</scope><name>assembleExternalHeat</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1acd6c47f4e0a25e927141cb325df896a9" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>assembleMassMatrix</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a5f11ba30f14169c567d8e3f84afbbf40" prot="public" virt="non-virtual"><scope>mknix::Body</scope><name>Body</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a121c49df553ac35ca246052168eccb7f" prot="public" virt="non-virtual"><scope>mknix::Body</scope><name>Body</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a4c8d492ccd9472119b5f8b47392c1dcd" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>bondedBodyNodes</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a49d2061c709f04eacd6bc1ad2abe8e92" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>boundaryConnectivity</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a36b757c3483aa0a65c064e2be0919bb0" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>boundaryGroups</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1acd598d48de1ed25dbbf11a438154f3d9" prot="public" virt="virtual"><scope>mknix::Body</scope><name>calcCapacityMatrix</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1af3b11d33d15d6b2411bca681ddd10b9c" prot="public" virt="virtual"><scope>mknix::Body</scope><name>calcConductivityMatrix</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a71d21e817523058098bcec62fb377187" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>calcExternalForces</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a2251d4224fdaeef6c78ee3edce4d94fe" prot="public" virt="virtual"><scope>mknix::Body</scope><name>calcExternalHeat</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1ad34fa07c6620c9fcc2268bfdbfd42194" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>calcMassMatrix</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>cells</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a64fa35111fa3252c60971811dec421de" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>computeEnergy</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a030d73d6f97c9fc81220ca0d21cfa4c1" prot="public" virt="virtual"><scope>mknix::Body</scope><name>getBoundaryFirstNode</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1abadb51ea072fcd48be388467507c4fb0" prot="public" virt="virtual"><scope>mknix::Body</scope><name>getBoundaryNextNode</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1aa7de934eb85ec4e68741d0c7395a9a10" prot="public" virt="virtual"><scope>mknix::Body</scope><name>getBoundarySize</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a60025d1f29dad28094719a92335b0450" prot="public" virt="non-virtual"><scope>mknix::Body</scope><name>getCellLastNumber</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a95fad3fdd4c18a0adcbeba2891b55140" prot="public" virt="virtual"><scope>mknix::Body</scope><name>getLastNode</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1abb933258861ddadd9d7c7792e9303e02" prot="public" virt="virtual"><scope>mknix::Body</scope><name>getNode</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1aba386146267f71d398fb4dabb41a550c" prot="public" virt="non-virtual"><scope>mknix::Body</scope><name>getNodes</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1af1e6e6589c5dfb4016e1e6af2225ae5f" prot="public" virt="virtual"><scope>mknix::Body</scope><name>getNodesSize</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a603ed0a11eee91957b2655a0e4667cd4" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>getType</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a054b7576fbd1e8c39f02105b8572c372" prot="public" virt="virtual"><scope>mknix::Body</scope><name>initialize</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a2b8de3291a8b2678b1c989f4d6c52b89" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>isThermal</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a55bd3106cf4c12c8b4644e48b412f3c9" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>lastNode</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1afd47959808ee823dff7457a535153ea0" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>linearBoundary</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1aef21ef0ead5775597ca38a9304a26682" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>loadThermalBody</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>nodes</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a2655307ec61a79f8d2e5716c984a44df" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>outputStep</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a0570075194360f453b763866969548e7" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>outputStep</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" prot="public" virt="virtual"><scope>mknix::Body</scope><name>outputStep</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a65fb5dd34d3a6925f611f7ea49da5cd0" prot="public" virt="virtual"><scope>mknix::Body</scope><name>outputToFile</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a95a6a5e78013a9ca160842915f3a4703" prot="public" virt="virtual"><scope>mknix::Body</scope><name>setLoadThermal</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1ad3c25b3400585c33a55e82ba8898f760" prot="public" virt="non-virtual"><scope>mknix::Body</scope><name>setLoadThermalInBoundaryGroup</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a863cfa7288a25874f4e4ce6d329fc26b" prot="public" virt="virtual"><scope>mknix::Body</scope><name>setMechanical</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a689970a0729d557ed56492bbfeae4ecd" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>setOutput</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a7a59c0a2063ce89772d24e0fc7118dd9" prot="public" virt="non-virtual"><scope>mknix::Body</scope><name>setTemperature</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a29e955d93a12919d2adfec07a0f2f566" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>temperature</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a3c05cdff2d5f2b150046cd734d0ed7ce" prot="protected" virt="non-virtual"><scope>mknix::Body</scope><name>title</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a5f58f8e5398bbacc973b046be600eb5f" prot="public" virt="virtual"><scope>mknix::Body</scope><name>translate</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1a25c23173ef74c5ef821f6850bc1d8861" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>writeBodyInfo</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1addb14e7d7db378199a0ece0707611129" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>writeBoundaryConnectivity</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1ac1b5b8a41f713a7d569598e43f9cde61" prot="public" virt="pure-virtual"><scope>mknix::Body</scope><name>writeBoundaryNodes</name></member>
      <member refid="dd/de3/classmknix_1_1_body_1ad58a0a50a821e1adaa5abd1320e5a837" prot="public" virt="virtual"><scope>mknix::Body</scope><name>~Body</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="dd/dbc/bodyflex_8h" kind="file" language="C++">
    <compoundname>bodyflex.h</compoundname>
    <includes refid="d0/d77/body_8h" local="yes">body.h</includes>
    <includes refid="d2/d91/point_8h" local="no">core/point.h</includes>
    <includedby refid="d7/dff/reader_8cpp" local="no">reader.cpp</includedby>
    <includedby refid="d2/d38/readerconstraints_8cpp" local="no">readerconstraints.cpp</includedby>
    <includedby refid="d6/d1e/bodyflex_8cpp" local="yes">bodyflex.cpp</includedby>
    <includedby refid="d6/d10/bodyflexframegalerkin_8h" local="yes">bodyflexframegalerkin.h</includedby>
    <includedby refid="df/d1c/bodyflexglobalgalerkin_8h" local="yes">bodyflexglobalgalerkin.h</includedby>
    <includedby refid="d6/df8/system_8cpp" local="yes">system.cpp</includedby>
    <incdepgraph>
      <node id="2458">
        <label>core/cellboundary.h</label>
        <link refid="db/d20/cellboundary_8h"/>
        <childnode refid="2459" relation="include">
        </childnode>
        <childnode refid="2460" relation="include">
        </childnode>
        <childnode refid="2453" relation="include">
        </childnode>
      </node>
      <node id="2460">
        <label>string</label>
      </node>
      <node id="2454">
        <label>map</label>
      </node>
      <node id="2453">
        <label>common.h</label>
        <link refid="dc/d54/common_8h"/>
        <childnode refid="2454" relation="include">
        </childnode>
        <childnode refid="2455" relation="include">
        </childnode>
      </node>
      <node id="2451">
        <label>bodyflex.h</label>
        <link refid="bodyflex.h"/>
        <childnode refid="2452" relation="include">
        </childnode>
        <childnode refid="2462" relation="include">
        </childnode>
      </node>
      <node id="2457">
        <label>boundarygroup.h</label>
        <link refid="dc/d6b/boundarygroup_8h"/>
        <childnode refid="2453" relation="include">
        </childnode>
        <childnode refid="2456" relation="include">
        </childnode>
      </node>
      <node id="2459">
        <label>vector</label>
      </node>
      <node id="2456">
        <label>LMX/lmx.h</label>
      </node>
      <node id="2461">
        <label>core/node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="2462" relation="include">
        </childnode>
        <childnode refid="2456" relation="include">
        </childnode>
      </node>
      <node id="2462">
        <label>point.h</label>
        <link refid="d2/d91/point_8h"/>
        <childnode refid="2459" relation="include">
        </childnode>
        <childnode refid="2454" relation="include">
        </childnode>
        <childnode refid="2460" relation="include">
        </childnode>
        <childnode refid="2453" relation="include">
        </childnode>
      </node>
      <node id="2452">
        <label>body.h</label>
        <link refid="d0/d77/body_8h"/>
        <childnode refid="2453" relation="include">
        </childnode>
        <childnode refid="2456" relation="include">
        </childnode>
        <childnode refid="2457" relation="include">
        </childnode>
        <childnode refid="2458" relation="include">
        </childnode>
        <childnode refid="2461" relation="include">
        </childnode>
      </node>
      <node id="2455">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2471">
        <label>bodyflexglobalgalerkin.cpp</label>
        <link refid="db/dcf/bodyflexglobalgalerkin_8cpp"/>
      </node>
      <node id="2468">
        <label>bodyflexframegalerkin.cpp</label>
        <link refid="d7/dfd/bodyflexframegalerkin_8cpp"/>
      </node>
      <node id="2463">
        <label>bodyflex.h</label>
        <link refid="bodyflex.h"/>
        <childnode refid="2464" relation="include">
        </childnode>
        <childnode refid="2465" relation="include">
        </childnode>
        <childnode refid="2466" relation="include">
        </childnode>
        <childnode refid="2467" relation="include">
        </childnode>
        <childnode refid="2469" relation="include">
        </childnode>
        <childnode refid="2472" relation="include">
        </childnode>
      </node>
      <node id="2467">
        <label>bodyflexframegalerkin.h</label>
        <link refid="d6/d10/bodyflexframegalerkin_8h"/>
        <childnode refid="2468" relation="include">
        </childnode>
      </node>
      <node id="2469">
        <label>bodyflexglobalgalerkin.h</label>
        <link refid="df/d1c/bodyflexglobalgalerkin_8h"/>
        <childnode refid="2470" relation="include">
        </childnode>
        <childnode refid="2471" relation="include">
        </childnode>
      </node>
      <node id="2466">
        <label>bodyflex.cpp</label>
        <link refid="d6/d1e/bodyflex_8cpp"/>
      </node>
      <node id="2472">
        <label>system.cpp</label>
        <link refid="d6/df8/system_8cpp"/>
      </node>
      <node id="2464">
        <label>reader.cpp</label>
        <link refid="d7/dff/reader_8cpp"/>
      </node>
      <node id="2470">
        <label>readerflex.cpp</label>
        <link refid="d6/daf/readerflex_8cpp"/>
      </node>
      <node id="2465">
        <label>readerconstraints.cpp</label>
        <link refid="d2/d38/readerconstraints_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="dd/d8d/classmknix_1_1_flex_body" prot="public">mknix::FlexBody</innerclass>
    <innernamespace refid="d2/dde/namespacemknix">mknix</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2015<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Nemesis.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Nemesis<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>Nemesis<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>Nemesis.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.<sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MKNIXFLEXBODY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MKNIXFLEXBODY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/d77/body_8h" kindref="compound">body.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d2/d91/point_8h" kindref="compound">core/point.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d2/dde/namespacemknix" kindref="compound">mknix</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Point;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Node;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="dd/d8d/classmknix_1_1_flex_body" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/d8d/classmknix_1_1_flex_body" kindref="compound">FlexBody</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body" kindref="compound">Body</ref><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a55ee3660c2f8d174e938972de2e62d36" kindref="member">FlexBody</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a55ee3660c2f8d174e938972de2e62d36" kindref="member">FlexBody</ref>(<sp/>std::string<sp/>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ad5d295b774afc3b265b629a859ea22d1" kindref="member">~FlexBody</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aa6eeb315791be5a79d70448190ada4d4" kindref="member">initialize</ref>(<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="dd/d8d/classmknix_1_1_flex_body_1a1e9314236b0ca0259fa3c696cde337d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref>*<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e9314236b0ca0259fa3c696cde337d0" kindref="member">getBodyPoint</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>point_number<sp/>)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;req<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>point_number<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>first:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a2471c30701defa7d1947fa7457c923cd" kindref="member">bodyPoints</ref>.front()-&gt;getNumber()<sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>last:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a2471c30701defa7d1947fa7457c923cd" kindref="member">bodyPoints</ref>.back()-&gt;getNumber()<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/d8d/classmknix_1_1_flex_body_1a2471c30701defa7d1947fa7457c923cd" kindref="member">bodyPoints</ref>[point_number];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="dd/d8d/classmknix_1_1_flex_body_1a35d251c9e9329d388936af27eee5b5ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref>*<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a35d251c9e9329d388936af27eee5b5ff" kindref="member">getNode</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_number<sp/>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(node_number&lt;0)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/d8d/classmknix_1_1_flex_body_1a6805771d1303a0ecde2d804d93f59575" kindref="member">points</ref>[-1-node_number];</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>[node_number];</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="dd/d8d/classmknix_1_1_flex_body_1a204c13d17b1659656c2f7fbcb1358711" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref>*<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a204c13d17b1659656c2f7fbcb1358711" kindref="member">getLastBodyPoint</ref>(<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="dd/d8d/classmknix_1_1_flex_body_1a2471c30701defa7d1947fa7457c923cd" kindref="member">bodyPoints</ref>.back();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a0058d01bf9b5b90b22a9f4d6ca0745de" kindref="member">setType</ref>(<sp/>std::string<sp/>type_in<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="dd/d8d/classmknix_1_1_flex_body_1aa079c60afebfc32e1282246cb9045c3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aa079c60afebfc32e1282246cb9045c3a" kindref="member">setFormulation</ref>(<sp/>std::string<sp/>formulation_in<sp/>)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>=<sp/>formulation_in;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>initialize(<sp/>)<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ac7bd6a11a097cd7c540d94e2c1f9d617" kindref="member">calcInternalForces</ref>(<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a7717a6111a89fa8bf0f52cd0ba77943e" kindref="member">calcTangentMatrix</ref>(<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1ceddaab1c7db6fadd4eb8bfd3a30c48" kindref="member">assembleInternalForces</ref>(<sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref><sp/>&amp;<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1af661699307694d1dd08b892132416ad7" kindref="member">assembleTangentMatrix</ref>(<sp/><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix&lt;data_type&gt;</ref><sp/>&amp;<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1afcf840a2150f3cdcbeaff2370e37fb05" kindref="member">addBodyPoint</ref>(<sp/><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref>*,<sp/>std::string<sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ab45a6a50dcb5323184e777173ff93bd6" kindref="member">addPoint</ref>(<sp/></highlight><highlight class="comment">/*const*/</highlight><highlight class="normal"><sp/><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref>*<sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ab45a6a50dcb5323184e777173ff93bd6" kindref="member">addPoint</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="dd/d8d/classmknix_1_1_flex_body_1af80e45d5e9bb183ff108e8e641990949" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1af80e45d5e9bb183ff108e8e641990949" kindref="member">getNumberOfPoints</ref>(<sp/>)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a6805771d1303a0ecde2d804d93f59575" kindref="member">points</ref>.size();<sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>Node*<sp/>getPoint(<sp/>int<sp/>node_number<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/>//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;getPoint(<sp/>&quot;<sp/>&lt;&lt;<sp/>node_number<sp/>&lt;&lt;<sp/>&quot;),<sp/>with<sp/>points(size)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>this-&gt;points.size()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>this-&gt;points[node_number];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ab863f9c782ccffbcea5c5e485fff52bc" kindref="member">setOutput</ref>(<sp/>std::string<sp/>);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1cf57f024248bbb196e91aac9b9ab9fe" kindref="member">outputToFile</ref>(<sp/>std::ofstream*<sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a504be54b6f3009687ed85d17d5ade510" kindref="member">writeBodyInfo</ref>(<sp/>std::ofstream*<sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1af17d65a1eba1f2de409ce43d88904751" kindref="member">writeBoundaryNodes</ref>(<sp/>std::vector&lt;Point*&gt;&amp;<sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a258ec4de12c53390875e731cace33219" kindref="member">writeBoundaryConnectivity</ref>(std::vector&lt;<sp/>std::vector&lt;Point*&gt;<sp/>&gt;&amp;);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="105" refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref>;</highlight></codeline>
<codeline lineno="106" refid="dd/d8d/classmknix_1_1_flex_body_1a6805771d1303a0ecde2d804d93f59575" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Node*&gt;<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a6805771d1303a0ecde2d804d93f59575" kindref="member">points</ref>;<sp/></highlight></codeline>
<codeline lineno="107" refid="dd/d8d/classmknix_1_1_flex_body_1a2471c30701defa7d1947fa7457c923cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Point*&gt;<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a2471c30701defa7d1947fa7457c923cd" kindref="member">bodyPoints</ref>;<sp/></highlight></codeline>
<codeline lineno="108" refid="dd/d8d/classmknix_1_1_flex_body_1aaacb11b0809c01edca2c7ef4ea41de7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aaacb11b0809c01edca2c7ef4ea41de7a" kindref="member">computeStress</ref>;</highlight></codeline>
<codeline lineno="109" refid="dd/d8d/classmknix_1_1_flex_body_1a653efdbfbf4f6ec147407a1c7ffb3779" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a653efdbfbf4f6ec147407a1c7ffb3779" kindref="member">computeEnergy</ref>;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::vector&lt;Node*&gt;<sp/>points;<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="dd/d8d/classmknix_1_1_flex_body_1a39cbb448870d5dee6fcc02362bec9940" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix&lt; data_type &gt;</ref><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a39cbb448870d5dee6fcc02362bec9940" kindref="member">smoothingMassMatrix</ref>;</highlight></codeline>
<codeline lineno="112" refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>lmx::Vector&lt;data_type&gt;<sp/>&gt;<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>;</highlight></codeline>
<codeline lineno="113" refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>lmx::Vector&lt;data_type&gt;*<sp/>&gt;<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal">};</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/daniel/Projects/MkniX/src/system/bodyflex.h"/>
  </compounddef>
</doxygen>

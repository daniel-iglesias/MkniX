<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="df/dd9/classmknix_1_1_system" kind="class" language="C++" prot="public">
    <compoundname>mknix::System</compoundname>
    <derivedcompoundref refid="d1/dda/classmknix_1_1_motion" prot="public" virt="non-virtual">mknix::Motion</derivedcompoundref>
    <derivedcompoundref refid="dd/d70/classmknix_1_1_system_chain" prot="public" virt="non-virtual">mknix::SystemChain</derivedcompoundref>
    <derivedcompoundref refid="dd/d70/classmknix_1_1_system_chain" prot="public" virt="non-virtual">mknix::SystemChain</derivedcompoundref>
    <includes refid="dc/db2/system_8h" local="no">system.h</includes>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="df/dd9/classmknix_1_1_system_1a35cb182752752c74a30050705acc3c06" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Reader</definition>
        <argsstring></argsstring>
        <name>Reader</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="46" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="df/dd9/classmknix_1_1_system_1a1150cceac3e81192653459c61f428621" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ReaderFlex</definition>
        <argsstring></argsstring>
        <name>ReaderFlex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="47" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="df/dd9/classmknix_1_1_system_1a6a45b3f2d8b6c9e516334b46caf0cbb7" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ReaderRigid</definition>
        <argsstring></argsstring>
        <name>ReaderRigid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="48" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="df/dd9/classmknix_1_1_system_1ae164a82e4890f6fbab13f95a18656edf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ReaderConstraints</definition>
        <argsstring></argsstring>
        <name>ReaderConstraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="49" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="df/dd9/classmknix_1_1_system_1a76d4b1c8c6040df20040808941b7e764" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Contact</definition>
        <argsstring></argsstring>
        <name>Contact</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="50" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1ab55e1b00bf920164cfe14d0ea9ab08c6" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool mknix::System::outputMaxInterfaceTemp</definition>
        <argsstring></argsstring>
        <name>outputMaxInterfaceTemp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="59" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="59" bodyend="-1"/>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a306f75a65b0c8dfb70f75dddfd31982b" compoundref="d6/df8/system_8cpp" startline="87" endline="101">getOutputSignalThermal</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1a2dcd01381b3eec7b2e8e2c1c3ab38972" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string mknix::System::title</definition>
        <argsstring></argsstring>
        <name>title</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="142" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="142" bodyend="-1"/>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a5315a33bb61855c178110b2998783ee3" compoundref="dc/db2/system_8h" startline="61" endline="64">getTitle</referencedby>
        <referencedby refid="dd/d70/classmknix_1_1_system_chain_1a549c63c17b03cca460ae87e3f63379c2" compoundref="d2/d04/systemchain_8cpp" startline="44" endline="53">mknix::SystemChain::getNode</referencedby>
        <referencedby refid="dd/d70/classmknix_1_1_system_chain_1a5d35273a452ece7b04251ab206c2b63d" compoundref="d2/d04/systemchain_8cpp" startline="56" endline="113">mknix::SystemChain::populate</referencedby>
        <referencedby refid="dd/d70/classmknix_1_1_system_chain_1a9ccb93db731aa96bae11540b035afa18" compoundref="d2/d04/systemchain_8cpp" startline="116" endline="143">mknix::SystemChain::update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1a510d1808d1c0bce06b2d46707d8dddb5" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> * &gt;</type>
        <definition>std::vector&lt;Node*&gt; mknix::System::groundNodes</definition>
        <argsstring></argsstring>
        <name>groundNodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="143" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="143" bodyend="-1"/>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a34b9f15c3ce73ae788cc00f427bee866" compoundref="dc/db2/system_8h" startline="66" endline="69">getNode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="df/dd9/classmknix_1_1_system" kindref="compound">System</ref> * &gt;</type>
        <definition>std::map&lt; std::string, System* &gt; mknix::System::subSystems</definition>
        <argsstring></argsstring>
        <name>subSystems</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="145" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="145" bodyend="-1"/>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a2edabe7efbc4e1c07efe75e635f3469d" compoundref="d6/df8/system_8cpp" startline="46" endline="77">~System</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1af703eb66f164684e551a510ba7caf17d" compoundref="d6/df8/system_8cpp" startline="80" endline="85">getThermalNodes</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a306f75a65b0c8dfb70f75dddfd31982b" compoundref="d6/df8/system_8cpp" startline="87" endline="101">getOutputSignalThermal</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1afc0008395a87621eaf136c59798d4b01" compoundref="d6/df8/system_8cpp" startline="103" endline="110">updateThermalLoads</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a78adb69ca95553f0a91d9559020ad7ae" compoundref="d6/df8/system_8cpp" startline="112" endline="120">update</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a848d086b44d1a4d656cb6357a738188b" compoundref="d6/df8/system_8cpp" startline="131" endline="140">writeRigidBodies</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1aa68577edc1818bbe8d4bd9b6f716b5de" compoundref="d6/df8/system_8cpp" startline="142" endline="151">writeFlexBodies</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a87f850673f20e791e815f182190806c1" compoundref="d6/df8/system_8cpp" startline="153" endline="162">writeJoints</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a062011eba2b5bd9399705f9e725af4e8" compoundref="d6/df8/system_8cpp" startline="167" endline="176">calcCapacityMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1ac39f69fd16a8c74a79dc3258e4f9c505" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="d0/d13/classmknix_1_1_rigid_body" kindref="compound">RigidBody</ref> * &gt;</type>
        <definition>std::map&lt; std::string, RigidBody* &gt; mknix::System::rigidBodies</definition>
        <argsstring></argsstring>
        <name>rigidBodies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="146" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="146" bodyend="-1"/>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a2edabe7efbc4e1c07efe75e635f3469d" compoundref="d6/df8/system_8cpp" startline="46" endline="77">~System</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a848d086b44d1a4d656cb6357a738188b" compoundref="d6/df8/system_8cpp" startline="131" endline="140">writeRigidBodies</referencedby>
        <referencedby refid="dd/d70/classmknix_1_1_system_chain_1a549c63c17b03cca460ae87e3f63379c2" compoundref="d2/d04/systemchain_8cpp" startline="44" endline="53">mknix::SystemChain::getNode</referencedby>
        <referencedby refid="dd/d70/classmknix_1_1_system_chain_1a5d35273a452ece7b04251ab206c2b63d" compoundref="d2/d04/systemchain_8cpp" startline="56" endline="113">mknix::SystemChain::populate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1a20ca9590b01b280feb622ac158fcf4ba" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="dd/d8d/classmknix_1_1_flex_body" kindref="compound">FlexBody</ref> * &gt;</type>
        <definition>std::map&lt; std::string, FlexBody* &gt; mknix::System::flexBodies</definition>
        <argsstring></argsstring>
        <name>flexBodies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="147" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="147" bodyend="-1"/>
        <referencedby refid="d7/d17/classmknix_1_1_reader_flex_1a17e40160fd77f0f80209224c0d5c5cd9" compoundref="d6/daf/readerflex_8cpp" startline="61" endline="984">mknix::ReaderFlex::readFlexBodies</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a2edabe7efbc4e1c07efe75e635f3469d" compoundref="d6/df8/system_8cpp" startline="46" endline="77">~System</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a13e973528d37b0b61a598e4abcf78a74" compoundref="d6/df8/system_8cpp" startline="123" endline="128">initFlexBodies</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1aa68577edc1818bbe8d4bd9b6f716b5de" compoundref="d6/df8/system_8cpp" startline="142" endline="151">writeFlexBodies</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1a5f3e180ba138e01570ffe8aba62a1df7" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="dd/de3/classmknix_1_1_body" kindref="compound">Body</ref> * &gt;</type>
        <definition>std::map&lt; std::string, Body* &gt; mknix::System::thermalBodies</definition>
        <argsstring></argsstring>
        <name>thermalBodies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="148" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="148" bodyend="-1"/>
        <referencedby refid="d7/d17/classmknix_1_1_reader_flex_1a17e40160fd77f0f80209224c0d5c5cd9" compoundref="d6/daf/readerflex_8cpp" startline="61" endline="984">mknix::ReaderFlex::readFlexBodies</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a062011eba2b5bd9399705f9e725af4e8" compoundref="d6/df8/system_8cpp" startline="167" endline="176">calcCapacityMatrix</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1a6777972d1e5914dbe488e704ca8a0b8d" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="da/dd3/classmknix_1_1_constraint" kindref="compound">Constraint</ref> * &gt;</type>
        <definition>std::map&lt; std::string, Constraint* &gt; mknix::System::constraints</definition>
        <argsstring></argsstring>
        <name>constraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="149" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="149" bodyend="-1"/>
        <referencedby refid="d2/dad/classmknix_1_1_reader_constraints_1a6661437710a3faf4792236e7b2bf760f" compoundref="d2/d38/readerconstraints_8cpp" startline="66" endline="326">mknix::ReaderConstraints::readConstraints</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a87f850673f20e791e815f182190806c1" compoundref="d6/df8/system_8cpp" startline="153" endline="162">writeJoints</referencedby>
        <referencedby refid="dd/d70/classmknix_1_1_system_chain_1a5d35273a452ece7b04251ab206c2b63d" compoundref="d2/d04/systemchain_8cpp" startline="56" endline="113">mknix::SystemChain::populate</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1abec0485325cb37e460f9f8eab40374ea" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="d9/d61/classmknix_1_1_constraint_thermal" kindref="compound">ConstraintThermal</ref> * &gt;</type>
        <definition>std::map&lt; std::string, ConstraintThermal* &gt; mknix::System::constraintsThermal</definition>
        <argsstring></argsstring>
        <name>constraintsThermal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="150" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="150" bodyend="-1"/>
        <referencedby refid="d2/dad/classmknix_1_1_reader_constraints_1a6661437710a3faf4792236e7b2bf760f" compoundref="d2/d38/readerconstraints_8cpp" startline="66" endline="326">mknix::ReaderConstraints::readConstraints</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1a16ca73ebcb7b8608052e1a39766c034d" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="db/d1c/classmknix_1_1_load" kindref="compound">Load</ref> * &gt;</type>
        <definition>std::vector&lt; Load* &gt; mknix::System::loads</definition>
        <argsstring></argsstring>
        <name>loads</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="151" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="151" bodyend="-1"/>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a2edabe7efbc4e1c07efe75e635f3469d" compoundref="d6/df8/system_8cpp" startline="46" endline="77">~System</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1a4895395f658cd48585a7336acd9d6625" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d8/d54/classmknix_1_1_load_thermal" kindref="compound">LoadThermal</ref> * &gt;</type>
        <definition>std::vector&lt; LoadThermal* &gt; mknix::System::loadsThermal</definition>
        <argsstring></argsstring>
        <name>loadsThermal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="152" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="152" bodyend="-1"/>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a2edabe7efbc4e1c07efe75e635f3469d" compoundref="d6/df8/system_8cpp" startline="46" endline="77">~System</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1af703eb66f164684e551a510ba7caf17d" compoundref="d6/df8/system_8cpp" startline="80" endline="85">getThermalNodes</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a306f75a65b0c8dfb70f75dddfd31982b" compoundref="d6/df8/system_8cpp" startline="87" endline="101">getOutputSignalThermal</referencedby>
        <referencedby refid="df/dd9/classmknix_1_1_system_1afc0008395a87621eaf136c59798d4b01" compoundref="d6/df8/system_8cpp" startline="103" endline="110">updateThermalLoads</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1a7e1b0adf59579754f0863b3fd9864b21" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> * &gt;</type>
        <definition>std::vector&lt; Node* &gt; mknix::System::outputSignalThermal</definition>
        <argsstring></argsstring>
        <name>outputSignalThermal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="153" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="153" bodyend="-1"/>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a306f75a65b0c8dfb70f75dddfd31982b" compoundref="d6/df8/system_8cpp" startline="87" endline="101">getOutputSignalThermal</referencedby>
      </memberdef>
      <memberdef kind="variable" id="df/dd9/classmknix_1_1_system_1a5555b9556c466244816bc6654e73d8f6" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d1/dda/classmknix_1_1_motion" kindref="compound">Motion</ref> * &gt;</type>
        <definition>std::vector&lt; Motion* &gt; mknix::System::motions</definition>
        <argsstring></argsstring>
        <name>motions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="154" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="154" bodyend="-1"/>
        <referencedby refid="df/dd9/classmknix_1_1_system_1a78adb69ca95553f0a91d9559020ad7ae" compoundref="d6/df8/system_8cpp" startline="112" endline="120">update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1ac1dd2687f5f064df189533aded56583c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::System::System</definition>
        <argsstring>()</argsstring>
        <name>System</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="53" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1acd21c81295d045c5a2da9116edcf3007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::System::System</definition>
        <argsstring>(const std::string &amp;title)</argsstring>
        <name>System</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>title</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="55" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="39" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a2edabe7efbc4e1c07efe75e635f3469d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>mknix::System::~System</definition>
        <argsstring>()</argsstring>
        <name>~System</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="57" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="46" bodyend="77"/>
        <references refid="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" compoundref="dc/db2/system_8h" startline="145">subSystems</references>
        <references refid="df/dd9/classmknix_1_1_system_1ac39f69fd16a8c74a79dc3258e4f9c505" compoundref="dc/db2/system_8h" startline="146">rigidBodies</references>
        <references refid="df/dd9/classmknix_1_1_system_1a20ca9590b01b280feb622ac158fcf4ba" compoundref="dc/db2/system_8h" startline="147">flexBodies</references>
        <references refid="df/dd9/classmknix_1_1_system_1a16ca73ebcb7b8608052e1a39766c034d" compoundref="dc/db2/system_8h" startline="151">loads</references>
        <references refid="df/dd9/classmknix_1_1_system_1a4895395f658cd48585a7336acd9d6625" compoundref="dc/db2/system_8h" startline="152">loadsThermal</references>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a5315a33bb61855c178110b2998783ee3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mknix::System::getTitle</definition>
        <argsstring>()</argsstring>
        <name>getTitle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="61" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="61" bodyend="64"/>
        <references refid="df/dd9/classmknix_1_1_system_1a2dcd01381b3eec7b2e8e2c1c3ab38972" compoundref="dc/db2/system_8h" startline="142">title</references>
        <referencedby refid="d2/dad/classmknix_1_1_reader_constraints_1a6661437710a3faf4792236e7b2bf760f" compoundref="d2/d38/readerconstraints_8cpp" startline="66" endline="326">mknix::ReaderConstraints::readConstraints</referencedby>
        <referencedby refid="d7/d17/classmknix_1_1_reader_flex_1a17e40160fd77f0f80209224c0d5c5cd9" compoundref="d6/daf/readerflex_8cpp" startline="61" endline="984">mknix::ReaderFlex::readFlexBodies</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a34b9f15c3ce73ae788cc00f427bee866" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> *</type>
        <definition>virtual Node* mknix::System::getNode</definition>
        <argsstring>(int index)</argsstring>
        <name>getNode</name>
        <reimplementedby refid="dd/d70/classmknix_1_1_system_chain_1aadbbf4c636dbb95a7e7be10d5904b51c">getNode</reimplementedby>
        <reimplementedby refid="dd/d70/classmknix_1_1_system_chain_1a549c63c17b03cca460ae87e3f63379c2">getNode</reimplementedby>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="66" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="66" bodyend="69"/>
        <references refid="df/dd9/classmknix_1_1_system_1a510d1808d1c0bce06b2d46707d8dddb5" compoundref="dc/db2/system_8h" startline="143">groundNodes</references>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1af703eb66f164684e551a510ba7caf17d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::getThermalNodes</definition>
        <argsstring>(std::vector&lt; double &gt; &amp;)</argsstring>
        <name>getThermalNodes</name>
        <param>
          <type>std::vector&lt; double &gt; &amp;</type>
          <defname>x_coordinates</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="71" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="80" bodyend="85"/>
        <references refid="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" compoundref="dc/db2/system_8h" startline="145">subSystems</references>
        <references refid="df/dd9/classmknix_1_1_system_1a4895395f658cd48585a7336acd9d6625" compoundref="dc/db2/system_8h" startline="152">loadsThermal</references>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a306f75a65b0c8dfb70f75dddfd31982b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::getOutputSignalThermal</definition>
        <argsstring>(double *)</argsstring>
        <name>getOutputSignalThermal</name>
        <param>
          <type>double *</type>
          <defname>vector_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="73" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="87" bodyend="101"/>
        <references refid="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" compoundref="dc/db2/system_8h" startline="145">subSystems</references>
        <references refid="df/dd9/classmknix_1_1_system_1a7e1b0adf59579754f0863b3fd9864b21" compoundref="dc/db2/system_8h" startline="153">outputSignalThermal</references>
        <references refid="df/dd9/classmknix_1_1_system_1ab55e1b00bf920164cfe14d0ea9ab08c6" compoundref="dc/db2/system_8h" startline="59">outputMaxInterfaceTemp</references>
        <references refid="df/dd9/classmknix_1_1_system_1a4895395f658cd48585a7336acd9d6625" compoundref="dc/db2/system_8h" startline="152">loadsThermal</references>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1afc0008395a87621eaf136c59798d4b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::updateThermalLoads</definition>
        <argsstring>(double *)</argsstring>
        <name>updateThermalLoads</name>
        <param>
          <type>double *</type>
          <defname>vector_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="75" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="103" bodyend="110"/>
        <references refid="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" compoundref="dc/db2/system_8h" startline="145">subSystems</references>
        <references refid="df/dd9/classmknix_1_1_system_1a4895395f658cd48585a7336acd9d6625" compoundref="dc/db2/system_8h" startline="152">loadsThermal</references>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a78adb69ca95553f0a91d9559020ad7ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::System::update</definition>
        <argsstring>(double)</argsstring>
        <name>update</name>
        <reimplementedby refid="d1/dda/classmknix_1_1_motion_1a394f15ff3316a804176f0761abf66513">update</reimplementedby>
        <reimplementedby refid="dd/d70/classmknix_1_1_system_chain_1a9ccb93db731aa96bae11540b035afa18">update</reimplementedby>
        <reimplementedby refid="dd/d70/classmknix_1_1_system_chain_1a9ccb93db731aa96bae11540b035afa18">update</reimplementedby>
        <param>
          <type>double</type>
          <defname>time</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="77" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="112" bodyend="120"/>
        <references refid="df/dd9/classmknix_1_1_system_1a5555b9556c466244816bc6654e73d8f6" compoundref="dc/db2/system_8h" startline="154">motions</references>
        <references refid="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" compoundref="dc/db2/system_8h" startline="145">subSystems</references>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a13e973528d37b0b61a598e4abcf78a74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::initFlexBodies</definition>
        <argsstring>()</argsstring>
        <name>initFlexBodies</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="79" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="123" bodyend="128"/>
        <references refid="df/dd9/classmknix_1_1_system_1a20ca9590b01b280feb622ac158fcf4ba" compoundref="dc/db2/system_8h" startline="147">flexBodies</references>
        <referencedby refid="d7/d17/classmknix_1_1_reader_flex_1a17e40160fd77f0f80209224c0d5c5cd9" compoundref="d6/daf/readerflex_8cpp" startline="61" endline="984">mknix::ReaderFlex::readFlexBodies</referencedby>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a848d086b44d1a4d656cb6357a738188b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::writeRigidBodies</definition>
        <argsstring>(std::ofstream *)</argsstring>
        <name>writeRigidBodies</name>
        <param>
          <type>std::ofstream *</type>
          <defname>outFile</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="81" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="131" bodyend="140"/>
        <references refid="df/dd9/classmknix_1_1_system_1ac39f69fd16a8c74a79dc3258e4f9c505" compoundref="dc/db2/system_8h" startline="146">rigidBodies</references>
        <references refid="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" compoundref="dc/db2/system_8h" startline="145">subSystems</references>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1aa68577edc1818bbe8d4bd9b6f716b5de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::writeFlexBodies</definition>
        <argsstring>(std::ofstream *)</argsstring>
        <name>writeFlexBodies</name>
        <param>
          <type>std::ofstream *</type>
          <defname>outFile</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="83" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="142" bodyend="151"/>
        <references refid="df/dd9/classmknix_1_1_system_1a20ca9590b01b280feb622ac158fcf4ba" compoundref="dc/db2/system_8h" startline="147">flexBodies</references>
        <references refid="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" compoundref="dc/db2/system_8h" startline="145">subSystems</references>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a87f850673f20e791e815f182190806c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::writeJoints</definition>
        <argsstring>(std::ofstream *)</argsstring>
        <name>writeJoints</name>
        <param>
          <type>std::ofstream *</type>
          <defname>outFile</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="85" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="153" bodyend="162"/>
        <references refid="df/dd9/classmknix_1_1_system_1a6777972d1e5914dbe488e704ca8a0b8d" compoundref="dc/db2/system_8h" startline="149">constraints</references>
        <references refid="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" compoundref="dc/db2/system_8h" startline="145">subSystems</references>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a062011eba2b5bd9399705f9e725af4e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::calcCapacityMatrix</definition>
        <argsstring>()</argsstring>
        <name>calcCapacityMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="87" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="167" bodyend="176"/>
        <references refid="df/dd9/classmknix_1_1_system_1a5f3e180ba138e01570ffe8aba62a1df7" compoundref="dc/db2/system_8h" startline="148">thermalBodies</references>
        <references refid="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" compoundref="dc/db2/system_8h" startline="145">subSystems</references>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a0336b3ae44843b0f48d1490072a6fb5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::calcConductivityMatrix</definition>
        <argsstring>()</argsstring>
        <name>calcConductivityMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="89" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="178" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1aae558245091381f7d833292fbf64f6e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::calcInternalHeat</definition>
        <argsstring>()</argsstring>
        <name>calcInternalHeat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="91" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="208" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a8c01b52d2f2fb7de0ac6e1c64bda81a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::calcExternalHeat</definition>
        <argsstring>()</argsstring>
        <name>calcExternalHeat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="93" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="197" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1acbdbe27b8bd40d8f04b7bea37ccbc501" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::calcThermalTangentMatrix</definition>
        <argsstring>()</argsstring>
        <name>calcThermalTangentMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="95" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="220" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a354c0df800fe9729c73f7260d76273df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::assembleCapacityMatrix</definition>
        <argsstring>(lmx::Matrix&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleCapacityMatrix</name>
        <param>
          <type><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>globalCapacity_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="97" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="232" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a6345dce07d1da92c969608340be7a604" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::assembleConductivityMatrix</definition>
        <argsstring>(lmx::Matrix&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleConductivityMatrix</name>
        <param>
          <type><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>globalConductivity_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="99" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="244" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1aa32a7ce62666f3a93c4448d2f70ccac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::assembleExternalHeat</definition>
        <argsstring>(lmx::Vector&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleExternalHeat</name>
        <param>
          <type><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>externalHeat_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="101" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="264" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a8c30a5ba93065ccdc3759eb2a3df4a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::assembleInternalHeat</definition>
        <argsstring>(lmx::Vector&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleInternalHeat</name>
        <param>
          <type><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>internalHeat_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="103" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="281" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1aca820f8a0e3ec73e4bea94551fe31875" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::assembleThermalTangentMatrix</definition>
        <argsstring>(lmx::Matrix&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleThermalTangentMatrix</name>
        <param>
          <type><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>globalTangent_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="105" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="293" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a3da01e379f5c907be67439ae2b0770c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::calcMassMatrix</definition>
        <argsstring>()</argsstring>
        <name>calcMassMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="107" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="305" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1acbc22a9f660d0f818d461934eb0f1193" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::calcInternalForces</definition>
        <argsstring>()</argsstring>
        <name>calcInternalForces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="109" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="320" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a1f8741218772bc4d2b5a61b1ded98bc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::calcExternalForces</definition>
        <argsstring>()</argsstring>
        <name>calcExternalForces</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="111" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="336" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a2dcf37e480b19ef48aab29e484a68f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::calcTangentMatrix</definition>
        <argsstring>()</argsstring>
        <name>calcTangentMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="113" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="352" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1ae7d34bdd8c9c12ba24663f3f2e3ef75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::assembleMassMatrix</definition>
        <argsstring>(lmx::Matrix&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleMassMatrix</name>
        <param>
          <type><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>globalMass_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="115" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="369" bodyend="383"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a045a56838910627b66dc981205358b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::assembleInternalForces</definition>
        <argsstring>(lmx::Vector&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleInternalForces</name>
        <param>
          <type><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>internalForces_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="117" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="385" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a3f8ef449040805bcc58e3a36a6276888" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::assembleExternalForces</definition>
        <argsstring>(lmx::Vector&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleExternalForces</name>
        <param>
          <type><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>externalForces_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="119" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="401" bodyend="422"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a4311a423d3a9d7072c0d49031e3bba32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::assembleTangentMatrix</definition>
        <argsstring>(lmx::Matrix&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleTangentMatrix</name>
        <param>
          <type><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>globalTangent_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="121" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="424" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a24b1a9bcb9279bbb2384d2bbf94b157c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::assembleConstraintForces</definition>
        <argsstring>(lmx::Vector&lt; data_type &gt; &amp;)</argsstring>
        <name>assembleConstraintForces</name>
        <param>
          <type><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>internalForces_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="123" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="440" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1ad884fcd0fba58c799a88de4ee1f59108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::setMechanical</definition>
        <argsstring>()</argsstring>
        <name>setMechanical</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="125" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="462" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a22677dbc55080b00290652416ee8bb90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::outputStep</definition>
        <argsstring>(const lmx::Vector&lt; data_type &gt; &amp;, const lmx::Vector&lt; data_type &gt; &amp;)</argsstring>
        <name>outputStep</name>
        <param>
          <type>const <ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>q</defname>
        </param>
        <param>
          <type>const <ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>qdot</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="127" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="477" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1ac161fd48c06a65cfa7b9e27dfbad3f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::outputStep</definition>
        <argsstring>(const lmx::Vector&lt; data_type &gt; &amp;)</argsstring>
        <name>outputStep</name>
        <param>
          <type>const <ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <defname>q</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="129" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="497" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1af08300f28c64abfc4065888a643b4bbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::outputToFile</definition>
        <argsstring>(std::ofstream *)</argsstring>
        <name>outputToFile</name>
        <param>
          <type>std::ofstream *</type>
          <defname>outFile</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="131" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="517" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a477db1887fa5858d2708f50397aa6ebf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool mknix::System::checkAugmented</definition>
        <argsstring>()</argsstring>
        <name>checkAugmented</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="133" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="541" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1afbf67e600535664daa11f57170ce28b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::clearAugmented</definition>
        <argsstring>()</argsstring>
        <name>clearAugmented</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="135" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="560" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1afeb45ebb36f1912aaaaa323b50bac80d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::writeBoundaryNodes</definition>
        <argsstring>(std::vector&lt; Point * &gt; &amp;)</argsstring>
        <name>writeBoundaryNodes</name>
        <param>
          <type>std::vector&lt; <ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> * &gt; &amp;</type>
          <defname>boundary_nodes</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="137" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="572" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="df/dd9/classmknix_1_1_system_1a9175f3a34d6a43a79b7fe00cde18f128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::System::writeBoundaryConnectivity</definition>
        <argsstring>(std::vector&lt; std::vector&lt; Point * &gt; &gt; &amp;)</argsstring>
        <name>writeBoundaryConnectivity</name>
        <param>
          <type>std::vector&lt; std::vector&lt; <ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> * &gt; &gt; &amp;</type>
          <defname>connectivity_nodes</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="139" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.cpp" bodystart="588" bodyend="601"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>AUTHORS &lt;MAILS&gt; </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="833">
        <label>mknix::SystemChain</label>
        <link refid="dd/d70/classmknix_1_1_system_chain"/>
        <childnode refid="831" relation="public-inheritance">
        </childnode>
        <childnode refid="831" relation="public-inheritance">
        </childnode>
      </node>
      <node id="832">
        <label>mknix::Motion</label>
        <link refid="d1/dda/classmknix_1_1_motion"/>
        <childnode refid="831" relation="public-inheritance">
        </childnode>
      </node>
      <node id="831">
        <label>mknix::System</label>
        <link refid="df/dd9/classmknix_1_1_system"/>
      </node>
    </inheritancegraph>
    <location file="/home/daniel/Projects/MkniX/src/system/system.h" line="44" column="1" bodyfile="/home/daniel/Projects/MkniX/src/system/system.h" bodystart="44" bodyend="156"/>
    <listofallmembers>
      <member refid="df/dd9/classmknix_1_1_system_1a354c0df800fe9729c73f7260d76273df" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>assembleCapacityMatrix</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a6345dce07d1da92c969608340be7a604" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>assembleConductivityMatrix</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a24b1a9bcb9279bbb2384d2bbf94b157c" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>assembleConstraintForces</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a3f8ef449040805bcc58e3a36a6276888" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>assembleExternalForces</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1aa32a7ce62666f3a93c4448d2f70ccac8" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>assembleExternalHeat</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a045a56838910627b66dc981205358b78" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>assembleInternalForces</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a8c30a5ba93065ccdc3759eb2a3df4a22" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>assembleInternalHeat</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1ae7d34bdd8c9c12ba24663f3f2e3ef75c" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>assembleMassMatrix</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a4311a423d3a9d7072c0d49031e3bba32" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>assembleTangentMatrix</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1aca820f8a0e3ec73e4bea94551fe31875" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>assembleThermalTangentMatrix</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a062011eba2b5bd9399705f9e725af4e8" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>calcCapacityMatrix</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a0336b3ae44843b0f48d1490072a6fb5f" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>calcConductivityMatrix</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a1f8741218772bc4d2b5a61b1ded98bc4" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>calcExternalForces</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a8c01b52d2f2fb7de0ac6e1c64bda81a3" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>calcExternalHeat</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1acbc22a9f660d0f818d461934eb0f1193" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>calcInternalForces</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1aae558245091381f7d833292fbf64f6e0" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>calcInternalHeat</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a3da01e379f5c907be67439ae2b0770c8" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>calcMassMatrix</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a2dcf37e480b19ef48aab29e484a68f7d" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>calcTangentMatrix</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1acbdbe27b8bd40d8f04b7bea37ccbc501" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>calcThermalTangentMatrix</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a477db1887fa5858d2708f50397aa6ebf" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>checkAugmented</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1afbf67e600535664daa11f57170ce28b1" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>clearAugmented</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a6777972d1e5914dbe488e704ca8a0b8d" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>constraints</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1abec0485325cb37e460f9f8eab40374ea" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>constraintsThermal</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a76d4b1c8c6040df20040808941b7e764" prot="private" virt="non-virtual"><scope>mknix::System</scope><name>Contact</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a20ca9590b01b280feb622ac158fcf4ba" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>flexBodies</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a34b9f15c3ce73ae788cc00f427bee866" prot="public" virt="virtual"><scope>mknix::System</scope><name>getNode</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a306f75a65b0c8dfb70f75dddfd31982b" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>getOutputSignalThermal</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1af703eb66f164684e551a510ba7caf17d" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>getThermalNodes</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a5315a33bb61855c178110b2998783ee3" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>getTitle</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a510d1808d1c0bce06b2d46707d8dddb5" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>groundNodes</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a13e973528d37b0b61a598e4abcf78a74" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>initFlexBodies</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a16ca73ebcb7b8608052e1a39766c034d" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>loads</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a4895395f658cd48585a7336acd9d6625" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>loadsThermal</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a5555b9556c466244816bc6654e73d8f6" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>motions</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1ab55e1b00bf920164cfe14d0ea9ab08c6" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>outputMaxInterfaceTemp</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a7e1b0adf59579754f0863b3fd9864b21" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>outputSignalThermal</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a22677dbc55080b00290652416ee8bb90" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>outputStep</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1ac161fd48c06a65cfa7b9e27dfbad3f47" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>outputStep</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1af08300f28c64abfc4065888a643b4bbf" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>outputToFile</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a35cb182752752c74a30050705acc3c06" prot="private" virt="non-virtual"><scope>mknix::System</scope><name>Reader</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1ae164a82e4890f6fbab13f95a18656edf" prot="private" virt="non-virtual"><scope>mknix::System</scope><name>ReaderConstraints</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a1150cceac3e81192653459c61f428621" prot="private" virt="non-virtual"><scope>mknix::System</scope><name>ReaderFlex</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a6a45b3f2d8b6c9e516334b46caf0cbb7" prot="private" virt="non-virtual"><scope>mknix::System</scope><name>ReaderRigid</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1ac39f69fd16a8c74a79dc3258e4f9c505" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>rigidBodies</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1ad884fcd0fba58c799a88de4ee1f59108" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>setMechanical</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a90dd5d1e76958c720a2bad6e9bd4ceb2" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>subSystems</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1ac1dd2687f5f064df189533aded56583c" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>System</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1acd21c81295d045c5a2da9116edcf3007" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>System</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a5f3e180ba138e01570ffe8aba62a1df7" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>thermalBodies</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a2dcd01381b3eec7b2e8e2c1c3ab38972" prot="protected" virt="non-virtual"><scope>mknix::System</scope><name>title</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a78adb69ca95553f0a91d9559020ad7ae" prot="public" virt="virtual"><scope>mknix::System</scope><name>update</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1afc0008395a87621eaf136c59798d4b01" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>updateThermalLoads</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a9175f3a34d6a43a79b7fe00cde18f128" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>writeBoundaryConnectivity</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1afeb45ebb36f1912aaaaa323b50bac80d" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>writeBoundaryNodes</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1aa68577edc1818bbe8d4bd9b6f716b5de" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>writeFlexBodies</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a87f850673f20e791e815f182190806c1" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>writeJoints</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a848d086b44d1a4d656cb6357a738188b" prot="public" virt="non-virtual"><scope>mknix::System</scope><name>writeRigidBodies</name></member>
      <member refid="df/dd9/classmknix_1_1_system_1a2edabe7efbc4e1c07efe75e635f3469d" prot="public" virt="virtual"><scope>mknix::System</scope><name>~System</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

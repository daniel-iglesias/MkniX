<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="d3/d25/classmknix_1_1_node" kind="class" language="C++" prot="public">
    <compoundname>mknix::Node</compoundname>
    <basecompoundref refid="d3/d19/classmknix_1_1_point" prot="public" virt="non-virtual">mknix::Point</basecompoundref>
    <includes refid="d1/d77/node_8h" local="no">node.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/d25/classmknix_1_1_node_1afa4d1620df96b365a937c4e8bc2b00a4" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mknix::Node::thermalNum</definition>
        <argsstring></argsstring>
        <name>thermalNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="165" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d25/classmknix_1_1_node_1a346a2337c8e5f5cb1b9fc457eb45eaf1" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mknix::Node::qx</definition>
        <argsstring></argsstring>
        <name>qx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="166" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d25/classmknix_1_1_node_1a3838d965901a84a318b0e7bc99feee2d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mknix::Node::qy</definition>
        <argsstring></argsstring>
        <name>qy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="166" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d25/classmknix_1_1_node_1a033cfc28c69551ab316c0ed8a323207b" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mknix::Node::qz</definition>
        <argsstring></argsstring>
        <name>qz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="166" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d25/classmknix_1_1_node_1ac03e06a16d3241d53e1a4b96c06aa098" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mknix::Node::qt</definition>
        <argsstring></argsstring>
        <name>qt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="166" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d3/d25/classmknix_1_1_node_1a67f8bec7a6d4ee1b66ffd87794f96431" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mknix::Node::weight</definition>
        <argsstring></argsstring>
        <name>weight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="168" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1ad5856bda16e785c0900ee1d6c18ccecb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::Node::Node</definition>
        <argsstring>()</argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="33" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a2e851819b5478c2110bbbd71fec6a3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::Node::Node</definition>
        <argsstring>(const Node &amp;)</argsstring>
        <name>Node</name>
        <param>
          <type>const <ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> &amp;</type>
          <defname>p_node_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="35" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="27" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a6c100ae73d994c428f494257158cdeac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::Node::Node</definition>
        <argsstring>(const Node *)</argsstring>
        <name>Node</name>
        <param>
          <type>const <ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> *</type>
          <defname>p_node_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="37" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a14799609698201dafea7d60684c12708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::Node::Node</definition>
        <argsstring>(int i_in, double x_in, double y_in, double z_in)</argsstring>
        <name>Node</name>
        <param>
          <type>int</type>
          <declname>i_in</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x_in</declname>
        </param>
        <param>
          <type>double</type>
          <declname>y_in</declname>
        </param>
        <param>
          <type>double</type>
          <declname>z_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="39" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="43" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1adb415bbf3cd9031c1b45f3b2d36282e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::Node::~Node</definition>
        <argsstring>()</argsstring>
        <name>~Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="41" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a53140afb6f6f4dcffb1003e7fc86172d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Node::addWeight</definition>
        <argsstring>(double w_in)</argsstring>
        <name>addWeight</name>
        <param>
          <type>double</type>
          <declname>w_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="43" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a946a43c363840d91a43e67df2b86c7cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double&amp; mknix::Node::getWeight</definition>
        <argsstring>() const </argsstring>
        <name>getWeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="47" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1ad059c208f7a15ab06ddcf33114b1481a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const int &amp;</type>
        <definition>const int&amp; mknix::Node::getThermalNumber</definition>
        <argsstring>() const </argsstring>
        <name>getThermalNumber</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="51" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a6c08fe7fdeb154268c4a0a6e435bc561" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const void</type>
        <definition>const void mknix::Node::setNumber</definition>
        <argsstring>(int num_in)</argsstring>
        <name>setNumber</name>
        <param>
          <type>int</type>
          <declname>num_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="55" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="55" bodyend="57"/>
        <references refid="d3/d19/classmknix_1_1_point_1a685cfce9b9c1da43e3a2460b6c0a6855" compoundref="d2/d91/point_8h" startline="176">mknix::Point::num</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a66721f6650b7dd60df0462eb248eb3d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const void</type>
        <definition>const void mknix::Node::setThermalNumber</definition>
        <argsstring>(int num_in)</argsstring>
        <name>setThermalNumber</name>
        <param>
          <type>int</type>
          <declname>num_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="59" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a933dcd435f4c1602da93b4d8faa51559" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const double &amp;</type>
        <definition>const double&amp; mknix::Node::getqt</definition>
        <argsstring>() const </argsstring>
        <name>getqt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="75" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="75" bodyend="77"/>
        <referencedby refid="d3/d25/classmknix_1_1_node_1a32945afdc1caaab1456bbd286ba807c9" compoundref="d7/d70/node_8cpp" startline="80" endline="98">getTemp</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a081aee47cbdb57f842b29f95871020d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mknix::Node::getqx</definition>
        <argsstring>(int i) const </argsstring>
        <name>getqx</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="79" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="79" bodyend="85"/>
        <referencedby refid="d3/d25/classmknix_1_1_node_1a76f9fcdbffb3561d29c3536ba3511bf7" compoundref="d7/d70/node_8cpp" startline="57" endline="78">getConf</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a5fe741fd520be4c7dd2edeb6c1172f84" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mknix::Node::getUx</definition>
        <argsstring>() const </argsstring>
        <name>getUx</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="87" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="87" bodyend="89"/>
        <references refid="d3/d25/classmknix_1_1_node_1a76f9fcdbffb3561d29c3536ba3511bf7" compoundref="d7/d70/node_8cpp" startline="57" endline="78">getConf</references>
        <references refid="d3/d19/classmknix_1_1_point_1a1ab5edb86e6de2df07c3d11ed7c2ca99" compoundref="d2/d91/point_8h" startline="177">mknix::Point::X</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a88db2370f5830ed5692667d8d2351d46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mknix::Node::getUy</definition>
        <argsstring>() const </argsstring>
        <name>getUy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="91" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="91" bodyend="93"/>
        <references refid="d3/d25/classmknix_1_1_node_1a76f9fcdbffb3561d29c3536ba3511bf7" compoundref="d7/d70/node_8cpp" startline="57" endline="78">getConf</references>
        <references refid="d3/d19/classmknix_1_1_point_1aeb9947adb5c6a4cd01ca81f4c4934ed5" compoundref="d2/d91/point_8h" startline="177">mknix::Point::Y</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a4b960a47e276e247f16561f16938a2c7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mknix::Node::getUz</definition>
        <argsstring>() const </argsstring>
        <name>getUz</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="95" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="95" bodyend="97"/>
        <references refid="d3/d25/classmknix_1_1_node_1a76f9fcdbffb3561d29c3536ba3511bf7" compoundref="d7/d70/node_8cpp" startline="57" endline="78">getConf</references>
        <references refid="d3/d19/classmknix_1_1_point_1a1742974a0d33897c3b04bc420ef87d31" compoundref="d2/d91/point_8h" startline="177">mknix::Point::Z</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1acd6352d9d9a80433c62bcad26547c654" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double mknix::Node::getU</definition>
        <argsstring>(int i) const </argsstring>
        <name>getU</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="99" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="99" bodyend="105"/>
        <references refid="d3/d25/classmknix_1_1_node_1a76f9fcdbffb3561d29c3536ba3511bf7" compoundref="d7/d70/node_8cpp" startline="57" endline="78">getConf</references>
        <references refid="d3/d19/classmknix_1_1_point_1a1ab5edb86e6de2df07c3d11ed7c2ca99" compoundref="d2/d91/point_8h" startline="177">mknix::Point::X</references>
        <references refid="d3/d19/classmknix_1_1_point_1aeb9947adb5c6a4cd01ca81f4c4934ed5" compoundref="d2/d91/point_8h" startline="177">mknix::Point::Y</references>
        <references refid="d3/d19/classmknix_1_1_point_1a1742974a0d33897c3b04bc420ef87d31" compoundref="d2/d91/point_8h" startline="177">mknix::Point::Z</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a76f9fcdbffb3561d29c3536ba3511bf7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double mknix::Node::getConf</definition>
        <argsstring>(int dof) const override</argsstring>
        <name>getConf</name>
        <reimplements refid="d3/d19/classmknix_1_1_point_1a8bfbde170c041c55d7e31f596701c977">getConf</reimplements>
        <param>
          <type>int</type>
          <declname>dof</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="107" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="57" bodyend="78"/>
        <references refid="d3/d19/classmknix_1_1_point_1a60c4d06445f397a9813b9a7f2a563d0d" compoundref="d2/d91/point_8h" startline="180">mknix::Point::shapeFunType</references>
        <references refid="d3/d19/classmknix_1_1_point_1a141fd098ad72a85cb4d11362b80ca0d8" compoundref="d2/d91/point_8h" startline="183">mknix::Point::supportNodesSize</references>
        <references refid="d3/d19/classmknix_1_1_point_1a852c997f667d6029c6062ef68582c275" compoundref="d2/d91/point_8h" startline="181">mknix::Point::shapeFun</references>
        <references refid="dd/d8d/classmknix_1_1_shape_function_1a13f35e2b1cfc89c26ee03ede4bfff586" compoundref="d3/d16/shapefunction_8h" startline="61" endline="64">mknix::ShapeFunction::getPhi</references>
        <references refid="d3/d19/classmknix_1_1_point_1a3e608826c9042a2ddad6053f5b233211" compoundref="d2/d91/point_8h" startline="182">mknix::Point::supportNodes</references>
        <references refid="d3/d25/classmknix_1_1_node_1a081aee47cbdb57f842b29f95871020d3" compoundref="d1/d77/node_8h" startline="79" endline="85">getqx</references>
        <referencedby refid="d3/d25/classmknix_1_1_node_1a5fe741fd520be4c7dd2edeb6c1172f84" compoundref="d1/d77/node_8h" startline="87" endline="89">getUx</referencedby>
        <referencedby refid="d3/d25/classmknix_1_1_node_1a88db2370f5830ed5692667d8d2351d46" compoundref="d1/d77/node_8h" startline="91" endline="93">getUy</referencedby>
        <referencedby refid="d3/d25/classmknix_1_1_node_1a4b960a47e276e247f16561f16938a2c7" compoundref="d1/d77/node_8h" startline="95" endline="97">getUz</referencedby>
        <referencedby refid="d3/d25/classmknix_1_1_node_1acd6352d9d9a80433c62bcad26547c654" compoundref="d1/d77/node_8h" startline="99" endline="105">getU</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a32945afdc1caaab1456bbd286ba807c9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double mknix::Node::getTemp</definition>
        <argsstring>() const override</argsstring>
        <name>getTemp</name>
        <reimplements refid="d3/d19/classmknix_1_1_point_1a7fcc933a13b61e990feaaaaef7c193f6">getTemp</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="109" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="80" bodyend="98"/>
        <references refid="d3/d19/classmknix_1_1_point_1a60c4d06445f397a9813b9a7f2a563d0d" compoundref="d2/d91/point_8h" startline="180">mknix::Point::shapeFunType</references>
        <references refid="d3/d19/classmknix_1_1_point_1a141fd098ad72a85cb4d11362b80ca0d8" compoundref="d2/d91/point_8h" startline="183">mknix::Point::supportNodesSize</references>
        <references refid="d3/d19/classmknix_1_1_point_1a852c997f667d6029c6062ef68582c275" compoundref="d2/d91/point_8h" startline="181">mknix::Point::shapeFun</references>
        <references refid="dd/d8d/classmknix_1_1_shape_function_1a13f35e2b1cfc89c26ee03ede4bfff586" compoundref="d3/d16/shapefunction_8h" startline="61" endline="64">mknix::ShapeFunction::getPhi</references>
        <references refid="d3/d19/classmknix_1_1_point_1a3e608826c9042a2ddad6053f5b233211" compoundref="d2/d91/point_8h" startline="182">mknix::Point::supportNodes</references>
        <references refid="d3/d25/classmknix_1_1_node_1a933dcd435f4c1602da93b4d8faa51559" compoundref="d1/d77/node_8h" startline="75" endline="77">getqt</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1aaa7a577ee98149ca2b82711e4aa0e77a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>size_t</type>
        <definition>size_t mknix::Node::getSupportSize</definition>
        <argsstring>(int deriv)</argsstring>
        <name>getSupportSize</name>
        <reimplements refid="d3/d19/classmknix_1_1_point_1aa60786832d373fd1f8017fdf826a7a4b">getSupportSize</reimplements>
        <param>
          <type>int</type>
          <declname>deriv</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="111" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="100" bodyend="125"/>
        <references refid="d3/d19/classmknix_1_1_point_1a60c4d06445f397a9813b9a7f2a563d0d" compoundref="d2/d91/point_8h" startline="180">mknix::Point::shapeFunType</references>
        <references refid="d3/d19/classmknix_1_1_point_1a3e608826c9042a2ddad6053f5b233211" compoundref="d2/d91/point_8h" startline="182">mknix::Point::supportNodes</references>
        <referencedby refid="d7/de2/classmknix_1_1_constraint_distance_1adc9113e52374f275b1b79bfdca72b971" compoundref="d7/d93/constraintdistance_8cpp" startline="32" endline="58">mknix::ConstraintDistance::ConstraintDistance</referencedby>
        <referencedby refid="d7/dcd/classmknix_1_1_constraint_fixed_axis_1aa12bf0a882d86295d28d6c414c4a9d5e" compoundref="d8/d02/constraintfixedaxis_8cpp" startline="33" endline="61">mknix::ConstraintFixedAxis::ConstraintFixedAxis</referencedby>
        <referencedby refid="de/dda/classmknix_1_1_constraint_fixed_coordinates_1a0e45a40d38156a55c34380238d369592" compoundref="d6/d46/constraintfixedcoordinates_8cpp" startline="33" endline="71">mknix::ConstraintFixedCoordinates::ConstraintFixedCoordinates</referencedby>
        <referencedby refid="d3/d42/classmknix_1_1_constraint_thermal_fixed_1ae8a4f39ba80fb72a82c0f27873c9e625" compoundref="d0/d5f/constraintthermalfixed_8cpp" startline="33" endline="60">mknix::ConstraintThermalFixed::ConstraintThermalFixed</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a209f5158efc66c282da2be880535c392" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>int</type>
        <definition>int mknix::Node::getSupportNodeNumber</definition>
        <argsstring>(int deriv, int s_node)</argsstring>
        <name>getSupportNodeNumber</name>
        <reimplements refid="d3/d19/classmknix_1_1_point_1a64039f7f478db03bdfa481bd525d2c45">getSupportNodeNumber</reimplements>
        <param>
          <type>int</type>
          <declname>deriv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="113" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="127" bodyend="154"/>
        <references refid="d3/d19/classmknix_1_1_point_1a60c4d06445f397a9813b9a7f2a563d0d" compoundref="d2/d91/point_8h" startline="180">mknix::Point::shapeFunType</references>
        <references refid="d3/d19/classmknix_1_1_point_1a3e608826c9042a2ddad6053f5b233211" compoundref="d2/d91/point_8h" startline="182">mknix::Point::supportNodes</references>
        <references refid="d3/d19/classmknix_1_1_point_1a3e95c009af70a2954a950b3bdaf73aa9" compoundref="d2/d91/point_8h" startline="112" endline="115">mknix::Point::getNumber</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a6051733b173a21813c1d111ae18f0e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mknix::Node::getShapeFunValue</definition>
        <argsstring>(int deriv, int s_node)</argsstring>
        <name>getShapeFunValue</name>
        <param>
          <type>int</type>
          <declname>deriv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s_node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="115" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="156" bodyend="165"/>
        <references refid="d3/d19/classmknix_1_1_point_1a60c4d06445f397a9813b9a7f2a563d0d" compoundref="d2/d91/point_8h" startline="180">mknix::Point::shapeFunType</references>
        <references refid="d3/d19/classmknix_1_1_point_1a852c997f667d6029c6062ef68582c275" compoundref="d2/d91/point_8h" startline="181">mknix::Point::shapeFun</references>
        <references refid="dd/d8d/classmknix_1_1_shape_function_1a13f35e2b1cfc89c26ee03ede4bfff586" compoundref="d3/d16/shapefunction_8h" startline="61" endline="64">mknix::ShapeFunction::getPhi</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1adfbc2fbcbf12becd4a498cbdc6d85cb3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Node::setUx</definition>
        <argsstring>(double ux_in)</argsstring>
        <name>setUx</name>
        <param>
          <type>double</type>
          <declname>ux_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="118" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="118" bodyend="120"/>
        <references refid="d3/d19/classmknix_1_1_point_1a1ab5edb86e6de2df07c3d11ed7c2ca99" compoundref="d2/d91/point_8h" startline="177">mknix::Point::X</references>
        <referencedby refid="d1/dda/classmknix_1_1_motion_1a394f15ff3316a804176f0761abf66513" compoundref="d3/d9e/motion_8cpp" startline="42" endline="52">mknix::Motion::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a76378e1cb2f9d9021d44789e85a75012" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Node::setUy</definition>
        <argsstring>(double uy_in)</argsstring>
        <name>setUy</name>
        <param>
          <type>double</type>
          <declname>uy_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="122" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="122" bodyend="124"/>
        <references refid="d3/d19/classmknix_1_1_point_1aeb9947adb5c6a4cd01ca81f4c4934ed5" compoundref="d2/d91/point_8h" startline="177">mknix::Point::Y</references>
        <referencedby refid="d1/dda/classmknix_1_1_motion_1a394f15ff3316a804176f0761abf66513" compoundref="d3/d9e/motion_8cpp" startline="42" endline="52">mknix::Motion::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a522e185e16432892a3cee169b442035d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Node::setUz</definition>
        <argsstring>(double uz_in)</argsstring>
        <name>setUz</name>
        <param>
          <type>double</type>
          <declname>uz_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="126" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="126" bodyend="128"/>
        <references refid="d3/d19/classmknix_1_1_point_1a1742974a0d33897c3b04bc420ef87d31" compoundref="d2/d91/point_8h" startline="177">mknix::Point::Z</references>
        <referencedby refid="d1/dda/classmknix_1_1_motion_1a394f15ff3316a804176f0761abf66513" compoundref="d3/d9e/motion_8cpp" startline="42" endline="52">mknix::Motion::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a24a4f70c0ac083a3ba34c5a9cbc393bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Node::setqx</definition>
        <argsstring>(const lmx::Vector&lt; data_type &gt; &amp;globalConf, int dim)</argsstring>
        <name>setqx</name>
        <param>
          <type>const <ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <declname>globalConf</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="130" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="168" bodyend="175"/>
        <references refid="d3/d19/classmknix_1_1_point_1a685cfce9b9c1da43e3a2460b6c0a6855" compoundref="d2/d91/point_8h" startline="176">mknix::Point::num</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1ac17cbcbdad071a2bfd9638f3c6891eb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Node::setqt</definition>
        <argsstring>(const lmx::Vector&lt; data_type &gt; &amp;globalConf)</argsstring>
        <name>setqt</name>
        <param>
          <type>const <ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; <ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref> &gt; &amp;</type>
          <declname>globalConf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="132" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1a482ac2f9d2684a9267164c6333a8f1e3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Node::setqt</definition>
        <argsstring>(double &amp;temp_in)</argsstring>
        <name>setqt</name>
        <param>
          <type>double &amp;</type>
          <declname>temp_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="134" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1aac32e597e1ec0bb85fabcbd2f14d0348" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Node::setX</definition>
        <argsstring>(double X_in)</argsstring>
        <name>setX</name>
        <param>
          <type>double</type>
          <declname>X_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="149" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="149" bodyend="152"/>
        <references refid="d3/d19/classmknix_1_1_point_1a1ab5edb86e6de2df07c3d11ed7c2ca99" compoundref="d2/d91/point_8h" startline="177">mknix::Point::X</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1acd17b4ac110feaa43430839b6aad107b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Node::setY</definition>
        <argsstring>(double Y_in)</argsstring>
        <name>setY</name>
        <param>
          <type>double</type>
          <declname>Y_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="154" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="154" bodyend="157"/>
        <references refid="d3/d19/classmknix_1_1_point_1aeb9947adb5c6a4cd01ca81f4c4934ed5" compoundref="d2/d91/point_8h" startline="177">mknix::Point::Y</references>
      </memberdef>
      <memberdef kind="function" id="d3/d25/classmknix_1_1_node_1aa294c096ab343766756ca8e5c6ec7f26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::Node::setZ</definition>
        <argsstring>(double Z_in)</argsstring>
        <name>setZ</name>
        <param>
          <type>double</type>
          <declname>Z_in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="159" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="159" bodyend="162"/>
        <references refid="d3/d19/classmknix_1_1_point_1a1742974a0d33897c3b04bc420ef87d31" compoundref="d2/d91/point_8h" startline="177">mknix::Point::Z</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>AUTHORS &lt;MAILS&gt; </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="682">
        <label>mknix::Point</label>
        <link refid="d3/d19/classmknix_1_1_point"/>
      </node>
      <node id="681">
        <label>mknix::Node</label>
        <link refid="d3/d25/classmknix_1_1_node"/>
        <childnode refid="682" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="684">
        <label>mknix::Point</label>
        <link refid="d3/d19/classmknix_1_1_point"/>
        <childnode refid="685" relation="usage">
          <edgelabel>shapeFun</edgelabel>
        </childnode>
      </node>
      <node id="683">
        <label>mknix::Node</label>
        <link refid="d3/d25/classmknix_1_1_node"/>
        <childnode refid="684" relation="public-inheritance">
        </childnode>
      </node>
      <node id="685">
        <label>mknix::ShapeFunction</label>
        <link refid="dd/d8d/classmknix_1_1_shape_function"/>
        <childnode refid="686" relation="usage">
          <edgelabel>phi</edgelabel>
        </childnode>
        <childnode refid="684" relation="usage">
          <edgelabel>gp</edgelabel>
        </childnode>
      </node>
      <node id="686">
        <label>lmx::DenseMatrix&lt; double &gt;</label>
        <link refid="d2/d8d/classlmx_1_1_dense_matrix"/>
      </node>
    </collaborationgraph>
    <location file="/home/daniel/Projects/MkniX/src/core/node.h" line="31" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/node.h" bodystart="31" bodyend="175"/>
    <listofallmembers>
      <member refid="d3/d19/classmknix_1_1_point_1a41f06a5ee1993d52db1c629a1ab8ae3f" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>addSupportNode</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a53140afb6f6f4dcffb1003e7fc86172d" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>addWeight</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1afbd74e8b9e7081984e5b03d802f7ae14" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>alphai</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a310b40e3859627d344de048bbdb1db6f" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>dc</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1ab97e4bca7f299237ff3f8cc2449b1be1" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>dim</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a138d3c418c3147aead7f3958f1db9b42" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>distance</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a88289f6649c16591f708e2a6f5eb749e" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>findSupportNodes</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a13907374f703f15ffda3bb376bd19073" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>findSupportNodes</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a76f9fcdbffb3561d29c3536ba3511bf7" prot="public" virt="virtual"><scope>mknix::Node</scope><name>getConf</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a9b6cc39e65e17201533b4ee0fde35419" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getDim</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a3e95c009af70a2954a950b3bdaf73aa9" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getNumber</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a933dcd435f4c1602da93b4d8faa51559" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getqt</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a081aee47cbdb57f842b29f95871020d3" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getqx</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1af432e99d48f5db21728db72ec0d49025" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getShapeFunType</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a6051733b173a21813c1d111ae18f0e61" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getShapeFunValue</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a209f5158efc66c282da2be880535c392" prot="public" virt="virtual"><scope>mknix::Node</scope><name>getSupportNodeNumber</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1ad55ff02be90bf3c604dc5543fed2a5ab" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getSupportNodes</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1aaa7a577ee98149ca2b82711e4aa0e77a" prot="public" virt="virtual"><scope>mknix::Node</scope><name>getSupportSize</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a32945afdc1caaab1456bbd286ba807c9" prot="public" virt="virtual"><scope>mknix::Node</scope><name>getTemp</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1ad059c208f7a15ab06ddcf33114b1481a" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getThermalNumber</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1acd6352d9d9a80433c62bcad26547c654" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getU</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a5fe741fd520be4c7dd2edeb6c1172f84" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getUx</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a88db2370f5830ed5692667d8d2351d46" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getUy</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a4b960a47e276e247f16561f16938a2c7" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getUz</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a946a43c363840d91a43e67df2b86c7cc" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getWeight</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a2942110ac86c21e11986081670bb3a82" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getX</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a16955d7ef56edea059119f93905e1196" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getY</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a739698b4f6a21b40e7fc7c82af69c479" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>getZ</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1ad985b1bb6595c64f6bfc60b557e86ec9" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>gnuplotOut</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a7afc6bd82b8e3619d384a41d9c2f1601" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>jacobian</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1ad5856bda16e785c0900ee1d6c18ccecb" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>Node</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a2e851819b5478c2110bbbd71fec6a3bb" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>Node</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a6c100ae73d994c428f494257158cdeac" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>Node</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a14799609698201dafea7d60684c12708" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>Node</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a685cfce9b9c1da43e3a2460b6c0a6855" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>num</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1ade62bb71dbbd34efa4ed5090f37f2d9a" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>Point</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a7788033d9afd368dd8d446d4a20e9cd2" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>Point</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a05ad07bb27e53ab3bd8a253cddff5a9e" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>Point</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1ab94ec4f0045e65b7e80b94ffd75eace1" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>Point</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a290d5ac42d31be5f6b2a462b422d35e7" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>Point</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a69ac488240dc683a38330883d3635d87" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>Point</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1ac03e06a16d3241d53e1a4b96c06aa098" prot="private" virt="non-virtual"><scope>mknix::Node</scope><name>qt</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a346a2337c8e5f5cb1b9fc457eb45eaf1" prot="private" virt="non-virtual"><scope>mknix::Node</scope><name>qx</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a3838d965901a84a318b0e7bc99feee2d" prot="private" virt="non-virtual"><scope>mknix::Node</scope><name>qy</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a033cfc28c69551ab316c0ed8a323207b" prot="private" virt="non-virtual"><scope>mknix::Node</scope><name>qz</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1aeed553d37db81fa6f7ea08834ec98724" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setAlphai</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1abf06bbd55297ab42ecf0ef49a258ad09" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setDc</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1aea25863c7bab8e63c09ca394546a5502" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setJacobian</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a6c08fe7fdeb154268c4a0a6e435bc561" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setNumber</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1ac17cbcbdad071a2bfd9638f3c6891eb6" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setqt</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a482ac2f9d2684a9267164c6333a8f1e3" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setqt</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a24a4f70c0ac083a3ba34c5a9cbc393bb" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setqx</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1ac8cc95650eac1e676c11f2874d899a7b" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setShapeFunType</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a66721f6650b7dd60df0462eb248eb3d0" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setThermalNumber</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1adfbc2fbcbf12becd4a498cbdc6d85cb3" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setUx</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a76378e1cb2f9d9021d44789e85a75012" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setUy</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a522e185e16432892a3cee169b442035d" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setUz</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1aac32e597e1ec0bb85fabcbd2f14d0348" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setX</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1acd17b4ac110feaa43430839b6aad107b" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setY</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1aa294c096ab343766756ca8e5c6ec7f26" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>setZ</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a852c997f667d6029c6062ef68582c275" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>shapeFun</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a1843d81646fbca9519358eb3c8787e18" prot="public" virt="virtual"><scope>mknix::Node</scope><name>shapeFunSolve</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a71d8bc7ab41357fafbacae3b85a6b0a5" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>shapeFunSolve</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a60c4d06445f397a9813b9a7f2a563d0d" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>shapeFunType</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a3e608826c9042a2ddad6053f5b233211" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>supportNodes</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a141fd098ad72a85cb4d11362b80ca0d8" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>supportNodesSize</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1afa4d1620df96b365a937c4e8bc2b00a4" prot="private" virt="non-virtual"><scope>mknix::Node</scope><name>thermalNum</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1a67f8bec7a6d4ee1b66ffd87794f96431" prot="private" virt="non-virtual"><scope>mknix::Node</scope><name>weight</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a1ab5edb86e6de2df07c3d11ed7c2ca99" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>X</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1aeb9947adb5c6a4cd01ca81f4c4934ed5" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>Y</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1a1742974a0d33897c3b04bc420ef87d31" prot="protected" virt="non-virtual"><scope>mknix::Node</scope><name>Z</name></member>
      <member refid="d3/d25/classmknix_1_1_node_1adb415bbf3cd9031c1b45f3b2d36282e2" prot="public" virt="non-virtual"><scope>mknix::Node</scope><name>~Node</name></member>
      <member refid="d3/d19/classmknix_1_1_point_1ad20e0663241df1986b8250a0ab7f2358" prot="public" virt="virtual"><scope>mknix::Node</scope><name>~Point</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

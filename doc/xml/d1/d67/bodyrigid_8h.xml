<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="d1/d67/bodyrigid_8h" kind="file" language="C++">
    <compoundname>bodyrigid.h</compoundname>
    <includes refid="d0/d77/body_8h" local="yes">body.h</includes>
    <includedby refid="d7/dff/reader_8cpp" local="no">reader.cpp</includedby>
    <includedby refid="d2/d38/readerconstraints_8cpp" local="no">readerconstraints.cpp</includedby>
    <includedby refid="da/d4a/bodyrigid_8cpp" local="yes">bodyrigid.cpp</includedby>
    <includedby refid="da/d60/bodyrigid0_d_8h" local="yes">bodyrigid0D.h</includedby>
    <includedby refid="d7/d1c/bodyrigid1_d_8h" local="yes">bodyrigid1D.h</includedby>
    <includedby refid="d3/d80/bodyrigid2_d_8h" local="yes">bodyrigid2D.h</includedby>
    <includedby refid="d1/dbe/bodyrigid3_d_8h" local="yes">bodyrigid3D.h</includedby>
    <includedby refid="d6/df8/system_8cpp" local="yes">system.cpp</includedby>
    <incdepgraph>
      <node id="2563">
        <label>core/cellboundary.h</label>
        <link refid="db/d20/cellboundary_8h"/>
        <childnode refid="2564" relation="include">
        </childnode>
        <childnode refid="2565" relation="include">
        </childnode>
        <childnode refid="2558" relation="include">
        </childnode>
      </node>
      <node id="2565">
        <label>string</label>
      </node>
      <node id="2559">
        <label>map</label>
      </node>
      <node id="2558">
        <label>common.h</label>
        <link refid="dc/d54/common_8h"/>
        <childnode refid="2559" relation="include">
        </childnode>
        <childnode refid="2560" relation="include">
        </childnode>
      </node>
      <node id="2562">
        <label>boundarygroup.h</label>
        <link refid="dc/d6b/boundarygroup_8h"/>
        <childnode refid="2558" relation="include">
        </childnode>
        <childnode refid="2561" relation="include">
        </childnode>
      </node>
      <node id="2556">
        <label>bodyrigid.h</label>
        <link refid="bodyrigid.h"/>
        <childnode refid="2557" relation="include">
        </childnode>
      </node>
      <node id="2564">
        <label>vector</label>
      </node>
      <node id="2561">
        <label>LMX/lmx.h</label>
      </node>
      <node id="2566">
        <label>core/node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="2567" relation="include">
        </childnode>
        <childnode refid="2561" relation="include">
        </childnode>
      </node>
      <node id="2567">
        <label>point.h</label>
        <link refid="d2/d91/point_8h"/>
        <childnode refid="2564" relation="include">
        </childnode>
        <childnode refid="2559" relation="include">
        </childnode>
        <childnode refid="2565" relation="include">
        </childnode>
        <childnode refid="2558" relation="include">
        </childnode>
      </node>
      <node id="2557">
        <label>body.h</label>
        <link refid="d0/d77/body_8h"/>
        <childnode refid="2558" relation="include">
        </childnode>
        <childnode refid="2561" relation="include">
        </childnode>
        <childnode refid="2562" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2566" relation="include">
        </childnode>
      </node>
      <node id="2560">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2575">
        <label>bodyrigid1D.h</label>
        <link refid="d7/d1c/bodyrigid1_d_8h"/>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2576" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
        <childnode refid="2578" relation="include">
        </childnode>
      </node>
      <node id="2577">
        <label>systemchain.cpp</label>
        <link refid="d2/d04/systemchain_8cpp"/>
      </node>
      <node id="2578">
        <label>systemchain2.cpp</label>
        <link refid="df/d87/systemchain2_8cpp"/>
      </node>
      <node id="2582">
        <label>bodyrigid3D.cpp</label>
        <link refid="d0/da1/bodyrigid3_d_8cpp"/>
      </node>
      <node id="2573">
        <label>readerrigid.cpp</label>
        <link refid="d9/d6a/readerrigid_8cpp"/>
      </node>
      <node id="2574">
        <label>bodyrigid0D.cpp</label>
        <link refid="dc/d48/bodyrigid0_d_8cpp"/>
      </node>
      <node id="2568">
        <label>bodyrigid.h</label>
        <link refid="bodyrigid.h"/>
        <childnode refid="2569" relation="include">
        </childnode>
        <childnode refid="2570" relation="include">
        </childnode>
        <childnode refid="2571" relation="include">
        </childnode>
        <childnode refid="2572" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2579" relation="include">
        </childnode>
        <childnode refid="2581" relation="include">
        </childnode>
        <childnode refid="2583" relation="include">
        </childnode>
      </node>
      <node id="2571">
        <label>bodyrigid.cpp</label>
        <link refid="da/d4a/bodyrigid_8cpp"/>
      </node>
      <node id="2576">
        <label>bodyrigid1D.cpp</label>
        <link refid="d5/d29/bodyrigid1_d_8cpp"/>
      </node>
      <node id="2583">
        <label>system.cpp</label>
        <link refid="d6/df8/system_8cpp"/>
      </node>
      <node id="2569">
        <label>reader.cpp</label>
        <link refid="d7/dff/reader_8cpp"/>
      </node>
      <node id="2570">
        <label>readerconstraints.cpp</label>
        <link refid="d2/d38/readerconstraints_8cpp"/>
      </node>
      <node id="2579">
        <label>bodyrigid2D.h</label>
        <link refid="d3/d80/bodyrigid2_d_8h"/>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2580" relation="include">
        </childnode>
      </node>
      <node id="2581">
        <label>bodyrigid3D.h</label>
        <link refid="d1/dbe/bodyrigid3_d_8h"/>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
      </node>
      <node id="2580">
        <label>bodyrigid2D.cpp</label>
        <link refid="dc/d0c/bodyrigid2_d_8cpp"/>
      </node>
      <node id="2572">
        <label>bodyrigid0D.h</label>
        <link refid="da/d60/bodyrigid0_d_8h"/>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2574" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d0/d13/classmknix_1_1_rigid_body" prot="public">mknix::RigidBody</innerclass>
    <innernamespace refid="d2/dde/namespacemknix">mknix</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2015<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Nemesis.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Nemesis<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>Nemesis<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>Nemesis.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.<sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MKNIXRIGIDBODY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MKNIXRIGIDBODY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/d77/body_8h" kindref="compound">body.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;node.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d2/dde/namespacemknix" kindref="compound">mknix</ref><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Node;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="d0/d13/classmknix_1_1_rigid_body" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d13/classmknix_1_1_rigid_body" kindref="compound">RigidBody</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body" kindref="compound">Body</ref><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a4e30b93577cba2bdf87201621a5b637c" kindref="member">RigidBody</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a4e30b93577cba2bdf87201621a5b637c" kindref="member">RigidBody</ref>(<sp/>std::string<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a61c219dee02f49659bc34528c2d0af49" kindref="member">~RigidBody</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1ac20200b40e6e222261bb8257e339d7b4" kindref="member">assembleMassMatrix</ref>(<sp/><ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix&lt;data_type&gt;</ref><sp/>&amp;<sp/>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a18c7ffa5b9f2d3df008a92f421404fac" kindref="member">assembleExternalForces</ref>(<sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref><sp/>&amp;<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>virtual<sp/>Node*<sp/>getDomainNode(<sp/>std::string<sp/>);<sp/>//<sp/>Redefined<sp/>by<sp/>RigidBar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="d0/d13/classmknix_1_1_rigid_body_1a414c67125617203f207508c35c38180e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a414c67125617203f207508c35c38180e" kindref="member">setMass</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_in<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref><sp/>=<sp/>mass_in;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="50" refid="d0/d13/classmknix_1_1_rigid_body_1a78b6a80378f305c135f112c7f4ed05a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a78b6a80378f305c135f112c7f4ed05a5" kindref="member">setDensityFactor</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>density_in<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1ab863575aa5443846e4e07ff2ce058703" kindref="member">densityFactor</ref><sp/>=<sp/>density_in;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a3c41ec0b893b6376614dd5d560d6f011" kindref="member">setInertia</ref>(<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a43249b2d83145ec87c8204da2f6a048c" kindref="member">setPosition</ref>(<sp/>std::vector&lt;double&gt;&amp;<sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a7d3b331008d65caf46f5575fec6943b5" kindref="member">setOutput</ref>(<sp/>std::string<sp/>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1ad0295b9c8e71166c1ec6b1c0ab0335be" kindref="member">getNode</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" kindref="member">outputStep</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" kindref="member">outputStep</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;<sp/>);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a0b0df6ee53217187a301f224b8fe0d92" kindref="member">outputToFile</ref>(<sp/>std::ofstream*<sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1aec0efdaa5c27b8e1611af7c9f047497a" kindref="member">writeBodyInfo</ref>(<sp/>std::ofstream*<sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a82d8d5b7abc4218fcab65e7f0dc266d8" kindref="member">writeBoundaryNodes</ref>(<sp/>std::vector&lt;Point*&gt;&amp;<sp/>);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a127f3394edf38438e794bfed1a6ce0d8" kindref="member">writeBoundaryConnectivity</ref>(std::vector&lt;<sp/>std::vector&lt;Point*&gt;<sp/>&gt;&amp;);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="74" refid="d0/d13/classmknix_1_1_rigid_body_1a569b96d28e2b0c008240a001c3a87eb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a569b96d28e2b0c008240a001c3a87eb3" kindref="member">computeEnergy</ref>;</highlight></codeline>
<codeline lineno="75" refid="d0/d13/classmknix_1_1_rigid_body_1abdb2cd12b0d4c08b6ba7a7c3fd84b2e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1abdb2cd12b0d4c08b6ba7a7c3fd84b2e2" kindref="member">dim</ref>;</highlight></codeline>
<codeline lineno="76" refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>,<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1ab863575aa5443846e4e07ff2ce058703" kindref="member">densityFactor</ref>;</highlight></codeline>
<codeline lineno="77" refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Node*&gt;<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>;</highlight></codeline>
<codeline lineno="78" refid="d0/d13/classmknix_1_1_rigid_body_1a723cff9101bc55839f7147af9bb1eca3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>lmx::Vector&lt;data_type&gt;*<sp/>&gt;<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a723cff9101bc55839f7147af9bb1eca3" kindref="member">domainConf</ref>;</highlight></codeline>
<codeline lineno="79" refid="d0/d13/classmknix_1_1_rigid_body_1ab465103ed21d529c66733705ad5b588c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1ab465103ed21d529c66733705ad5b588c" kindref="member">externalForces</ref>;</highlight></codeline>
<codeline lineno="80" refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d8d/classlmx_1_1_dense_matrix" kindref="compound">lmx::DenseMatrix&lt; data_type &gt;</ref><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>;</highlight></codeline>
<codeline lineno="81" refid="d0/d13/classmknix_1_1_rigid_body_1a372052707d7e00a97db50ce6d323cdf3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>lmx::Vector&lt;data_type&gt;*<sp/>&gt;<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a372052707d7e00a97db50ce6d323cdf3" kindref="member">energy</ref>;</highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/daniel/Projects/MkniX/src/system/bodyrigid.h"/>
  </compounddef>
</doxygen>

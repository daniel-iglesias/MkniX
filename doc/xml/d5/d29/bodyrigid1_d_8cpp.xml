<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="d5/d29/bodyrigid1_d_8cpp" kind="file" language="C++">
    <compoundname>bodyrigid1D.cpp</compoundname>
    <includes refid="d7/d1c/bodyrigid1_d_8h" local="yes">bodyrigid1D.h</includes>
    <includes refid="dd/d6a/simulation_8h" local="no">simulation/simulation.h</includes>
    <incdepgraph>
      <node id="2618">
        <label>bodyrigid1D.h</label>
        <link refid="d7/d1c/bodyrigid1_d_8h"/>
        <childnode refid="2619" relation="include">
        </childnode>
      </node>
      <node id="2631">
        <label>simulation/simulation.h</label>
        <link refid="dd/d6a/simulation_8h"/>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
      </node>
      <node id="2626">
        <label>core/cellboundary.h</label>
        <link refid="db/d20/cellboundary_8h"/>
        <childnode refid="2627" relation="include">
        </childnode>
        <childnode refid="2628" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
      </node>
      <node id="2628">
        <label>string</label>
      </node>
      <node id="2622">
        <label>map</label>
      </node>
      <node id="2621">
        <label>common.h</label>
        <link refid="dc/d54/common_8h"/>
        <childnode refid="2622" relation="include">
        </childnode>
        <childnode refid="2623" relation="include">
        </childnode>
      </node>
      <node id="2632">
        <label>core/material.h</label>
        <link refid="d3/d65/material_8h"/>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
      </node>
      <node id="2625">
        <label>boundarygroup.h</label>
        <link refid="dc/d6b/boundarygroup_8h"/>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
      </node>
      <node id="2619">
        <label>bodyrigid.h</label>
        <link refid="d1/d67/bodyrigid_8h"/>
        <childnode refid="2620" relation="include">
        </childnode>
      </node>
      <node id="2627">
        <label>vector</label>
      </node>
      <node id="2624">
        <label>LMX/lmx.h</label>
      </node>
      <node id="2617">
        <label>bodyrigid1D.cpp</label>
        <link refid="bodyrigid1D.cpp"/>
        <childnode refid="2618" relation="include">
        </childnode>
        <childnode refid="2631" relation="include">
        </childnode>
      </node>
      <node id="2629">
        <label>core/node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="2630" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
      </node>
      <node id="2630">
        <label>point.h</label>
        <link refid="d2/d91/point_8h"/>
        <childnode refid="2627" relation="include">
        </childnode>
        <childnode refid="2622" relation="include">
        </childnode>
        <childnode refid="2628" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
      </node>
      <node id="2620">
        <label>body.h</label>
        <link refid="d0/d77/body_8h"/>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2625" relation="include">
        </childnode>
        <childnode refid="2626" relation="include">
        </childnode>
        <childnode refid="2629" relation="include">
        </childnode>
      </node>
      <node id="2623">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d2/dde/namespacemknix">mknix</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2013<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://code.google.com/p/mknix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307,<sp/>USA.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d7/d1c/bodyrigid1_d_8h" kindref="compound">bodyrigid1D.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dd/d6a/simulation_8h" kindref="compound">simulation/simulation.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d2/dde/namespacemknix" kindref="compound">mknix</ref><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="d6/dd9/classmknix_1_1_rigid_bar_1abb021e56fd2e7f7a098125e7de3db5e1" refkind="member"><highlight class="normal"><ref refid="d6/dd9/classmknix_1_1_rigid_bar_1abb021e56fd2e7f7a098125e7de3db5e1" kindref="member">RigidBar::RigidBar</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body" kindref="compound">RigidBody</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>Jo(0)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="d6/dd9/classmknix_1_1_rigid_bar_1ac47bc0c8fc15e799f67a76925b5919bf" refkind="member"><highlight class="normal"><ref refid="d6/dd9/classmknix_1_1_rigid_bar_1abb021e56fd2e7f7a098125e7de3db5e1" kindref="member">RigidBar::RigidBar</ref>(std::string<sp/>title_in,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref><sp/>*<sp/>nodeA_in,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref><sp/>*<sp/>nodeB_in,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mass_in</highlight></codeline>
<codeline lineno="36"><highlight class="normal">)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body" kindref="compound">RigidBody</ref>(title_in)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref><sp/>=<sp/>mass_in;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Read<sp/>frameNodes<sp/>from<sp/>theReader:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>It<sp/>is<sp/>assumed<sp/>that<sp/>correspond<sp/>to<sp/>extremes<sp/>of<sp/>bar<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>.push_back(nodeA_in);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>.push_back(nodeB_in);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>calculate<sp/>bar<sp/>properties<sp/>and<sp/>reposition<sp/>frameNodes<sp/>to<sp/>the<sp/>normalized<sp/>position</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>lenght<sp/>=<sp/>std::sqrt(std::pow(nodeB_in-&gt;<ref refid="d3/d19/classmknix_1_1_point_1a2942110ac86c21e11986081670bb3a82" kindref="member">getX</ref>()<sp/>-<sp/>nodeA_in-&gt;<ref refid="d3/d19/classmknix_1_1_point_1a2942110ac86c21e11986081670bb3a82" kindref="member">getX</ref>(),<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pow(nodeB_in-&gt;<ref refid="d3/d19/classmknix_1_1_point_1a16955d7ef56edea059119f93905e1196" kindref="member">getY</ref>()<sp/>-<sp/>nodeA_in-&gt;<ref refid="d3/d19/classmknix_1_1_point_1a16955d7ef56edea059119f93905e1196" kindref="member">getY</ref>(),<sp/>2)<sp/>+</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pow(nodeB_in-&gt;<ref refid="d3/d19/classmknix_1_1_point_1a739698b4f6a21b40e7fc7c82af69c479" kindref="member">getZ</ref>()<sp/>-<sp/>nodeA_in-&gt;<ref refid="d3/d19/classmknix_1_1_point_1a739698b4f6a21b40e7fc7c82af69c479" kindref="member">getZ</ref>(),<sp/>2));</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>rho<sp/>=<sp/>mass_in<sp/>/<sp/>lenght;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>.resize(2<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1abdb2cd12b0d4c08b6ba7a7c3fd84b2e2" kindref="member">dim</ref>,<sp/>2<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1abdb2cd12b0d4c08b6ba7a7c3fd84b2e2" kindref="member">dim</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ab465103ed21d529c66733705ad5b588c" kindref="member">externalForces</ref>.resize(2<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1abdb2cd12b0d4c08b6ba7a7c3fd84b2e2" kindref="member">dim</ref>);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="d6/dd9/classmknix_1_1_rigid_bar_1aa349d4406824acbd0b29d25d9a2f2da4" refkind="member"><highlight class="normal"><ref refid="d6/dd9/classmknix_1_1_rigid_bar_1aa349d4406824acbd0b29d25d9a2f2da4" kindref="member">RigidBar::~RigidBar</ref>()</highlight></codeline>
<codeline lineno="56"><highlight class="normal">{</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="d6/dd9/classmknix_1_1_rigid_bar_1a0b125aafa37253d47041ba107f8eaed4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/dd9/classmknix_1_1_rigid_bar_1a0b125aafa37253d47041ba107f8eaed4" kindref="member">RigidBar::setInertia</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>inertia_in,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>axis)</highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(axis<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Jo<sp/>=<sp/>inertia_in;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/>cerr<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Trying<sp/>to<sp/>set<sp/>inertia<sp/>out<sp/>of<sp/>bounds<sp/>in<sp/>RigidBar&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="d6/dd9/classmknix_1_1_rigid_bar_1a7cee7a990c62bdac1ebf6a90903a9e15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/dd9/classmknix_1_1_rigid_bar_1a7cee7a990c62bdac1ebf6a90903a9e15" kindref="member">RigidBar::setPosition</ref>(std::vector&lt;double&gt;&amp;<sp/>position)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>check<sp/>vector<sp/>size.<sp/>Should<sp/>have<sp/>3<sp/>elements:<sp/>CoG_x,<sp/>CoG_y,<sp/>rotation<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>[0]-&gt;setX(position[0]<sp/>-<sp/>lenght<sp/>/<sp/>2<sp/>*<sp/>std::cos(position[3]));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>[0]-&gt;setY(position[1]<sp/>-<sp/>lenght<sp/>/<sp/>2<sp/>*<sp/>std::sin(position[3]));</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>[1]-&gt;setX(position[0]<sp/>+<sp/>lenght<sp/>/<sp/>2<sp/>*<sp/>std::cos(position[3]));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>[1]-&gt;setY(position[1]<sp/>+<sp/>lenght<sp/>/<sp/>2<sp/>*<sp/>std::sin(position[3]));</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="d6/dd9/classmknix_1_1_rigid_bar_1a3d368a1a10b600179fbb7e901472c301" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/dd9/classmknix_1_1_rigid_bar_1a3d368a1a10b600179fbb7e901472c301" kindref="member">RigidBar::calcMassMatrix</ref>()</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(0,<sp/>0)<sp/>=<sp/>1.<sp/>/<sp/>3.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(1,<sp/>1)<sp/>=<sp/>1.<sp/>/<sp/>3.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>(),<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>())<sp/>=<sp/>1.<sp/>/<sp/>3.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>+<sp/>1,<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>+<sp/>1)<sp/>=<sp/>1.<sp/>/<sp/>3.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(0,<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>())<sp/>=<sp/>1.<sp/>/<sp/>6.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>(),<sp/>0)<sp/>=<sp/>1.<sp/>/<sp/>6.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(1,<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>+<sp/>1)<sp/>=<sp/>1.<sp/>/<sp/>6.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>+<sp/>1,<sp/>1)<sp/>=<sp/>1.<sp/>/<sp/>6.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(2,<sp/>2)<sp/>=<sp/>1.<sp/>/<sp/>3.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>+<sp/>2,<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>+<sp/>2)<sp/>=<sp/>1.<sp/>/<sp/>3.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(2,<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>+<sp/>2)<sp/>=<sp/>1.<sp/>/<sp/>6.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ae9b2edfc311425d483edaaf7100d6ab7" kindref="member">localMassMatrix</ref>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>+<sp/>2,<sp/>2)<sp/>=<sp/>1.<sp/>/<sp/>6.<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="d6/dd9/classmknix_1_1_rigid_bar_1a4325fbe1df7832ce09bd2bf72b00cf67" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/dd9/classmknix_1_1_rigid_bar_1a4325fbe1df7832ce09bd2bf72b00cf67" kindref="member">RigidBar::calcExternalForces</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ab465103ed21d529c66733705ad5b588c" kindref="member">externalForces</ref>(0)<sp/>=<sp/>-0.5<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref><sp/>*<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ae1eca795584573082535d83d0705af29" kindref="member">Simulation::getGravity</ref>(0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ab465103ed21d529c66733705ad5b588c" kindref="member">externalForces</ref>(1)<sp/>=<sp/>-0.5<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref><sp/>*<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ae1eca795584573082535d83d0705af29" kindref="member">Simulation::getGravity</ref>(1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ab465103ed21d529c66733705ad5b588c" kindref="member">externalForces</ref>(2)<sp/>=<sp/>-0.5<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref><sp/>*<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ae1eca795584573082535d83d0705af29" kindref="member">Simulation::getGravity</ref>(2);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ab465103ed21d529c66733705ad5b588c" kindref="member">externalForces</ref>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>())<sp/>=<sp/>-0.5<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref><sp/>*<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ae1eca795584573082535d83d0705af29" kindref="member">Simulation::getGravity</ref>(0);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ab465103ed21d529c66733705ad5b588c" kindref="member">externalForces</ref>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>+<sp/>1)<sp/>=<sp/>-0.5<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref><sp/>*<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ae1eca795584573082535d83d0705af29" kindref="member">Simulation::getGravity</ref>(1);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1ab465103ed21d529c66733705ad5b588c" kindref="member">externalForces</ref>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>+<sp/>2)<sp/>=<sp/>-0.5<sp/>*<sp/><ref refid="d0/d13/classmknix_1_1_rigid_body_1af9643b668fbafd10ffd392b8aebdae5e" kindref="member">mass</ref><sp/>*<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ae1eca795584573082535d83d0705af29" kindref="member">Simulation::getGravity</ref>(2);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110" refid="d6/dd9/classmknix_1_1_rigid_bar_1a1f05aae37c654229c4f6c3ef32944125" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/dd9/classmknix_1_1_rigid_bar_1a1f05aae37c654229c4f6c3ef32944125" kindref="member">RigidBar::addNode</ref>(<ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref><sp/>*<sp/>node_in)</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/de3/classmknix_1_1_body_1abf7eec507e5fc918e4901864a6db0f84" kindref="member">mknix::Body::addNode</ref>(node_in);<sp/></highlight><highlight class="comment">//<sp/>adds<sp/>node_in<sp/>to<sp/>node<sp/>vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.back()-&gt;addSupportNode(this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>[0]);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.back()-&gt;addSupportNode(this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>[1]);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.back()-&gt;setShapeFunType(</highlight><highlight class="stringliteral">&quot;1D&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.back()-&gt;shapeFunSolve(</highlight><highlight class="stringliteral">&quot;1D&quot;</highlight><highlight class="normal">,<sp/>1.);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Node<sp/>*<sp/>RigidBar::getDomainNode(<sp/>std::string<sp/>name_in<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">//<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if(<sp/>name_in<sp/>==<sp/>&quot;NODEA&quot;<sp/>)<sp/>return<sp/>this-&gt;frameNodes[0];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>else<sp/>if(<sp/>name_in<sp/>==<sp/>&quot;NODEB&quot;<sp/>)<sp/>return<sp/>this-&gt;frameNodes[1];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>else<sp/>cerr<sp/>&lt;&lt;<sp/>&quot;ERROR:<sp/>NO<sp/>NODE<sp/>WITH<sp/>THAT<sp/>NAME<sp/>IN<sp/>BAR&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="d6/dd9/classmknix_1_1_rigid_bar_1af4249df4214337e0cd4a2ec2d4c328d0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/dd9/classmknix_1_1_rigid_bar_1af4249df4214337e0cd4a2ec2d4c328d0" kindref="member">RigidBar::writeBoundaryNodes</ref>(std::vector&lt;Node<sp/>*&gt;&amp;<sp/>boundary_nodes)</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>specialize<sp/>only<sp/>for<sp/>the<sp/>bar,<sp/>as<sp/>its<sp/>frameNodes<sp/>are<sp/>its<sp/>own<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>node<sp/>:<sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundary_nodes.push_back(node);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="d6/dd9/classmknix_1_1_rigid_bar_1a63d87541e4d285c879f313b835be6afd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/dd9/classmknix_1_1_rigid_bar_1a63d87541e4d285c879f313b835be6afd" kindref="member">RigidBar::writeBoundaryConnectivity</ref>(std::vector&lt;std::vector&lt;Node<sp/>*&gt;<sp/>&gt;&amp;<sp/>connectivity_nodes)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>We<sp/>specialize<sp/>only<sp/>for<sp/>the<sp/>bar,<sp/>as<sp/>its<sp/>frameNodes<sp/>are<sp/>its<sp/>own<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>connectivity_nodes.push_back(std::vector&lt;Node<sp/>*&gt;());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>node<sp/>:<sp/>this-&gt;<ref refid="d0/d13/classmknix_1_1_rigid_body_1a8ecbeb686c302e33e0885db701f0b8f9" kindref="member">frameNodes</ref>)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectivity_nodes.back().push_back(node);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/daniel/Projects/MkniX/src/system/bodyrigid1D.cpp"/>
  </compounddef>
</doxygen>

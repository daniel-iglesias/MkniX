<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="dc/d6b/boundarygroup_8h" kind="file" language="C++">
    <compoundname>boundarygroup.h</compoundname>
    <includes refid="dc/d54/common_8h" local="yes">common.h</includes>
    <includes local="yes">LMX/lmx.h</includes>
    <includedby refid="d0/d77/body_8h" local="yes">body.h</includedby>
    <includedby refid="d1/d01/boundarygroup_8cpp" local="yes">boundarygroup.cpp</includedby>
    <incdepgraph>
      <node id="2752">
        <label>map</label>
      </node>
      <node id="2751">
        <label>common.h</label>
        <link refid="dc/d54/common_8h"/>
        <childnode refid="2752" relation="include">
        </childnode>
        <childnode refid="2753" relation="include">
        </childnode>
      </node>
      <node id="2750">
        <label>boundarygroup.h</label>
        <link refid="boundarygroup.h"/>
        <childnode refid="2751" relation="include">
        </childnode>
        <childnode refid="2754" relation="include">
        </childnode>
      </node>
      <node id="2754">
        <label>LMX/lmx.h</label>
      </node>
      <node id="2753">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2757">
        <label>body.cpp</label>
        <link refid="d1/d5f/body_8cpp"/>
      </node>
      <node id="2773">
        <label>bodyrigid1D.h</label>
        <link refid="d7/d1c/bodyrigid1_d_8h"/>
        <childnode refid="2771" relation="include">
        </childnode>
        <childnode refid="2774" relation="include">
        </childnode>
        <childnode refid="2775" relation="include">
        </childnode>
        <childnode refid="2776" relation="include">
        </childnode>
      </node>
      <node id="2775">
        <label>systemchain.cpp</label>
        <link refid="d2/d04/systemchain_8cpp"/>
      </node>
      <node id="2776">
        <label>systemchain2.cpp</label>
        <link refid="df/d87/systemchain2_8cpp"/>
      </node>
      <node id="2780">
        <label>bodyrigid3D.cpp</label>
        <link refid="d0/da1/bodyrigid3_d_8cpp"/>
      </node>
      <node id="2766">
        <label>bodyflexglobalgalerkin.cpp</label>
        <link refid="db/dcf/bodyflexglobalgalerkin_8cpp"/>
      </node>
      <node id="2763">
        <label>bodyflexframegalerkin.cpp</label>
        <link refid="d7/dfd/bodyflexframegalerkin_8cpp"/>
      </node>
      <node id="2771">
        <label>readerrigid.cpp</label>
        <link refid="d9/d6a/readerrigid_8cpp"/>
      </node>
      <node id="2758">
        <label>bodyflex.h</label>
        <link refid="dd/dbc/bodyflex_8h"/>
        <childnode refid="2759" relation="include">
        </childnode>
        <childnode refid="2760" relation="include">
        </childnode>
        <childnode refid="2761" relation="include">
        </childnode>
        <childnode refid="2762" relation="include">
        </childnode>
        <childnode refid="2764" relation="include">
        </childnode>
        <childnode refid="2767" relation="include">
        </childnode>
      </node>
      <node id="2772">
        <label>bodyrigid0D.cpp</label>
        <link refid="dc/d48/bodyrigid0_d_8cpp"/>
      </node>
      <node id="2762">
        <label>bodyflexframegalerkin.h</label>
        <link refid="d6/d10/bodyflexframegalerkin_8h"/>
        <childnode refid="2763" relation="include">
        </childnode>
      </node>
      <node id="2755">
        <label>boundarygroup.h</label>
        <link refid="boundarygroup.h"/>
        <childnode refid="2756" relation="include">
        </childnode>
        <childnode refid="2781" relation="include">
        </childnode>
      </node>
      <node id="2768">
        <label>bodyrigid.h</label>
        <link refid="d1/d67/bodyrigid_8h"/>
        <childnode refid="2759" relation="include">
        </childnode>
        <childnode refid="2760" relation="include">
        </childnode>
        <childnode refid="2769" relation="include">
        </childnode>
        <childnode refid="2770" relation="include">
        </childnode>
        <childnode refid="2773" relation="include">
        </childnode>
        <childnode refid="2777" relation="include">
        </childnode>
        <childnode refid="2779" relation="include">
        </childnode>
        <childnode refid="2767" relation="include">
        </childnode>
      </node>
      <node id="2764">
        <label>bodyflexglobalgalerkin.h</label>
        <link refid="df/d1c/bodyflexglobalgalerkin_8h"/>
        <childnode refid="2765" relation="include">
        </childnode>
        <childnode refid="2766" relation="include">
        </childnode>
      </node>
      <node id="2769">
        <label>bodyrigid.cpp</label>
        <link refid="da/d4a/bodyrigid_8cpp"/>
      </node>
      <node id="2761">
        <label>bodyflex.cpp</label>
        <link refid="d6/d1e/bodyflex_8cpp"/>
      </node>
      <node id="2774">
        <label>bodyrigid1D.cpp</label>
        <link refid="d5/d29/bodyrigid1_d_8cpp"/>
      </node>
      <node id="2767">
        <label>system.cpp</label>
        <link refid="d6/df8/system_8cpp"/>
      </node>
      <node id="2781">
        <label>boundarygroup.cpp</label>
        <link refid="d1/d01/boundarygroup_8cpp"/>
      </node>
      <node id="2759">
        <label>reader.cpp</label>
        <link refid="d7/dff/reader_8cpp"/>
      </node>
      <node id="2765">
        <label>readerflex.cpp</label>
        <link refid="d6/daf/readerflex_8cpp"/>
      </node>
      <node id="2756">
        <label>body.h</label>
        <link refid="d0/d77/body_8h"/>
        <childnode refid="2757" relation="include">
        </childnode>
        <childnode refid="2758" relation="include">
        </childnode>
        <childnode refid="2768" relation="include">
        </childnode>
        <childnode refid="2767" relation="include">
        </childnode>
      </node>
      <node id="2760">
        <label>readerconstraints.cpp</label>
        <link refid="d2/d38/readerconstraints_8cpp"/>
      </node>
      <node id="2777">
        <label>bodyrigid2D.h</label>
        <link refid="d3/d80/bodyrigid2_d_8h"/>
        <childnode refid="2771" relation="include">
        </childnode>
        <childnode refid="2778" relation="include">
        </childnode>
      </node>
      <node id="2779">
        <label>bodyrigid3D.h</label>
        <link refid="d1/dbe/bodyrigid3_d_8h"/>
        <childnode refid="2771" relation="include">
        </childnode>
        <childnode refid="2780" relation="include">
        </childnode>
      </node>
      <node id="2778">
        <label>bodyrigid2D.cpp</label>
        <link refid="dc/d0c/bodyrigid2_d_8cpp"/>
      </node>
      <node id="2770">
        <label>bodyrigid0D.h</label>
        <link refid="da/d60/bodyrigid0_d_8h"/>
        <childnode refid="2771" relation="include">
        </childnode>
        <childnode refid="2772" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="d8/d6b/classmknix_1_1_boundary_group" prot="public">mknix::BoundaryGroup</innerclass>
    <innernamespace refid="d2/dde/namespacemknix">mknix</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(C)<sp/>2015<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Nemesis.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Nemesis<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>Nemesis<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>License<sp/>along<sp/>with<sp/>Nemesis.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.<sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>MKNIXBOUNDARYGROUP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MKNIXBOUNDARYGROUP_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dc/d54/common_8h" kindref="compound">common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;LMX/lmx.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d2/dde/namespacemknix" kindref="compound">mknix</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Point;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Node;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CellBoundary;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">LoadThermalBoundary1D;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="d8/d6b/classmknix_1_1_boundary_group" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/d6b/classmknix_1_1_boundary_group" kindref="compound">BoundaryGroup</ref></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1a1ed5b1b020af6ed3321b501be28206b4" kindref="member">BoundaryGroup</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>BoundaryGroup(<sp/>std::string<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1ae05b627df857d6c6525f096e2870ff0a" kindref="member">~BoundaryGroup</ref>();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1af82241f10da2001d12c6557cfac7d565" kindref="member">initialize</ref>();</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1aa534d94502044262eff775598d16773c" kindref="member">calcExternalHeat</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1a6ba6b458bf600bd949855c80301c9636" kindref="member">assembleExternalHeat</ref>(<ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>virtual<sp/>void<sp/>assembleExternalForces(<sp/>lmx::Vector&lt;data_type&gt;<sp/>&amp;<sp/>)<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="d8/d6b/classmknix_1_1_boundary_group_1af522d9ba6100877bfe7c02ee5654f609" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1af522d9ba6100877bfe7c02ee5654f609" kindref="member">addNode</ref>(<ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref><sp/>*<sp/>node_in)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d8/d6b/classmknix_1_1_boundary_group_1ac38d6a03d7b780a8d34bf0658b392913" kindref="member">nodes</ref>.push_back(node_in);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="d8/d6b/classmknix_1_1_boundary_group_1a78be50152897f62f4417fdb03653f92e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1a78be50152897f62f4417fdb03653f92e" kindref="member">addCell</ref>(<ref refid="d8/d1e/classmknix_1_1_cell_boundary" kindref="compound">CellBoundary</ref><sp/>*<sp/>cell_in)</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num<sp/>=<sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1ad9eef843eac38af75887c541c25159c5" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="d8/d6b/classmknix_1_1_boundary_group_1ad9eef843eac38af75887c541c25159c5" kindref="member">cells</ref>[num]<sp/>=<sp/>cell_in;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Temporary,<sp/>should<sp/>be<sp/>a<sp/>pointer<sp/>to<sp/>a<sp/>load<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="d8/d6b/classmknix_1_1_boundary_group_1ac4cba644c5ec528422342dfb90ba0458" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1ac4cba644c5ec528422342dfb90ba0458" kindref="member">setLoadThermal</ref>(<ref refid="df/df4/classmknix_1_1_load_thermal_boundary1_d" kindref="compound">LoadThermalBoundary1D</ref><sp/>*<sp/>theLoad)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1a1e28a9bc8786cf8e14d88afd87a12ee7" kindref="member">loadThermalBoundaryGroup</ref><sp/>=<sp/>theLoad;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="77" refid="d8/d6b/classmknix_1_1_boundary_group_1ac38d6a03d7b780a8d34bf0658b392913" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Node<sp/>*&gt;<sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1ac38d6a03d7b780a8d34bf0658b392913" kindref="member">nodes</ref>;</highlight></codeline>
<codeline lineno="78" refid="d8/d6b/classmknix_1_1_boundary_group_1ad9eef843eac38af75887c541c25159c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,<sp/>CellBoundary<sp/>*&gt;<sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1ad9eef843eac38af75887c541c25159c5" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="80" refid="d8/d6b/classmknix_1_1_boundary_group_1a1e28a9bc8786cf8e14d88afd87a12ee7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df/df4/classmknix_1_1_load_thermal_boundary1_d" kindref="compound">LoadThermalBoundary1D</ref><sp/>*<sp/><ref refid="d8/d6b/classmknix_1_1_boundary_group_1a1e28a9bc8786cf8e14d88afd87a12ee7" kindref="member">loadThermalBoundaryGroup</ref>;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal">};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/daniel/Projects/MkniX/src/system/boundarygroup.h"/>
  </compounddef>
</doxygen>

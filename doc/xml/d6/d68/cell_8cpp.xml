<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="d6/d68/cell_8cpp" kind="file">
    <compoundname>cell.cpp</compoundname>
    <includes refid="d0/ddd/cell_8h" local="yes">cell.h</includes>
    <incdepgraph>
      <node id="5674">
        <label>material.h</label>
        <link refid="d3/d65/material_8h"/>
        <childnode refid="5673" relation="include">
        </childnode>
      </node>
      <node id="5665">
        <label>cell.h</label>
        <link refid="d0/ddd/cell_8h"/>
        <childnode refid="5666" relation="include">
        </childnode>
      </node>
      <node id="5671">
        <label>string</label>
      </node>
      <node id="5668">
        <label>map</label>
      </node>
      <node id="5670">
        <label>point.h</label>
        <link refid="d2/d91/point_8h"/>
        <childnode refid="5667" relation="include">
        </childnode>
        <childnode refid="5668" relation="include">
        </childnode>
        <childnode refid="5671" relation="include">
        </childnode>
        <childnode refid="5672" relation="include">
        </childnode>
      </node>
      <node id="5672">
        <label>common.h</label>
        <link refid="dc/d54/common_8h"/>
      </node>
      <node id="5667">
        <label>vector</label>
      </node>
      <node id="5673">
        <label>LMX/lmx.h</label>
      </node>
      <node id="5664">
        <label>cell.cpp</label>
        <link refid="cell.cpp"/>
        <childnode refid="5665" relation="include">
        </childnode>
      </node>
      <node id="5666">
        <label>gausspoint.h</label>
        <link refid="d4/dc6/gausspoint_8h"/>
        <childnode refid="5667" relation="include">
        </childnode>
        <childnode refid="5668" relation="include">
        </childnode>
        <childnode refid="5669" relation="include">
        </childnode>
        <childnode refid="5670" relation="include">
        </childnode>
        <childnode refid="5672" relation="include">
        </childnode>
        <childnode refid="5674" relation="include">
        </childnode>
      </node>
      <node id="5669">
        <label>node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="5667" relation="include">
        </childnode>
        <childnode refid="5670" relation="include">
        </childnode>
        <childnode refid="5673" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="d2/dde/namespacemknix">mknix</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//--<sp/>Licencia<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d0/ddd/cell_8h" kindref="compound" tooltip="Background cells for integration. ">cell.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mknix<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="db/dd4/classmknix_1_1_cell_1a1c285cc4f38656550e8e2926058e8612" refkind="member"><highlight class="normal"><ref refid="db/dd4/classmknix_1_1_cell_1a1c285cc4f38656550e8e2926058e8612" kindref="member">Cell::Cell</ref>()</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="db/dd4/classmknix_1_1_cell_1ad0988ed8a4aac7c7440bee9413e1189f" refkind="member"><highlight class="normal"><ref refid="db/dd4/classmknix_1_1_cell_1a1c285cc4f38656550e8e2926058e8612" kindref="member">Cell::Cell</ref>(<sp/><ref refid="d6/d4a/classmknix_1_1_material" kindref="compound">Material</ref>&amp;<sp/>material_in,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>formulation_in,</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>alpha_in,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGPoints_in</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>:<sp/>mat(&amp;material_in)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>formulation(formulation_in)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>alpha(alpha_in)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>nGPoints(nGPoints_in)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>,<sp/>dc(0)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="db/dd4/classmknix_1_1_cell_1ab4efc3f7c10212304dd776e7b58bb57b" refkind="member"><highlight class="normal"><ref refid="db/dd4/classmknix_1_1_cell_1ab4efc3f7c10212304dd776e7b58bb57b" kindref="member">Cell::~Cell</ref>()</highlight></codeline>
<codeline lineno="25"><highlight class="normal">{</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>for<sp/>Meshfree<sp/>Cells,<sp/>function<sp/>is<sp/>specialized<sp/>for<sp/>FEM<sp/>elements<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="db/dd4/classmknix_1_1_cell_1a77d7851793538f99d8aa0ea664fa0fb7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a77d7851793538f99d8aa0ea664fa0fb7" kindref="member">Cell::initialize</ref>(<sp/>std::vector&lt;Node*&gt;<sp/>&amp;<sp/>nodes_in<sp/>)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{<sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>function<sp/>can<sp/>be<sp/>joined<sp/>with<sp/>assembleGaussPoints<sp/>so<sp/>the<sp/>Gpoints<sp/>are<sp/>iterated<sp/>only<sp/>once...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it_gp;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>it_gp<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_gp<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_gp)</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it_gp)-&gt;findSupportNodes(<sp/>nodes_in<sp/>);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>the<sp/>dc<sp/>and<sp/>alpha<sp/>parameteres<sp/>for<sp/>cell<sp/>nodes.<sp/>This<sp/>way,<sp/>the<sp/>values<sp/>will<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>be<sp/>greater<sp/>than<sp/>zero<sp/>only<sp/>for<sp/>meshfree<sp/>nodes<sp/>which<sp/>need<sp/>shapefunctions<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>calculated.<sp/>The<sp/>type<sp/>of<sp/>shape<sp/>function<sp/>is<sp/>also<sp/>set<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::vector&lt;Node*&gt;::iterator<sp/>it_p;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for<sp/>(<sp/>it_p<sp/>=<sp/>nodes.begin();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_p<sp/>!=<sp/>nodes.end();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>(*it_p)-&gt;setAlphai(<sp/>alpha<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>(*it_p)-&gt;setDc(<sp/>dc<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(<sp/>formulation<sp/>==<sp/>&quot;RPIM&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it_p)-&gt;setShapeFunType(<sp/>&quot;RBF&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>else<sp/>if(<sp/>formulation<sp/>==<sp/>&quot;EFG&quot;<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*it_p)-&gt;setShapeFunType(<sp/>&quot;MLS&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="db/dd4/classmknix_1_1_cell_1a6772f09fe6965faff4b53486b09f7235" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a6772f09fe6965faff4b53486b09f7235" kindref="member">Cell::computeShapeFunctions</ref>(<sp/><sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="db/dd4/classmknix_1_1_cell_1ad637a730575145fbc61f884b2edac8f8" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;RPIM&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;shapeFunSolve(<sp/></highlight><highlight class="stringliteral">&quot;RBF&quot;</highlight><highlight class="normal">,<sp/>1.03<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="db/dd4/classmknix_1_1_cell_1ad637a730575145fbc61f884b2edac8f8" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;EFG&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*it)-&gt;shapeFunSolve(<sp/></highlight><highlight class="stringliteral">&quot;MLS&quot;</highlight><highlight class="normal">,<sp/>1.03<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="db/dd4/classmknix_1_1_cell_1a675db1cafb39d5abab7b13994df21045" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a675db1cafb39d5abab7b13994df21045" kindref="member">Cell::computeCapacityGaussPoints</ref>(<sp/><sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeCij(<sp/>);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="db/dd4/classmknix_1_1_cell_1a4d4af2c299e451b91a81819ccf5d6358" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a4d4af2c299e451b91a81819ccf5d6358" kindref="member">Cell::assembleCapacityGaussPoints</ref>(<sp/>lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalCapacity<sp/>)</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;assembleCij(<sp/>globalCapacity<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="db/dd4/classmknix_1_1_cell_1a5d8c11ba58bbaa6f70d5dc2b530868e7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a5d8c11ba58bbaa6f70d5dc2b530868e7" kindref="member">Cell::computeConductivityGaussPoints</ref>(<sp/><sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal">{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeHij(<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="db/dd4/classmknix_1_1_cell_1aae283c2a89beb517ed41b42bfdb19957" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1aae283c2a89beb517ed41b42bfdb19957" kindref="member">Cell::assembleConductivityGaussPoints</ref>(<sp/>lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalConductivity<sp/>)</highlight></codeline>
<codeline lineno="104"><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;assembleHij(<sp/>globalConductivity<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="db/dd4/classmknix_1_1_cell_1a45c2f8b146cafa0ba3a6503f70eb38a7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a45c2f8b146cafa0ba3a6503f70eb38a7" kindref="member">Cell::computeQextGaussPoints</ref>(<sp/><ref refid="df/d32/classmknix_1_1_thermal_load" kindref="compound">ThermalLoad</ref>*<sp/>thermalLoad_in<sp/>)</highlight></codeline>
<codeline lineno="115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeQext(<sp/>thermalLoad_in<sp/>);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal">}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="db/dd4/classmknix_1_1_cell_1a130944ac8867e93ce882e7cc8c3555ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a130944ac8867e93ce882e7cc8c3555ca" kindref="member">Cell::assembleQextGaussPoints</ref>(<sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalQext<sp/>)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;assembleQext(<sp/>globalQext<sp/>);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="db/dd4/classmknix_1_1_cell_1a32a01eb5f854fc23353c0eb64b65e2da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a32a01eb5f854fc23353c0eb64b65e2da" kindref="member">Cell::computeMGaussPoints</ref>(<sp/><sp/>)</highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeMij(<sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="db/dd4/classmknix_1_1_cell_1a0b44063103766cd26b0411156c6d6004" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a0b44063103766cd26b0411156c6d6004" kindref="member">Cell::assembleMGaussPoints</ref>(<sp/>lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalMass<sp/>)</highlight></codeline>
<codeline lineno="147"><highlight class="normal">{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;assembleMij(<sp/>globalMass<sp/>);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal">}</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="db/dd4/classmknix_1_1_cell_1a1c3123f613acd57332a6e84dc3736b86" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a1c3123f613acd57332a6e84dc3736b86" kindref="member">Cell::computeFintGaussPoints</ref>(<sp/><sp/>)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeFint(<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal">}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="db/dd4/classmknix_1_1_cell_1a84014b9ed9c8a49c604f4ddb91b524fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a84014b9ed9c8a49c604f4ddb91b524fe" kindref="member">Cell::computeNLFintGaussPoints</ref>(<sp/><sp/>)</highlight></codeline>
<codeline lineno="169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeNLFint(<sp/>);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="db/dd4/classmknix_1_1_cell_1a1bf285b7dd7f06ece2f92e2b4389d6f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a1bf285b7dd7f06ece2f92e2b4389d6f5" kindref="member">Cell::assembleFintGaussPoints</ref>(<sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalFint<sp/>)</highlight></codeline>
<codeline lineno="180"><highlight class="normal">{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;assembleFint(<sp/>globalFint<sp/>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="db/dd4/classmknix_1_1_cell_1a19b4ed719612fe2e0043d0cebcbe1537" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a19b4ed719612fe2e0043d0cebcbe1537" kindref="member">Cell::computeFextGaussPoints</ref>(<sp/><sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeFext(<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="198"><highlight class="normal">}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="db/dd4/classmknix_1_1_cell_1a7c381e6cbcdb2478505645cad57a2c6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a7c381e6cbcdb2478505645cad57a2c6e" kindref="member">Cell::assembleFextGaussPoints</ref>(<sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalFext<sp/>)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;assembleFext(<sp/>globalFext<sp/>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="db/dd4/classmknix_1_1_cell_1a379600644881412c03608d3d32c36d49" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a379600644881412c03608d3d32c36d49" kindref="member">Cell::computeKGaussPoints</ref>(<sp/><sp/>)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeKij(<sp/>);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223" refid="db/dd4/classmknix_1_1_cell_1a56231c1df8cd13f6b3f04356da6c2955" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a56231c1df8cd13f6b3f04356da6c2955" kindref="member">Cell::computeNLKGaussPoints</ref>(<sp/><sp/>)</highlight></codeline>
<codeline lineno="224"><highlight class="normal">{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeNLKij(<sp/>);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="db/dd4/classmknix_1_1_cell_1a8b703b97535562245382523c3702a054" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a8b703b97535562245382523c3702a054" kindref="member">Cell::assembleKGaussPoints</ref>(<sp/>lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalTangent<sp/>)</highlight></codeline>
<codeline lineno="235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;assembleKij(<sp/>globalTangent<sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="db/dd4/classmknix_1_1_cell_1a97fdd8bbf158f3b03b1af601177c2585" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a97fdd8bbf158f3b03b1af601177c2585" kindref="member">Cell::assembleRGaussPoints</ref>(<sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalStress,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstNode</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeStress(<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;assembleRi(<sp/>globalStress,<sp/>firstNode<sp/>);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="db/dd4/classmknix_1_1_cell_1af65d528a607f3215d04449551db94dcd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1af65d528a607f3215d04449551db94dcd" kindref="member">Cell::assembleNLRGaussPoints</ref>(<sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalStress,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>firstNode</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="262"><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;computeNLStress(<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;assembleRi(<sp/>globalStress,<sp/>firstNode<sp/>);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273" refid="db/dd4/classmknix_1_1_cell_1a9aba982ff2a54738ec8b38446d333f8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a9aba982ff2a54738ec8b38446d333f8d" kindref="member">Cell::calcPotentialEGaussPoints</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;<sp/>&amp;<sp/>q<sp/>)</highlight></codeline>
<codeline lineno="274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>potentialEnergy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>potentialEnergy<sp/>+=<sp/>(*it)-&gt;calcPotentialE(<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>potentialEnergy;</highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="db/dd4/classmknix_1_1_cell_1aa0b40b9534a376333490fe73d921e552" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1aa0b40b9534a376333490fe73d921e552" kindref="member">Cell::calcKineticEGaussPoints</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;<sp/>&amp;<sp/>qdot<sp/>)</highlight></codeline>
<codeline lineno="288"><highlight class="normal">{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>kineticEnergy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>kineticEnergy<sp/>+=<sp/>(*it)-&gt;calcKineticE(<sp/>qdot<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>kineticEnergy;</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301" refid="db/dd4/classmknix_1_1_cell_1a1b59c56aa8983a27571c6809b03604c5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a1b59c56aa8983a27571c6809b03604c5" kindref="member">Cell::calcElasticEGaussPoints</ref>(<sp/>)</highlight></codeline>
<codeline lineno="302"><highlight class="normal">{</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>elasticEnergy<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>std::vector&lt;GaussPoint*&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>!=<sp/><ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>elasticEnergy<sp/>+=<sp/>(*it)-&gt;calcElasticE(<sp/>);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elasticEnergy;</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315" refid="db/dd4/classmknix_1_1_cell_1a6dd6795d452d5bd8ff26de1419baef31" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/dd4/classmknix_1_1_cell_1a6dd6795d452d5bd8ff26de1419baef31" kindref="member">Cell::gnuplotOutStress</ref>(<sp/>std::ofstream<sp/>&amp;<sp/>gptension<sp/>)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>counter;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::vector&lt;GaussPoint*&gt;::iterator<sp/>it=<ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.begin();</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>it!=<ref refid="db/dd4/classmknix_1_1_cell_1a980ae62ad7e6dda296257455ee173f86" kindref="member">gPoints</ref>.end();</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++it)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>++counter;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>(*it)-&gt;gnuplotOutStress(<sp/>gptension<sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(counter%4<sp/>==<sp/>0)<sp/>gptension<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="326"><highlight class="normal">}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal">}<sp/></highlight><highlight class="comment">//Namespace<sp/>mknix</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dani/Dropbox/MkniX_cmake/src/cell.cpp"/>
  </compounddef>
</doxygen>

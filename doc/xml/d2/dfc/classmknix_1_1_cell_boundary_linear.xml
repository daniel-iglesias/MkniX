<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="d2/dfc/classmknix_1_1_cell_boundary_linear" kind="class" language="C++" prot="public">
    <compoundname>mknix::CellBoundaryLinear</compoundname>
    <basecompoundref refid="d8/d1e/classmknix_1_1_cell_boundary" prot="public" virt="non-virtual">mknix::CellBoundary</basecompoundref>
    <includes refid="db/d1c/cellboundarylinear_8h" local="no">cellboundarylinear.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="d2/dfc/classmknix_1_1_cell_boundary_linear_1aacc5e09eb0a0659471b7d464f506d276" prot="protected" static="no" mutable="no">
        <type>cofe::TensorRank2&lt; 3, double &gt;</type>
        <definition>cofe::TensorRank2&lt;3, double&gt; mknix::CellBoundaryLinear::points</definition>
        <argsstring></argsstring>
        <name>points</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>position of vertex points </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" line="45" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" bodystart="45" bodyend="-1"/>
        <referencedby refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1abd081fad99e161a237a72223f6d70887" compoundref="d8/d2d/cellboundarylinear_8cpp" startline="14" endline="40">CellBoundaryLinear</referencedby>
        <referencedby refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1a45b26c454824aac48876515f9bf154e9" compoundref="d8/d2d/cellboundarylinear_8cpp" startline="105" endline="168">createGaussPoints</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d2/dfc/classmknix_1_1_cell_boundary_linear_1aa83f76ade7dd5353609685270f0cc91d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::CellBoundaryLinear::CellBoundaryLinear</definition>
        <argsstring>()</argsstring>
        <name>CellBoundaryLinear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" line="48" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.cpp" bodystart="9" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="d2/dfc/classmknix_1_1_cell_boundary_linear_1abd081fad99e161a237a72223f6d70887" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::CellBoundaryLinear::CellBoundaryLinear</definition>
        <argsstring>(std::string, double, int, Point *, Point *)</argsstring>
        <name>CellBoundaryLinear</name>
        <param>
          <type>std::string</type>
          <defname>formulation_in</defname>
        </param>
        <param>
          <type>double</type>
          <defname>alpha_in</defname>
        </param>
        <param>
          <type>int</type>
          <defname>nGPoints_in</defname>
        </param>
        <param>
          <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
          <defname>n1_in</defname>
        </param>
        <param>
          <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
          <defname>n2_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" line="50" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.cpp" bodystart="14" bodyend="40"/>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1ab69bec01bb7bb184f74e56f477b4e938" compoundref="db/d20/cellboundary_8h" startline="82">mknix::CellBoundary::bodyPoints</references>
        <references refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1aacc5e09eb0a0659471b7d464f506d276" compoundref="db/d1c/cellboundarylinear_8h" startline="45">points</references>
        <references refid="d3/d19/classmknix_1_1_point_1a2942110ac86c21e11986081670bb3a82" compoundref="d2/d91/point_8h" startline="97" endline="100">mknix::Point::getX</references>
        <references refid="d3/d19/classmknix_1_1_point_1a16955d7ef56edea059119f93905e1196" compoundref="d2/d91/point_8h" startline="102" endline="105">mknix::Point::getY</references>
        <references refid="d3/d19/classmknix_1_1_point_1a739698b4f6a21b40e7fc7c82af69c479" compoundref="d2/d91/point_8h" startline="107" endline="110">mknix::Point::getZ</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1aef298cd6eecdfce7582ff4ab31b8ae8d" compoundref="db/d20/cellboundary_8h" startline="81">mknix::CellBoundary::jacobian</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1ad70e12585e45e068a3dcb8dc98b1347f" compoundref="db/d20/cellboundary_8h" startline="83">mknix::CellBoundary::dc</references>
        <references refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1a45b26c454824aac48876515f9bf154e9" compoundref="d8/d2d/cellboundarylinear_8cpp" startline="105" endline="168">createGaussPoints</references>
      </memberdef>
      <memberdef kind="function" id="d2/dfc/classmknix_1_1_cell_boundary_linear_1a3e2f2235aa3af604f1a81af20d4429f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::CellBoundaryLinear::CellBoundaryLinear</definition>
        <argsstring>(std::string, double, int, Point *, Point *, double)</argsstring>
        <name>CellBoundaryLinear</name>
        <param>
          <type>std::string</type>
          <defname>formulation_in</defname>
        </param>
        <param>
          <type>double</type>
          <defname>alpha_in</defname>
        </param>
        <param>
          <type>int</type>
          <defname>nGPoints_in</defname>
        </param>
        <param>
          <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
          <defname>n1_in</defname>
        </param>
        <param>
          <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
          <defname>n2_in</defname>
        </param>
        <param>
          <type>double</type>
          <defname>dc_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" line="58" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.cpp" bodystart="42" bodyend="68"/>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1ab69bec01bb7bb184f74e56f477b4e938" compoundref="db/d20/cellboundary_8h" startline="82">mknix::CellBoundary::bodyPoints</references>
        <references refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1aacc5e09eb0a0659471b7d464f506d276" compoundref="db/d1c/cellboundarylinear_8h" startline="45">points</references>
        <references refid="d3/d19/classmknix_1_1_point_1a2942110ac86c21e11986081670bb3a82" compoundref="d2/d91/point_8h" startline="97" endline="100">mknix::Point::getX</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1aef298cd6eecdfce7582ff4ab31b8ae8d" compoundref="db/d20/cellboundary_8h" startline="81">mknix::CellBoundary::jacobian</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1ad70e12585e45e068a3dcb8dc98b1347f" compoundref="db/d20/cellboundary_8h" startline="83">mknix::CellBoundary::dc</references>
        <references refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1a45b26c454824aac48876515f9bf154e9" compoundref="d8/d2d/cellboundarylinear_8cpp" startline="105" endline="168">createGaussPoints</references>
      </memberdef>
      <memberdef kind="function" id="d2/dfc/classmknix_1_1_cell_boundary_linear_1acf34a61929cd06bbc0cfedf4005254c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::CellBoundaryLinear::~CellBoundaryLinear</definition>
        <argsstring>()</argsstring>
        <name>~CellBoundaryLinear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" line="67" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.cpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="d2/dfc/classmknix_1_1_cell_boundary_linear_1ab0f0e66b92accf5c88aaa7fac0b8bf59" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::CellBoundaryLinear::initialize</definition>
        <argsstring>(std::vector&lt; Node * &gt; &amp;)</argsstring>
        <name>initialize</name>
        <reimplements refid="d8/d1e/classmknix_1_1_cell_boundary_1afeb33c21dbf85f27d372a06d1a249459">initialize</reimplements>
        <param>
          <type>std::vector&lt; <ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref> * &gt; &amp;</type>
          <defname>nodes_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" line="69" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.cpp" bodystart="75" bodyend="89"/>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1afeb33c21dbf85f27d372a06d1a249459" compoundref="d6/dbd/cellboundary_8cpp" startline="35" endline="43">mknix::CellBoundary::initialize</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1af33b7951a3757bf0362ab8e3164d4bc4" compoundref="db/d20/cellboundary_8h" startline="77">mknix::CellBoundary::formulation</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1ae27f45b466e1bfc213bcca47d0ff85df" compoundref="db/d20/cellboundary_8h" startline="80">mknix::CellBoundary::gPoints</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1ab69bec01bb7bb184f74e56f477b4e938" compoundref="db/d20/cellboundary_8h" startline="82">mknix::CellBoundary::bodyPoints</references>
      </memberdef>
      <memberdef kind="function" id="d2/dfc/classmknix_1_1_cell_boundary_linear_1aea9ed39a191f3e6e89c465f6e3db3002" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::CellBoundaryLinear::computeShapeFunctions</definition>
        <argsstring>()</argsstring>
        <name>computeShapeFunctions</name>
        <reimplements refid="d8/d1e/classmknix_1_1_cell_boundary_1a3821f8f675ec0545a25e9971a4f8aaf3">computeShapeFunctions</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" line="71" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.cpp" bodystart="92" bodyend="102"/>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1a3821f8f675ec0545a25e9971a4f8aaf3" compoundref="d6/dbd/cellboundary_8cpp" startline="46" endline="55">mknix::CellBoundary::computeShapeFunctions</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1af33b7951a3757bf0362ab8e3164d4bc4" compoundref="db/d20/cellboundary_8h" startline="77">mknix::CellBoundary::formulation</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1ae27f45b466e1bfc213bcca47d0ff85df" compoundref="db/d20/cellboundary_8h" startline="80">mknix::CellBoundary::gPoints</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d2/dfc/classmknix_1_1_cell_boundary_linear_1a45b26c454824aac48876515f9bf154e9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::CellBoundaryLinear::createGaussPoints</definition>
        <argsstring>()</argsstring>
        <name>createGaussPoints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" line="76" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.cpp" bodystart="105" bodyend="168"/>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1a38706fffd4e1f057f52d86b19beb5ac7" compoundref="db/d20/cellboundary_8h" startline="79">mknix::CellBoundary::nGPoints</references>
        <references refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1aacc5e09eb0a0659471b7d464f506d276" compoundref="db/d1c/cellboundarylinear_8h" startline="45">points</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1ae27f45b466e1bfc213bcca47d0ff85df" compoundref="db/d20/cellboundary_8h" startline="80">mknix::CellBoundary::gPoints</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1acb76359011a0d0d6be9ed8e4cd24a4d5" compoundref="db/d20/cellboundary_8h" startline="78">mknix::CellBoundary::alpha</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1aef298cd6eecdfce7582ff4ab31b8ae8d" compoundref="db/d20/cellboundary_8h" startline="81">mknix::CellBoundary::jacobian</references>
        <references refid="d8/d1e/classmknix_1_1_cell_boundary_1ad70e12585e45e068a3dcb8dc98b1347f" compoundref="db/d20/cellboundary_8h" startline="83">mknix::CellBoundary::dc</references>
        <referencedby refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1abd081fad99e161a237a72223f6d70887" compoundref="d8/d2d/cellboundarylinear_8cpp" startline="14" endline="40">CellBoundaryLinear</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Daniel Iglesias </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="484">
        <label>mknix::CellBoundaryLinear</label>
        <link refid="d2/dfc/classmknix_1_1_cell_boundary_linear"/>
        <childnode refid="485" relation="public-inheritance">
        </childnode>
      </node>
      <node id="485">
        <label>mknix::CellBoundary</label>
        <link refid="d8/d1e/classmknix_1_1_cell_boundary"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="486">
        <label>mknix::CellBoundaryLinear</label>
        <link refid="d2/dfc/classmknix_1_1_cell_boundary_linear"/>
        <childnode refid="487" relation="public-inheritance">
        </childnode>
      </node>
      <node id="487">
        <label>mknix::CellBoundary</label>
        <link refid="d8/d1e/classmknix_1_1_cell_boundary"/>
      </node>
    </collaborationgraph>
    <location file="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" line="43" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/cellboundarylinear.h" bodystart="42" bodyend="79"/>
    <listofallmembers>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1acb76359011a0d0d6be9ed8e4cd24a4d5" prot="protected" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>alpha</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1a962cb7795b25874914f27f5e7de49eb2" prot="public" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>assembleQextGaussPoints</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1ab69bec01bb7bb184f74e56f477b4e938" prot="protected" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>bodyPoints</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1a92ce1eba9565ff23c47bd091d8525685" prot="public" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>CellBoundary</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1a6f60017dacb83bd9667e666c4d814adc" prot="public" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>CellBoundary</name></member>
      <member refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1aa83f76ade7dd5353609685270f0cc91d" prot="public" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>CellBoundaryLinear</name></member>
      <member refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1abd081fad99e161a237a72223f6d70887" prot="public" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>CellBoundaryLinear</name></member>
      <member refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1a3e2f2235aa3af604f1a81af20d4429f2" prot="public" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>CellBoundaryLinear</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1a267c6e554c2607c8c703ff52fe1b381a" prot="public" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>computeQextGaussPoints</name></member>
      <member refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1aea9ed39a191f3e6e89c465f6e3db3002" prot="public" virt="virtual"><scope>mknix::CellBoundaryLinear</scope><name>computeShapeFunctions</name></member>
      <member refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1a45b26c454824aac48876515f9bf154e9" prot="protected" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>createGaussPoints</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1ad70e12585e45e068a3dcb8dc98b1347f" prot="protected" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>dc</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1af33b7951a3757bf0362ab8e3164d4bc4" prot="protected" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>formulation</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1ae27f45b466e1bfc213bcca47d0ff85df" prot="protected" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>gPoints</name></member>
      <member refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1ab0f0e66b92accf5c88aaa7fac0b8bf59" prot="public" virt="virtual"><scope>mknix::CellBoundaryLinear</scope><name>initialize</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1aef298cd6eecdfce7582ff4ab31b8ae8d" prot="protected" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>jacobian</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1a38706fffd4e1f057f52d86b19beb5ac7" prot="protected" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>nGPoints</name></member>
      <member refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1aacc5e09eb0a0659471b7d464f506d276" prot="protected" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>points</name></member>
      <member refid="d8/d1e/classmknix_1_1_cell_boundary_1ac93e019f0285d1701586a621599849c2" prot="public" virt="virtual"><scope>mknix::CellBoundaryLinear</scope><name>~CellBoundary</name></member>
      <member refid="d2/dfc/classmknix_1_1_cell_boundary_linear_1acf34a61929cd06bbc0cfedf4005254c9" prot="public" virt="non-virtual"><scope>mknix::CellBoundaryLinear</scope><name>~CellBoundaryLinear</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

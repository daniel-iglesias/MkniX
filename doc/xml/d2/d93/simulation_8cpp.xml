<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="d2/d93/simulation_8cpp" kind="file">
    <compoundname>simulation.cpp</compoundname>
    <includes refid="dd/d6a/simulation_8h" local="yes">simulation.h</includes>
    <includes refid="d6/dda/reader_8h" local="yes">reader.h</includes>
    <includes refid="d9/d54/generalcontact_8h" local="yes">generalcontact.h</includes>
    <incdepgraph>
      <node id="8165">
        <label>celltriang.h</label>
        <link refid="dc/d6a/celltriang_8h"/>
        <childnode refid="8159" relation="include">
        </childnode>
      </node>
      <node id="8172">
        <label>bodyrigid2D.h</label>
        <link refid="d3/d80/bodyrigid2_d_8h"/>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
      </node>
      <node id="8180">
        <label>constraintclearance.h</label>
        <link refid="df/de4/constraintclearance_8h"/>
        <childnode refid="8177" relation="include">
        </childnode>
      </node>
      <node id="8155">
        <label>bodyflexglobalgalerkin.h</label>
        <link refid="df/d1c/bodyflexglobalgalerkin_8h"/>
        <childnode refid="8156" relation="include">
        </childnode>
      </node>
      <node id="8164">
        <label>material.h</label>
        <link refid="d3/d65/material_8h"/>
        <childnode refid="8146" relation="include">
        </childnode>
      </node>
      <node id="8157">
        <label>body.h</label>
        <link refid="d0/d77/body_8h"/>
        <childnode refid="8145" relation="include">
        </childnode>
        <childnode refid="8146" relation="include">
        </childnode>
      </node>
      <node id="8159">
        <label>cell.h</label>
        <link refid="d0/ddd/cell_8h"/>
        <childnode refid="8160" relation="include">
        </childnode>
      </node>
      <node id="8177">
        <label>constraint.h</label>
        <link refid="dc/d4d/constraint_8h"/>
        <childnode refid="8145" relation="include">
        </childnode>
        <childnode refid="8146" relation="include">
        </childnode>
      </node>
      <node id="8154">
        <label>string</label>
      </node>
      <node id="8153">
        <label>map</label>
      </node>
      <node id="8163">
        <label>point.h</label>
        <link refid="d2/d91/point_8h"/>
        <childnode refid="8161" relation="include">
        </childnode>
        <childnode refid="8153" relation="include">
        </childnode>
        <childnode refid="8154" relation="include">
        </childnode>
        <childnode refid="8145" relation="include">
        </childnode>
      </node>
      <node id="8149">
        <label>analysisthermaldynamic.h</label>
        <link refid="d1/d1f/analysisthermaldynamic_8h"/>
        <childnode refid="8144" relation="include">
        </childnode>
      </node>
      <node id="8185">
        <label>fstream</label>
      </node>
      <node id="8145">
        <label>common.h</label>
        <link refid="dc/d54/common_8h"/>
      </node>
      <node id="8183">
        <label>reader.h</label>
        <link refid="d6/dda/reader_8h"/>
        <childnode refid="8184" relation="include">
        </childnode>
        <childnode refid="8185" relation="include">
        </childnode>
        <childnode refid="8154" relation="include">
        </childnode>
        <childnode refid="8186" relation="include">
        </childnode>
        <childnode refid="8187" relation="include">
        </childnode>
        <childnode refid="8188" relation="include">
        </childnode>
        <childnode refid="8189" relation="include">
        </childnode>
      </node>
      <node id="8174">
        <label>bodythermal.h</label>
        <link refid="d3/d0b/bodythermal_8h"/>
        <childnode refid="8146" relation="include">
        </childnode>
        <childnode refid="8158" relation="include">
        </childnode>
        <childnode refid="8165" relation="include">
        </childnode>
        <childnode refid="8166" relation="include">
        </childnode>
        <childnode refid="8167" relation="include">
        </childnode>
        <childnode refid="8168" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
        <childnode refid="8175" relation="include">
        </childnode>
      </node>
      <node id="8142">
        <label>simulation.h</label>
        <link refid="dd/d6a/simulation_8h"/>
        <childnode refid="8143" relation="include">
        </childnode>
        <childnode refid="8149" relation="include">
        </childnode>
        <childnode refid="8150" relation="include">
        </childnode>
        <childnode refid="8151" relation="include">
        </childnode>
        <childnode refid="8152" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
        <childnode refid="8164" relation="include">
        </childnode>
      </node>
      <node id="8151">
        <label>analysisthermalstatic.h</label>
        <link refid="db/d65/analysisthermalstatic_8h"/>
        <childnode refid="8144" relation="include">
        </childnode>
      </node>
      <node id="8175">
        <label>thermalload.h</label>
        <link refid="de/df4/thermalload_8h"/>
        <childnode refid="8145" relation="include">
        </childnode>
        <childnode refid="8146" relation="include">
        </childnode>
        <childnode refid="8153" relation="include">
        </childnode>
      </node>
      <node id="8143">
        <label>analysisdynamic.h</label>
        <link refid="da/d83/analysisdynamic_8h"/>
        <childnode refid="8144" relation="include">
        </childnode>
      </node>
      <node id="8168">
        <label>elemtetrahedron.h</label>
        <link refid="d3/d9f/elemtetrahedron_8h"/>
        <childnode refid="8166" relation="include">
        </childnode>
      </node>
      <node id="8150">
        <label>analysisstatic.h</label>
        <link refid="d4/d87/analysisstatic_8h"/>
        <childnode refid="8144" relation="include">
        </childnode>
      </node>
      <node id="8181">
        <label>force.h</label>
        <link refid="dd/d0d/force_8h"/>
        <childnode refid="8182" relation="include">
        </childnode>
      </node>
      <node id="8186">
        <label>unistd.h</label>
      </node>
      <node id="8189">
        <label>readerconstraints.h</label>
        <link refid="de/d6c/readerconstraints_8h"/>
        <childnode refid="8184" relation="include">
        </childnode>
        <childnode refid="8185" relation="include">
        </childnode>
        <childnode refid="8154" relation="include">
        </childnode>
        <childnode refid="8186" relation="include">
        </childnode>
        <childnode refid="8142" relation="include">
        </childnode>
      </node>
      <node id="8167">
        <label>elemtriangle.h</label>
        <link refid="df/d03/elemtriangle_8h"/>
        <childnode refid="8165" relation="include">
        </childnode>
      </node>
      <node id="8161">
        <label>vector</label>
      </node>
      <node id="8178">
        <label>constraintfixedcoordinates.h</label>
        <link refid="d4/d28/constraintfixedcoordinates_8h"/>
        <childnode refid="8177" relation="include">
        </childnode>
      </node>
      <node id="8158">
        <label>cellrect.h</label>
        <link refid="d8/d84/cellrect_8h"/>
        <childnode refid="8159" relation="include">
        </childnode>
      </node>
      <node id="8176">
        <label>constraintdistance.h</label>
        <link refid="da/df6/constraintdistance_8h"/>
        <childnode refid="8177" relation="include">
        </childnode>
      </node>
      <node id="8146">
        <label>LMX/lmx.h</label>
      </node>
      <node id="8156">
        <label>bodyflex.h</label>
        <link refid="dd/dbc/bodyflex_8h"/>
        <childnode refid="8157" relation="include">
        </childnode>
        <childnode refid="8158" relation="include">
        </childnode>
        <childnode refid="8165" relation="include">
        </childnode>
        <childnode refid="8166" relation="include">
        </childnode>
        <childnode refid="8167" relation="include">
        </childnode>
        <childnode refid="8168" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
      </node>
      <node id="8147">
        <label>LMX/lmx_diff_problem_first.h</label>
      </node>
      <node id="8152">
        <label>system.h</label>
        <link refid="dc/db2/system_8h"/>
        <childnode refid="8153" relation="include">
        </childnode>
        <childnode refid="8154" relation="include">
        </childnode>
        <childnode refid="8146" relation="include">
        </childnode>
        <childnode refid="8155" relation="include">
        </childnode>
        <childnode refid="8169" relation="include">
        </childnode>
        <childnode refid="8171" relation="include">
        </childnode>
        <childnode refid="8172" relation="include">
        </childnode>
        <childnode refid="8173" relation="include">
        </childnode>
        <childnode refid="8174" relation="include">
        </childnode>
        <childnode refid="8176" relation="include">
        </childnode>
        <childnode refid="8178" relation="include">
        </childnode>
        <childnode refid="8179" relation="include">
        </childnode>
        <childnode refid="8180" relation="include">
        </childnode>
        <childnode refid="8181" relation="include">
        </childnode>
        <childnode refid="8175" relation="include">
        </childnode>
      </node>
      <node id="8187">
        <label>readerrigid.h</label>
        <link refid="dd/dd9/readerrigid_8h"/>
        <childnode refid="8184" relation="include">
        </childnode>
        <childnode refid="8185" relation="include">
        </childnode>
        <childnode refid="8154" relation="include">
        </childnode>
        <childnode refid="8186" relation="include">
        </childnode>
        <childnode refid="8142" relation="include">
        </childnode>
      </node>
      <node id="8184">
        <label>iostream</label>
      </node>
      <node id="8179">
        <label>constraintfixedaxis.h</label>
        <link refid="d8/dfb/constraintfixedaxis_8h"/>
        <childnode refid="8177" relation="include">
        </childnode>
      </node>
      <node id="8166">
        <label>celltetrahedron.h</label>
        <link refid="d1/d94/celltetrahedron_8h"/>
        <childnode refid="8159" relation="include">
        </childnode>
      </node>
      <node id="8190">
        <label>generalcontact.h</label>
        <link refid="d9/d54/generalcontact_8h"/>
        <childnode refid="8161" relation="include">
        </childnode>
        <childnode refid="8153" relation="include">
        </childnode>
      </node>
      <node id="8171">
        <label>bodyrigid1D.h</label>
        <link refid="d7/d1c/bodyrigid1_d_8h"/>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
      </node>
      <node id="8188">
        <label>readerflex.h</label>
        <link refid="d9/ddf/readerflex_8h"/>
        <childnode refid="8184" relation="include">
        </childnode>
        <childnode refid="8185" relation="include">
        </childnode>
        <childnode refid="8154" relation="include">
        </childnode>
        <childnode refid="8186" relation="include">
        </childnode>
        <childnode refid="8142" relation="include">
        </childnode>
      </node>
      <node id="8160">
        <label>gausspoint.h</label>
        <link refid="d4/dc6/gausspoint_8h"/>
        <childnode refid="8161" relation="include">
        </childnode>
        <childnode refid="8153" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
        <childnode refid="8163" relation="include">
        </childnode>
        <childnode refid="8145" relation="include">
        </childnode>
        <childnode refid="8164" relation="include">
        </childnode>
      </node>
      <node id="8162">
        <label>node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="8161" relation="include">
        </childnode>
        <childnode refid="8163" relation="include">
        </childnode>
        <childnode refid="8146" relation="include">
        </childnode>
      </node>
      <node id="8148">
        <label>LMX/lmx_diff_problem_second.h</label>
      </node>
      <node id="8141">
        <label>simulation.cpp</label>
        <link refid="simulation.cpp"/>
        <childnode refid="8142" relation="include">
        </childnode>
        <childnode refid="8183" relation="include">
        </childnode>
        <childnode refid="8190" relation="include">
        </childnode>
      </node>
      <node id="8169">
        <label>bodyrigid0D.h</label>
        <link refid="da/d60/bodyrigid0_d_8h"/>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
      </node>
      <node id="8144">
        <label>analysis.h</label>
        <link refid="d2/d40/analysis_8h"/>
        <childnode refid="8145" relation="include">
        </childnode>
        <childnode refid="8146" relation="include">
        </childnode>
        <childnode refid="8147" relation="include">
        </childnode>
        <childnode refid="8148" relation="include">
        </childnode>
      </node>
      <node id="8170">
        <label>bodyrigid.h</label>
        <link refid="d1/d67/bodyrigid_8h"/>
        <childnode refid="8157" relation="include">
        </childnode>
      </node>
      <node id="8173">
        <label>bodyrigid3D.h</label>
        <link refid="d1/dbe/bodyrigid3_d_8h"/>
        <childnode refid="8170" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
      </node>
      <node id="8182">
        <label>load.h</label>
        <link refid="dc/d61/load_8h"/>
        <childnode refid="8145" relation="include">
        </childnode>
        <childnode refid="8146" relation="include">
        </childnode>
        <childnode refid="8162" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="d2/dde/namespacemknix">mknix</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2013<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://code.google.com/p/mknix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307,<sp/>USA.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d6a/simulation_8h" kindref="compound">simulation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d6/dda/reader_8h" kindref="compound">reader.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d9/d54/generalcontact_8h" kindref="compound">generalcontact.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mknix<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Static<sp/>variables:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Simulation::stepTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">lmx::Vector&lt;double&gt;<sp/>Simulation::gravity<sp/>=<sp/>lmx::Vector&lt;double&gt;(3);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Simulation::alpha<sp/>=<sp/>1E4;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Simulation::dimension<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">std::string<sp/>Simulation::contact<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NONE&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Simulation::visualization<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Simulation::outputMatrices<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">std::string<sp/>Simulation::constraintMethod<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PENALTY&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Simulation::epsilon<sp/>=<sp/>1E-5;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">std::string<sp/>Simulation::smoothingType<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;GLOBAL&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="db/d0b/classmknix_1_1_simulation_1a8741379faa5cd9695a9dc4f9be3fdc11" refkind="member"><highlight class="normal"><ref refid="db/d0b/classmknix_1_1_simulation_1a8741379faa5cd9695a9dc4f9be3fdc11" kindref="member">Simulation::Simulation</ref>()<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>:<sp/>theReader(0)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>,<sp/>baseSystem(0)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>,<sp/>stepTime(0.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>,<sp/>iterationsNLSolver(0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>globalTimer<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lmx::ExactStopwatch;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>globalTimer-&gt;setQuiet();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>timerFile<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::ofstream(</highlight><highlight class="stringliteral">&quot;simulation_times.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>configurationFile<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::ofstream(</highlight><highlight class="stringliteral">&quot;dis.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>create<sp/>origin<sp/>node<sp/>in<sp/>ground,<sp/>needed<sp/>for<sp/>rigidBody<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>groundNodes.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d3/d25/classmknix_1_1_node" kindref="compound">Node</ref>(<sp/>-1,<sp/>0.,<sp/>0.,<sp/>0.<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="db/d0b/classmknix_1_1_simulation_1a8ab58ea5b4557c72b2a8f00cb8ef3e75" refkind="member"><highlight class="normal"><ref refid="db/d0b/classmknix_1_1_simulation_1a8ab58ea5b4557c72b2a8f00cb8ef3e75" kindref="member">Simulation::~Simulation</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>globalTimer;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>timerFile;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>configurationFile;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>outFile;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="db/d0b/classmknix_1_1_simulation_1a5ca9b93b996142dc843eba322b6f81fb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a5ca9b93b996142dc843eba322b6f81fb" kindref="member">Simulation::inputFromFile</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*FileIn)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(theReader==0)<sp/><sp/>this-&gt;theReader<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a35cb182752752c74a30050705acc3c06" kindref="member">Reader</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(baseSystem==0)<sp/><sp/>this-&gt;baseSystem<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="df/dd9/classmknix_1_1_system" kindref="compound">System</ref>(<sp/></highlight><highlight class="stringliteral">&quot;baseSystem&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>theReader-&gt;<ref refid="d0/d66/classmknix_1_1_reader_1ab8ac24c56853e5101ac4f2a94d172392" kindref="member">inputFromFile</ref>(<sp/>FileIn<sp/>);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="db/d0b/classmknix_1_1_simulation_1a616f0712431201275269aa05eadb8779" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a616f0712431201275269aa05eadb8779" kindref="member">Simulation::run</ref>()</highlight></codeline>
<codeline lineno="72"><highlight class="normal">{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Simulation::contact<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;GLOBAL&quot;</highlight><highlight class="normal"><sp/>||<sp/>Simulation::visualization<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;theContact<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a76d4b1c8c6040df20040808941b7e764" kindref="member">Contact</ref>(</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>10.);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;theContact-&gt;<ref refid="df/dde/classmknix_1_1_contact_1aff0010eaf0d50819b7cc502449443b71" kindref="member">createPoints</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;theContact-&gt;<ref refid="df/dde/classmknix_1_1_contact_1a5334a5c12debb8d064345929201673f6" kindref="member">createPolys</ref>();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;theContact-&gt;<ref refid="df/dde/classmknix_1_1_contact_1a3489052672cf092120e096649448eebb" kindref="member">createDrawingObjects</ref>();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Simulation::contact<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;GLOBAL&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;theContact-&gt;<ref refid="df/dde/classmknix_1_1_contact_1aac0574d8683e781d6f811c782f9604c8" kindref="member">createDelaunay</ref>();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;theContact-&gt;<ref refid="df/dde/classmknix_1_1_contact_1a17e1256371ff92d395ef71e23396b509" kindref="member">createDrawingContactObjects</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;theContact-&gt;<ref refid="df/dde/classmknix_1_1_contact_1a86ab86ad903f956284324fc2fb69e195" kindref="member">drawObjects</ref>();</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1acef86e75795b95441e06f1055402a43b" kindref="member">writeSystem</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ANALYSIS<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;&lt;<sp/>&quot;FILE<sp/>&quot;<sp/>&lt;&lt;<sp/>&quot;dis.dat&quot;<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>*timerFile<sp/>&lt;&lt;<sp/>stepTime<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>globalTimer-&gt;getTime()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>std::vector&lt;Analysis*&gt;::iterator<sp/>itAnalysis;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>itAnalysis<sp/>=<sp/>analysis.begin();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itAnalysis!=<sp/>analysis.end();</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++itAnalysis</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>(*itAnalysis)-&gt;type()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;THERMAL&quot;</highlight><highlight class="normal"><sp/>||<sp/>(*itAnalysis)-&gt;type()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;THERMALSTATIC&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{this-&gt;<ref refid="db/d0b/classmknix_1_1_simulation_1ae769b1ff16dc5eada23b3aae69da8168" kindref="member">runThermalAnalysis</ref>(*itAnalysis);<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{this-&gt;<ref refid="db/d0b/classmknix_1_1_simulation_1a5b02493acba04c0dd6a1450eb2ae548a" kindref="member">runMechanicalAnalysis</ref>(*itAnalysis);<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100" refid="db/d0b/classmknix_1_1_simulation_1ae769b1ff16dc5eada23b3aae69da8168" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ae769b1ff16dc5eada23b3aae69da8168" kindref="member">Simulation::runThermalAnalysis</ref>(<ref refid="df/d86/classmknix_1_1_analysis" kindref="compound">Analysis</ref>*<sp/>theAnalysis)</highlight></codeline>
<codeline lineno="101"><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gdlSize<sp/>=<sp/>nodes.size();</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;data_type&gt;<sp/>q(<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::ExactStopwatch<sp/>sw;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalCapacity.resize(<sp/>gdlSize,<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalConductivity.resize(<sp/>gdlSize,<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalRHSHeat.resize(<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalExternalHeat.resize(<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a062011eba2b5bd9399705f9e725af4e8" kindref="member">calcCapacityMatrix</ref>();</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a354c0df800fe9729c73f7260d76273df" kindref="member">assembleCapacityMatrix</ref>(<sp/>globalCapacity<sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a0336b3ae44843b0f48d1490072a6fb5f" kindref="member">calcConductivityMatrix</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a6345dce07d1da92c969608340be7a604" kindref="member">assembleConductivityMatrix</ref>(<sp/>globalConductivity<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>globalConductivity;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>globalCapacity;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>globalConductivity;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maybe<sp/>is<sp/>better<sp/>to<sp/>make<sp/>an<sp/>specific<sp/>function<sp/>call<sp/>for<sp/>the<sp/>sparse<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pattern,<sp/>but<sp/>this<sp/>should<sp/>work...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>lmx::getMatrixType()<sp/>==<sp/>1<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalSparsePattern.resize(<sp/>gdlSize,<sp/>gdlSize<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;calcTangentMatrix(<sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;assembleTangentMatrix(<sp/>globalSparsePattern<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Output<sp/>matrices<sp/>in<sp/>initial<sp/>configuration:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>outputMatrices<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>K_temp(gdlSize,gdlSize);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;calcTangentMatrix(<sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;assembleTangentMatrix(<sp/>K_temp<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_temp.harwellBoeingSave(<sp/>(char<sp/>*)<sp/>&quot;K.mat&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalMass.harwellBoeingSave(<sp/>(char<sp/>*)<sp/>&quot;M.mat&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>save<sp/>raw<sp/>matrices:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>Kfile(&quot;K&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kfile<sp/>&lt;&lt;<sp/>K_temp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kfile.close();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>to<sp/>file<sp/>the<sp/>initial<sp/>configuration:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a5d4227d2d500003664587afadecb1081" kindref="member">writeConfStep</ref>(<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;q0<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>q<sp/>&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;qdot0<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>qdot<sp/>&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>theAnalysis-&gt;<ref refid="df/d86/classmknix_1_1_analysis_1a6dd7026a22ae11f3eef3dad3be370e70" kindref="member">type</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;THERMAL&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a22677dbc55080b00290652416ee8bb90" kindref="member">outputStep</ref>(<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theAnalysis-&gt;<ref refid="df/d86/classmknix_1_1_analysis_1a2a02ee6ab0728bc1ab5e6aab010afe87" kindref="member">solve</ref>(<sp/>&amp;q<sp/>);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>theAnalysis-&gt;<ref refid="df/d86/classmknix_1_1_analysis_1a6dd7026a22ae11f3eef3dad3be370e70" kindref="member">type</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;THERMALSTATIC&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>initial<sp/>configuration...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//time=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;outputStep(<sp/>q<sp/>);<sp/>//<sp/>produces<sp/>output<sp/>of<sp/>temperatures,<sp/>incompatible<sp/>with<sp/>mknixpost-static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int,Node*&gt;::iterator<sp/>it_nodes;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>it_nodes<sp/>=<sp/>nodes.begin();</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_nodes!=<sp/>nodes.end();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_nodes</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getx()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;gety()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getz()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theAnalysis-&gt;<ref refid="df/d86/classmknix_1_1_analysis_1a2a02ee6ab0728bc1ab5e6aab010afe87" kindref="member">solve</ref>(<sp/>&amp;q<sp/>);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Output<sp/>ExactStopwatch<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>disp(</highlight><highlight class="stringliteral">&quot;dis.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(outFile-&gt;is_open()<sp/>){</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(disp.get(a)){</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outFile-&gt;put(a);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outFile-&gt;flush();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>extra<sp/>flexible<sp/>bodies<sp/>data...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1af08300f28c64abfc4065888a643b4bbf" kindref="member">outputToFile</ref>(<sp/>outFile<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;q(&quot;<sp/>&lt;&lt;<sp/>q.size()/2<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>q(q.size()/2)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;q(&quot;<sp/>&lt;&lt;<sp/>q.size()-1<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>q(q.size()-1)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>f_int<sp/>of<sp/>constraints...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;double&gt;<sp/>constr_forces(nodes.size()*dimension);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a24b1a9bcb9279bbb2384d2bbf94b157c" kindref="member">assembleConstraintForces</ref>(<sp/>constr_forces<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(size_type<sp/>i=0;<sp/>i&lt;<sp/>constr_forces.size();<sp/>++i<sp/>){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(constr_forces(i)<sp/>!=<sp/>0.<sp/>)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;R(&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;)<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>constr_forces(i)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193" refid="db/d0b/classmknix_1_1_simulation_1a5b02493acba04c0dd6a1450eb2ae548a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a5b02493acba04c0dd6a1450eb2ae548a" kindref="member">Simulation::runMechanicalAnalysis</ref>(<ref refid="df/d86/classmknix_1_1_analysis" kindref="compound">Analysis</ref>*<sp/>theAnalysis)</highlight></codeline>
<codeline lineno="194"><highlight class="normal">{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>gdlSize<sp/>=<sp/>nodes.size()<sp/>*<sp/>Simulation::dimension;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;data_type&gt;<sp/>q(<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::ExactStopwatch<sp/>sw;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalMass.resize(<sp/>gdlSize,<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalRHSForces.resize(<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalInternalForces.resize(<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalExternalForces.resize(<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;int,Node*&gt;::iterator<sp/>it_nodes;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>it_nodes<sp/>=<sp/>nodes.begin();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_nodes!=<sp/>nodes.end();</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_nodes</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q(Simulation::dimension*i)<sp/>=<sp/>it_nodes-&gt;second-&gt;getx();</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q(Simulation::dimension*i+1)<sp/>=<sp/>it_nodes-&gt;second-&gt;gety();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>q(Simulation::dimension*i+2)<sp/>=<sp/>it_nodes-&gt;second-&gt;getz();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a3da01e379f5c907be67439ae2b0770c8" kindref="member">calcMassMatrix</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1ae7d34bdd8c9c12ba24663f3f2e3ef75c" kindref="member">assembleMassMatrix</ref>(<sp/>globalMass<sp/>);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maybe<sp/>is<sp/>better<sp/>to<sp/>make<sp/>an<sp/>specific<sp/>function<sp/>call<sp/>for<sp/>the<sp/>sparse<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pattern,<sp/>but<sp/>this<sp/>should<sp/>work...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lmx::getMatrixType()<sp/>==<sp/>1<sp/>){</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalSparsePattern.resize(<sp/>gdlSize,<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a2dcf37e480b19ef48aab29e484a68f7d" kindref="member">calcTangentMatrix</ref>(<sp/><sp/>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a4311a423d3a9d7072c0d49031e3bba32" kindref="member">assembleTangentMatrix</ref>(<sp/>globalSparsePattern<sp/>);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>matrices<sp/>in<sp/>initial<sp/>configuration:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>outputMatrices<sp/>){</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>K_temp(gdlSize,gdlSize);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a2dcf37e480b19ef48aab29e484a68f7d" kindref="member">calcTangentMatrix</ref>(<sp/><sp/>);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a4311a423d3a9d7072c0d49031e3bba32" kindref="member">assembleTangentMatrix</ref>(<sp/>K_temp<sp/>);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K_temp.harwellBoeingSave(<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;K.mat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>globalMass.harwellBoeingSave(<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/></highlight><highlight class="stringliteral">&quot;M.mat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>save<sp/>raw<sp/>matrices:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ofstream<sp/>Kfile(</highlight><highlight class="stringliteral">&quot;K&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kfile<sp/>&lt;&lt;<sp/>K_temp;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Kfile.close();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>to<sp/>file<sp/>the<sp/>initial<sp/>configuration:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a5d4227d2d500003664587afadecb1081" kindref="member">writeConfStep</ref>(<sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;q0<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>q<sp/>&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;qdot0<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>qdot<sp/>&lt;&lt;endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>theAnalysis-&gt;<ref refid="df/d86/classmknix_1_1_analysis_1a6dd7026a22ae11f3eef3dad3be370e70" kindref="member">type</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;DYNAMIC&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;data_type&gt;<sp/>qdot(<sp/>gdlSize<sp/>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>first<sp/>step<sp/>data</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a22677dbc55080b00290652416ee8bb90" kindref="member">outputStep</ref>(<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theAnalysis-&gt;<ref refid="df/d86/classmknix_1_1_analysis_1a4e6baab7f63725b4ed816bb3bdbdc1d8" kindref="member">setEpsilon</ref>(<sp/>epsilon<sp/>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theAnalysis-&gt;<ref refid="df/d86/classmknix_1_1_analysis_1a2a02ee6ab0728bc1ab5e6aab010afe87" kindref="member">solve</ref>(<sp/>&amp;q,<sp/>&amp;qdot<sp/>);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>theAnalysis-&gt;<ref refid="df/d86/classmknix_1_1_analysis_1a6dd7026a22ae11f3eef3dad3be370e70" kindref="member">type</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;STATIC&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>initial<sp/>configuration...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>&quot;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//time=0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(size_type<sp/>i=0;<sp/>i&lt;q.size();<sp/>++i){</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/>q(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theAnalysis-&gt;<ref refid="df/d86/classmknix_1_1_analysis_1a2a02ee6ab0728bc1ab5e6aab010afe87" kindref="member">solve</ref>(<sp/>&amp;q<sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">//<sp/>Output<sp/>ExactStopwatch<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>disp(</highlight><highlight class="stringliteral">&quot;dis.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(outFile-&gt;is_open()<sp/>){</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(disp.get(a)){</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outFile-&gt;put(a);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outFile-&gt;flush();</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>extra<sp/>flexible<sp/>bodies<sp/>data...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1af08300f28c64abfc4065888a643b4bbf" kindref="member">outputToFile</ref>(<sp/>outFile<sp/>);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;q(&quot;<sp/>&lt;&lt;<sp/>q.size()/2<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>q(q.size()/2)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;q(&quot;<sp/>&lt;&lt;<sp/>q.size()-1<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>q(q.size()-1)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>output<sp/>f_int<sp/>of<sp/>constraints...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;double&gt;<sp/>constr_forces(nodes.size()*dimension);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;assembleConstraintForces(<sp/>constr_forces<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(size_type<sp/>i=0;<sp/>i&lt;<sp/>constr_forces.size();<sp/>++i<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(constr_forces(i)<sp/>!=<sp/>0.<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;R(&quot;<sp/>&lt;&lt;<sp/>i<sp/>&lt;&lt;<sp/>&quot;)<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>constr_forces(i)<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288" refid="db/d0b/classmknix_1_1_simulation_1acef86e75795b95441e06f1055402a43b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1acef86e75795b95441e06f1055402a43b" kindref="member">Simulation::writeSystem</ref>()</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>std::stringstream<sp/>ss;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>ss<sp/>&lt;&lt;<sp/>title<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.mec&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>outFile<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>std::ofstream(<sp/>ss.str().c_str()<sp/>);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;DIMENSION<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Simulation::dimension<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;SYSTEM&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;NODES&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/>std::map&lt;int,Node*&gt;::iterator<sp/>it_nodes;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>it_nodes<sp/>=<sp/>nodes.begin();<sp/>it_nodes<sp/>!=<sp/>nodes.end();<sp/>++it_nodes<sp/>){</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>*outFile</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it_nodes-&gt;first</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getx()</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;gety()</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getz()</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ENDNODES&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;RIGIDBODIES&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a848d086b44d1a4d656cb6357a738188b" kindref="member">writeRigidBodies</ref>(<sp/>outFile<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ENDRIGIDBODIES&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FLEXBODIES&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1aa68577edc1818bbe8d4bd9b6f716b5de" kindref="member">writeFlexBodies</ref>(<sp/>outFile<sp/>);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ENDFLEXBODIES&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/>*outFile<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ENDSYSTEM&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>a<sp/>standard<sp/>file<sp/>for<sp/>nodal<sp/>info:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>nodeFile(</highlight><highlight class="stringliteral">&quot;nodes.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>it_nodes<sp/>=<sp/>nodes.begin();<sp/>it_nodes<sp/>!=<sp/>nodes.end();<sp/>++it_nodes<sp/>){</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/>nodeFile</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it_nodes-&gt;first</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getx()</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;gety()</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getz()</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="db/d0b/classmknix_1_1_simulation_1ae86305b2478ec8fdffe9f4866f9389e2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ae86305b2478ec8fdffe9f4866f9389e2" kindref="member">Simulation::staticThermalResidue</ref><sp/>(<sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>residue,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>q</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="335"><highlight class="normal">{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/>globalConductivity.fillIdentity(0.);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/>globalExternalHeat.fillIdentity(0.);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a0336b3ae44843b0f48d1490072a6fb5f" kindref="member">calcConductivityMatrix</ref>();</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a8c01b52d2f2fb7de0ac6e1c64bda81a3" kindref="member">calcExternalHeat</ref>();</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a6345dce07d1da92c969608340be7a604" kindref="member">assembleConductivityMatrix</ref>(<sp/>globalConductivity<sp/>);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1aa32a7ce62666f3a93c4448d2f70ccac8" kindref="member">assembleExternalHeat</ref>(<sp/>globalExternalHeat<sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>residue<sp/>=<sp/>globalConductivity*q;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>residue<sp/>-=<sp/>globalExternalHeat;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>&quot;RESIDUE<sp/>PARTS:<sp/>&quot;<sp/>&lt;&lt;<sp/>(globalCapacity*qdot).norm2()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>&lt;&lt;<sp/>(globalConductivity*q).norm2()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>globalExternalHeat.norm2()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="db/d0b/classmknix_1_1_simulation_1a382593c555de33392bccdcbbdf244737" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a382593c555de33392bccdcbbdf244737" kindref="member">Simulation::staticThermalTangent</ref><sp/>(<sp/>lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>tangent_in,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>q</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="355"><highlight class="normal">{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>tangent_in.fillIdentity(0.);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>baseSystem-&gt;calcTangentMatrix(<sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>baseSystem-&gt;assembleTangentMatrix(<sp/>tangent_in<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/>tangent_in<sp/>=<sp/>globalConductivity;</highlight></codeline>
<codeline lineno="360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362" refid="db/d0b/classmknix_1_1_simulation_1adc5bcdaba46bc9e5332e7e142dd4558f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adc5bcdaba46bc9e5332e7e142dd4558f" kindref="member">Simulation::staticThermalConvergence</ref><sp/>(<sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>res,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>q</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="365"><highlight class="normal">{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>lmx::Vector&lt;data_type&gt;<sp/>res(<sp/>qddot.size()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>res<sp/>=<sp/><sp/>globalInternalForces<sp/>-<sp/>globalExternalForces;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>res.norm2()<sp/>&lt;=<sp/>epsilon<sp/>){</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a477db1887fa5858d2708f50397aa6ebf" kindref="member">checkAugmented</ref>(<sp/>)<sp/>){<sp/></highlight><highlight class="comment">//<sp/>if<sp/>convergence...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepTime<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a22677dbc55080b00290652416ee8bb90" kindref="member">outputStep</ref>(<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1afbf67e600535664daa11f57170ce28b1" kindref="member">clearAugmented</ref>();</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a9fd95351d7fe3ce2ba1991d6aae6a804" kindref="member">stepTriggered</ref>();</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal">}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="db/d0b/classmknix_1_1_simulation_1a4b2297b6adf5b7c2f0c65bae5ea75f7f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a4b2297b6adf5b7c2f0c65bae5ea75f7f" kindref="member">Simulation::dynamicThermalEvaluation</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>qt,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>qtdot,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>globalCapacity.fillIdentity(0.);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/>globalConductivity.fillIdentity(0.);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/>globalExternalHeat.fillIdentity(0.);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a062011eba2b5bd9399705f9e725af4e8" kindref="member">calcCapacityMatrix</ref>();</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a0336b3ae44843b0f48d1490072a6fb5f" kindref="member">calcConductivityMatrix</ref>();</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a8c01b52d2f2fb7de0ac6e1c64bda81a3" kindref="member">calcExternalHeat</ref>();</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a354c0df800fe9729c73f7260d76273df" kindref="member">assembleCapacityMatrix</ref>(<sp/>globalCapacity<sp/>);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a6345dce07d1da92c969608340be7a604" kindref="member">assembleConductivityMatrix</ref>(<sp/>globalConductivity<sp/>);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1aa32a7ce62666f3a93c4448d2f70ccac8" kindref="member">assembleExternalHeat</ref>(<sp/>globalExternalHeat<sp/>);</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/>globalRHSHeat<sp/>=<sp/>globalConductivity<sp/>*<sp/>qt;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>globalRHSHeat<sp/>+=<sp/>globalExternalHeat;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>globalMass<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/>lmx::LinearSystem&lt;data_type&gt;<sp/>theLSolver(<sp/>globalCapacity,<sp/>qtdot,<sp/>globalRHSHeat<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/>theLSolver.solveYourself();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;initial_flux<sp/>:&quot;<sp/>&lt;&lt;<sp/>qtdot<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408" refid="db/d0b/classmknix_1_1_simulation_1abc0f23c897ee438c5cb5c889134ad436" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1abc0f23c897ee438c5cb5c889134ad436" kindref="member">Simulation::dynamicThermalResidue</ref><sp/><sp/>(<sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>residue,</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>q,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>qdot,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>globalConductivity.fillIdentity(0.);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/>globalExternalHeat.fillIdentity(0.);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>baseSystem-&gt;calcMassMatrix();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>baseSystem-&gt;calcConductivityMatrix();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a8c01b52d2f2fb7de0ac6e1c64bda81a3" kindref="member">calcExternalHeat</ref>();</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>baseSystem-&gt;assembleMassMatrix(<sp/>globalMass<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>baseSystem-&gt;assembleConductivityMatrix(<sp/>globalConductivity<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1aa32a7ce62666f3a93c4448d2f70ccac8" kindref="member">assembleExternalHeat</ref>(<sp/>globalExternalHeat<sp/>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>residue<sp/>=<sp/>globalCapacity*qdot;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>residue<sp/>+=<sp/>globalConductivity*q;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>residue<sp/>-=<sp/>globalExternalHeat;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>endl<sp/>&lt;&lt;<sp/>&quot;RESIDUE<sp/>PARTS:<sp/>&quot;<sp/>&lt;&lt;<sp/>(globalCapacity*qdot).norm2()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>&lt;&lt;<sp/>(globalConductivity*q).norm2()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>globalExternalHeat.norm2()<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433" refid="db/d0b/classmknix_1_1_simulation_1afcf44a0289808f80bf6789a9671c9c55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1afcf44a0289808f80bf6789a9671c9c55" kindref="member">Simulation::dynamicThermalTangent</ref><sp/><sp/>(<sp/>lmx::Matrix&lt;data_type&gt;&amp;<sp/>tangent_in,</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>q,</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>partial_qdot,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>tangent_in.fillIdentity(0.);</highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>baseSystem-&gt;calcTangentMatrix(<sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>baseSystem-&gt;assembleTangentMatrix(<sp/>tangent_in<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/>tangent_in<sp/>+=<sp/>(<ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref>)partial_qdot*globalCapacity;</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>tangent_in<sp/>+=<sp/>globalConductivity;</highlight></codeline>
<codeline lineno="444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446" refid="db/d0b/classmknix_1_1_simulation_1ac54cb3aace5dd45148abc3a85766a107" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ac54cb3aace5dd45148abc3a85766a107" kindref="member">Simulation::dynamicThermalConvergence</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>q,</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>qdot,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/>++iterationsNLSolver;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/>lmx::Vector&lt;data_type&gt;<sp/>res(<sp/>qdot.size()<sp/>);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>double<sp/>energy_max,<sp/>energy_sum;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(globalMass*qddot).norm2()<sp/>&lt;&lt;<sp/>&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>globalInternalForces.norm2()<sp/>&lt;&lt;<sp/>&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>globalExternalForces.norm2()<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>globalCapacity*qdot<sp/>+<sp/>globalConductivity*q<sp/>-<sp/>globalExternalHeat;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>energy_max<sp/>=<sp/>std::max(<sp/>std::fabs(globalMass*qddot*q)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>std::fabs(globalInternalForces*q)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>energy_max<sp/>=<sp/>std::max(<sp/>energy_max,<sp/>std::fabs(globalExternalForces*q)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>energy_sum<sp/>=<sp/>std::fabs(globalMass*qddot*q)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::fabs(globalInternalForces*q)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::fabs(globalExternalForces*q);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>MAX_ENERGY<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>energy_max<sp/>&lt;&lt;<sp/>endl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUM_ENERGY<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>energy_sum<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>res.norm2()<sp/>&lt;=<sp/>epsilon<sp/>){</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(<sp/>(energy_max<sp/>/<sp/>energy_sum)<sp/>&lt;=<sp/>epsilon<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a477db1887fa5858d2708f50397aa6ebf" kindref="member">checkAugmented</ref>()<sp/>){</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/>CONVERGENCE:<sp/>MAX_ENERGY<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>energy_max<sp/>&lt;&lt;<sp/>endl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUM_ENERGY<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>energy_sum<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepTime<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a22677dbc55080b00290652416ee8bb90" kindref="member">outputStep</ref>(<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1afbf67e600535664daa11f57170ce28b1" kindref="member">clearAugmented</ref>();</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="480"><highlight class="normal">}</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483" refid="db/d0b/classmknix_1_1_simulation_1ace4ce2a959690e14c443b3c6e83c2690" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ace4ce2a959690e14c443b3c6e83c2690" kindref="member">Simulation::dynamicAcceleration</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>q,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>qdot,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>qddot,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/>globalMass.fillIdentity(0.);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>globalInternalForces.fillIdentity(0.);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/>globalExternalForces.fillIdentity(0.);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a3da01e379f5c907be67439ae2b0770c8" kindref="member">calcMassMatrix</ref>();</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1acbc22a9f660d0f818d461934eb0f1193" kindref="member">calcInternalForces</ref>();</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a1f8741218772bc4d2b5a61b1ded98bc4" kindref="member">calcExternalForces</ref>();</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1ae7d34bdd8c9c12ba24663f3f2e3ef75c" kindref="member">assembleMassMatrix</ref>(<sp/>globalMass<sp/>);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a045a56838910627b66dc981205358b78" kindref="member">assembleInternalForces</ref>(<sp/>globalInternalForces<sp/>);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a3f8ef449040805bcc58e3a36a6276888" kindref="member">assembleExternalForces</ref>(<sp/>globalExternalForces<sp/>);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>globalRHSForces<sp/>=<sp/>globalExternalForces;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>globalRHSForces<sp/>-=<sp/>globalInternalForces;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>globalMass<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/>lmx::LinearSystem&lt;data_type&gt;<sp/>theLSolver(<sp/>globalMass,<sp/>qddot,<sp/>globalRHSForces<sp/>);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/>theLSolver.solveYourself();</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;initial_acceleration<sp/>:&quot;<sp/>&lt;&lt;<sp/>qddot<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508" refid="db/d0b/classmknix_1_1_simulation_1ae78bef0d5f80665be4a0c2d926e99973" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1ae78bef0d5f80665be4a0c2d926e99973" kindref="member">Simulation::dynamicResidue</ref>(<sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>residue,</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>q,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>qdot,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>qddot,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="514"><highlight class="normal">{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>std::map&lt;int,Node*&gt;::iterator<sp/>itNodes;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>itNodes<sp/>=<sp/>nodes.begin();</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itNodes!=<sp/>nodes.end();</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++itNodes</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/>itNodes-&gt;second-&gt;setx(<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">//<sp/>At<sp/>this<sp/>time<sp/>globalMass<sp/>is<sp/>always<sp/>the<sp/>same...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment">//<sp/>so<sp/>the<sp/>commented<sp/>lines<sp/>increment<sp/>efficiency<sp/>by<sp/>12%<sp/>aprox.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>globalMass.fillIdentity(0.);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>globalInternalForces.fillIdentity(0.);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>globalExternalForces.fillIdentity(0.);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>baseSystem-&gt;calcMassMatrix();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1acbc22a9f660d0f818d461934eb0f1193" kindref="member">calcInternalForces</ref>();</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a1f8741218772bc4d2b5a61b1ded98bc4" kindref="member">calcExternalForces</ref>();</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>baseSystem-&gt;assembleMassMatrix(<sp/>globalMass<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a045a56838910627b66dc981205358b78" kindref="member">assembleInternalForces</ref>(<sp/>globalInternalForces<sp/>);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a3f8ef449040805bcc58e3a36a6276888" kindref="member">assembleExternalForces</ref>(<sp/>globalExternalForces<sp/>);</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>residue<sp/>=<sp/>globalMass*qddot;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>residue<sp/>+=<sp/>globalInternalForces;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>residue<sp/>-=<sp/>globalExternalForces;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;qddot<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>qddot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;q<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>q;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;globalMass*qddot<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>globalMass*qddot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;globalInternalForces<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>globalInternalForces;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;globalExternalForces<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>globalExternalForces;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal">}</highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548" refid="db/d0b/classmknix_1_1_simulation_1a226a281591cb1b0bac253a3dcce19e5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a226a281591cb1b0bac253a3dcce19e5b" kindref="member">Simulation::dynamicTangent</ref>(<sp/>lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>tangent_in,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>q,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>qdot,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>partial_qdot,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>partial_qddot,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/>tangent_in.fillIdentity(0.);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a2dcf37e480b19ef48aab29e484a68f7d" kindref="member">calcTangentMatrix</ref>(<sp/><sp/>);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a4311a423d3a9d7072c0d49031e3bba32" kindref="member">assembleTangentMatrix</ref>(<sp/>tangent_in<sp/>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/>tangent_in<sp/>+=<sp/>(<ref refid="d2/dde/namespacemknix_1a16be4b246fbf2cceb141e3a179111020" kindref="member">data_type</ref>)partial_qddot*globalMass;</highlight></codeline>
<codeline lineno="560"><highlight class="normal">}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562" refid="db/d0b/classmknix_1_1_simulation_1a0bb5d6c4c6eccc35e892b710af40616f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a0bb5d6c4c6eccc35e892b710af40616f" kindref="member">Simulation::dynamicConvergence</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>q,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>qdot,</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>qddot,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="567"><highlight class="normal">{<sp/>++iterationsNLSolver;</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/>lmx::Vector&lt;data_type&gt;<sp/>res(<sp/>qddot.size()<sp/>);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>double<sp/>energy_max,<sp/>energy_sum;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;(globalMass*qddot).norm2()<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(globalMass*qddot).norm2()<sp/>&lt;&lt;<sp/>&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;globalInternalForces.norm2()<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>globalInternalForces.norm2()<sp/>&lt;&lt;<sp/>&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;globalExternalForces.norm2()<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>&quot;\t&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>globalExternalForces.norm2()<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/>res<sp/>=<sp/>globalMass*qddot<sp/>+<sp/>globalInternalForces<sp/>-<sp/>globalExternalForces;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>energy_max<sp/>=<sp/>std::max(<sp/>std::fabs(globalMass*qddot*q)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>std::fabs(globalInternalForces*q)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>energy_max<sp/>=<sp/>std::max(<sp/>energy_max,<sp/>std::fabs(globalExternalForces*q)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>energy_sum<sp/>=<sp/>std::fabs(globalMass*qddot*q)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::fabs(globalInternalForces*q)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>std::fabs(globalExternalForces*q);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>MAX_ENERGY<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>energy_max<sp/>&lt;&lt;<sp/>endl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUM_ENERGY<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>energy_sum<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>res.norm2()<sp/>&lt;=<sp/>epsilon<sp/>){</highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if(<sp/>(energy_max<sp/>/<sp/>energy_sum)<sp/>&lt;=<sp/>epsilon<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a477db1887fa5858d2708f50397aa6ebf" kindref="member">checkAugmented</ref>()<sp/>){</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;<sp/>CONVERGENCE:<sp/>MAX_ENERGY<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>energy_max<sp/>&lt;&lt;<sp/>endl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SUM_ENERGY<sp/>=<sp/>&quot;<sp/>&lt;&lt;<sp/>energy_sum<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepTime<sp/>=<sp/>time;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a22677dbc55080b00290652416ee8bb90" kindref="member">outputStep</ref>(<sp/>q,<sp/>qdot<sp/>);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1afbf67e600535664daa11f57170ce28b1" kindref="member">clearAugmented</ref>();</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603" refid="db/d0b/classmknix_1_1_simulation_1a1a65d519f553ac9d060c526ae508f152" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a1a65d519f553ac9d060c526ae508f152" kindref="member">Simulation::staticResidue</ref><sp/>(<sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>residue,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>q</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="606"><highlight class="normal">{</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>std::map&lt;int,Node*&gt;::iterator<sp/>itNodes;</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>itNodes<sp/>=<sp/>nodes.begin();</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itNodes!=<sp/>nodes.end();</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++itNodes</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/>itNodes-&gt;second-&gt;setx(<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/>globalInternalForces.fillIdentity(0.);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/>globalExternalForces.fillIdentity(0.);</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1acbc22a9f660d0f818d461934eb0f1193" kindref="member">calcInternalForces</ref>();</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a1f8741218772bc4d2b5a61b1ded98bc4" kindref="member">calcExternalForces</ref>();</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a045a56838910627b66dc981205358b78" kindref="member">assembleInternalForces</ref>(<sp/>globalInternalForces<sp/>);</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a3f8ef449040805bcc58e3a36a6276888" kindref="member">assembleExternalForces</ref>(<sp/>globalExternalForces<sp/>);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/>residue<sp/>=<sp/>globalInternalForces;</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/>residue<sp/>-=<sp/>globalExternalForces;</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;residue:&quot;<sp/>&lt;&lt;<sp/>residue;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;q<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>q;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;globalInternalForces<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>globalInternalForces;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;globalExternalForces<sp/>:<sp/>&quot;<sp/>&lt;&lt;<sp/>globalExternalForces;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal">}</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634" refid="db/d0b/classmknix_1_1_simulation_1a4ec8a62eed31911238142b362f60f43e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a4ec8a62eed31911238142b362f60f43e" kindref="member">Simulation::staticTangent</ref><sp/>(<sp/>lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>tangent_in,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>q</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/>tangent_in.fillIdentity(0.);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a2dcf37e480b19ef48aab29e484a68f7d" kindref="member">calcTangentMatrix</ref>(<sp/><sp/>);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a4311a423d3a9d7072c0d49031e3bba32" kindref="member">assembleTangentMatrix</ref>(<sp/>tangent_in<sp/>);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;TANGENT:\n&quot;<sp/>&lt;&lt;<sp/>tangent_in;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal">}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="db/d0b/classmknix_1_1_simulation_1a3a9b6e1b8cf5a63ad6e3a7d2cce5d171" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a3a9b6e1b8cf5a63ad6e3a7d2cce5d171" kindref="member">Simulation::staticConvergence</ref><sp/>(<sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>res,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>q</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="647"><highlight class="normal">{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>lmx::Vector&lt;data_type&gt;<sp/>res(<sp/>qddot.size()<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>res<sp/>=<sp/><sp/>globalInternalForces<sp/>-<sp/>globalExternalForces;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>res.norm2()<sp/>&lt;=<sp/>epsilon<sp/>){</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a477db1887fa5858d2708f50397aa6ebf" kindref="member">checkAugmented</ref>(<sp/>)<sp/>){<sp/></highlight><highlight class="comment">//<sp/>if<sp/>convergence...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stepTime<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1a22677dbc55080b00290652416ee8bb90" kindref="member">outputStep</ref>(<sp/>q<sp/>);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>baseSystem-&gt;<ref refid="df/dd9/classmknix_1_1_system_1afbf67e600535664daa11f57170ce28b1" kindref="member">clearAugmented</ref>();</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a9fd95351d7fe3ce2ba1991d6aae6a804" kindref="member">stepTriggered</ref>();</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal">}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665" refid="db/d0b/classmknix_1_1_simulation_1a9fd95351d7fe3ce2ba1991d6aae6a804" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a9fd95351d7fe3ce2ba1991d6aae6a804" kindref="member">Simulation::stepTriggered</ref>(<sp/>){</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(contact==</highlight><highlight class="stringliteral">&quot;GLOBAL&quot;</highlight><highlight class="normal"><sp/>||<sp/>visualization==1){</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;theContact-&gt;<ref refid="df/dde/classmknix_1_1_contact_1a0a9eb3950c6d13b5241cb8a58d9ad11e" kindref="member">updatePoints</ref>();</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;theContact-&gt;<ref refid="df/dde/classmknix_1_1_contact_1a1f363d51121555347584e34cd880ef12" kindref="member">updateLines</ref>();</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(contact==</highlight><highlight class="stringliteral">&quot;GLOBAL&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;theContact-&gt;<ref refid="df/dde/classmknix_1_1_contact_1acd4f6166d705a7641a84aae19fb0ffb3" kindref="member">updateDelaunay</ref>();</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;theContact-&gt;<ref refid="df/dde/classmknix_1_1_contact_1a86ab86ad903f956284324fc2fb69e195" kindref="member">drawObjects</ref>();</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>configuration<sp/>of<sp/>time<sp/>step:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a5d4227d2d500003664587afadecb1081" kindref="member">writeConfStep</ref>(<sp/>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Output<sp/>timer<sp/>info:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/>*timerFile<sp/>&lt;&lt;<sp/>stepTime<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>globalTimer-&gt;getTime()</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>iterationsNLSolver<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/>iterationsNLSolver<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682" refid="db/d0b/classmknix_1_1_simulation_1a5d4227d2d500003664587afadecb1081" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a5d4227d2d500003664587afadecb1081" kindref="member">Simulation::writeConfStep</ref>(<sp/>){</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>configurationFile-&gt;setf(std::ios::scientific,<sp/>std::ios::floatfield);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>configurationFile-&gt;precision(6);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>*configurationFile<sp/>&lt;&lt;<sp/>stepTime<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>std::map&lt;int,Node*&gt;::iterator<sp/>it_nodes;</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>it_nodes<sp/>=<sp/>nodes.begin();</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it_nodes!=<sp/>nodes.end();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it_nodes</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=0;<sp/>i&lt;dimension;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*configurationFile<sp/>&lt;&lt;<sp/>it_nodes-&gt;second-&gt;getx(i)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\t&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>*configurationFile<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dani/Dropbox/MkniX_cmake/src/simulation.cpp"/>
  </compounddef>
</doxygen>

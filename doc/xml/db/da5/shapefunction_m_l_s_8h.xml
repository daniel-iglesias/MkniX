<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="db/da5/shapefunction_m_l_s_8h" kind="file">
    <compoundname>shapefunctionMLS.h</compoundname>
    <includes refid="d3/d16/shapefunction_8h" local="yes">shapefunction.h</includes>
    <includedby refid="df/dfb/gausspoint_8cpp" local="yes">gausspoint.cpp</includedby>
    <includedby refid="d5/d55/point_8cpp" local="yes">point.cpp</includedby>
    <includedby refid="d1/d8f/shapefunction_m_l_s_8cpp" local="yes">shapefunctionMLS.cpp</includedby>
    <incdepgraph>
      <node id="7982">
        <label>shapefunctionMLS.h</label>
        <link refid="shapefunctionMLS.h"/>
        <childnode refid="7983" relation="include">
        </childnode>
      </node>
      <node id="7983">
        <label>shapefunction.h</label>
        <link refid="d3/d16/shapefunction_8h"/>
        <childnode refid="7984" relation="include">
        </childnode>
      </node>
      <node id="7984">
        <label>LMX/lmx.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7985">
        <label>shapefunctionMLS.h</label>
        <link refid="shapefunctionMLS.h"/>
        <childnode refid="7986" relation="include">
        </childnode>
        <childnode refid="7987" relation="include">
        </childnode>
        <childnode refid="7988" relation="include">
        </childnode>
      </node>
      <node id="7988">
        <label>shapefunctionMLS.cpp</label>
        <link refid="d1/d8f/shapefunction_m_l_s_8cpp"/>
      </node>
      <node id="7987">
        <label>point.cpp</label>
        <link refid="d5/d55/point_8cpp"/>
      </node>
      <node id="7986">
        <label>gausspoint.cpp</label>
        <link refid="df/dfb/gausspoint_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="db/d02/classmknix_1_1_shape_function_m_l_s" prot="public">mknix::ShapeFunctionMLS</innerclass>
    <innernamespace refid="d2/dde/namespacemknix">mknix</innernamespace>
    <briefdescription>
<para>Function for aproximation of basic variables by Moving Least Squares fit. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Daniel Iglesias </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//--<sp/>Licencia<sp/>--</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SHAPEFUNCTIONMLS_H</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>SHAPEFUNCTIONMLS_H</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="6"></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="d3/d16/shapefunction_8h" kindref="compound" tooltip="Function for interpolation of basic variables. ">shapefunction.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mknix<sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="db/d02/classmknix_1_1_shape_function_m_l_s" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="db/d02/classmknix_1_1_shape_function_m_l_s" kindref="compound">ShapeFunctionMLS</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="dd/d8d/classmknix_1_1_shape_function" kindref="compound">ShapeFunction</ref>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>int<sp/>dim;<sp/>/**&lt;<sp/>Dimension<sp/>of<sp/>problem&apos;s<sp/>space.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nn;<sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mm;<sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m;<sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>weightType;<sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>s_max;<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>lmx::DenseMatrix&lt;double&gt;<sp/>w;<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>lmx::Vector&lt;double&gt;<sp/>p;<sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>lmx::DenseMatrix&lt;double&gt;<sp/>P;<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>lmx::DenseMatrix&lt;double&gt;<sp/>&gt;<sp/>A;<sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;<sp/>std::vector&lt;<sp/>lmx::Vector&lt;double&gt;<sp/>&gt;<sp/>&gt;<sp/>B;<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a4f54b158c12126b557284995ee1ae561" kindref="member">ShapeFunctionMLS</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a4f54b158c12126b557284995ee1ae561" kindref="member">ShapeFunctionMLS</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;,<sp/><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref>*<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a023ccf7cbc4ad50738271c4807c5f32a" kindref="member">~ShapeFunctionMLS</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a45b9a5887f30125379ec7ba0ed6fb8c9" kindref="member">calc</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeWeights();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computeMomentMatrix();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>computePhi(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">};</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">}<sp/></highlight><highlight class="comment">//Namespace<sp/>mknix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/dani/Dropbox/MkniX_cmake/src/shapefunctionMLS.h"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="db/d02/classmknix_1_1_shape_function_m_l_s" kind="class" language="C++" prot="public">
    <compoundname>mknix::ShapeFunctionMLS</compoundname>
    <basecompoundref refid="dd/d8d/classmknix_1_1_shape_function" prot="public" virt="non-virtual">mknix::ShapeFunction</basecompoundref>
    <basecompoundref refid="dd/d8d/classmknix_1_1_shape_function" prot="public" virt="non-virtual">mknix::ShapeFunction</basecompoundref>
    <basecompoundref refid="dd/d8d/classmknix_1_1_shape_function" prot="public" virt="non-virtual">mknix::ShapeFunction</basecompoundref>
    <includes refid="db/da5/shapefunction_m_l_s_8h" local="no">shapefunctionMLS.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a413cca266878018b886d59c1343ef90b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mknix::ShapeFunctionMLS::nn</definition>
        <argsstring></argsstring>
        <name>nn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of support nodes </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="46" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a912e74c289f8857437c169d394152262" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mknix::ShapeFunctionMLS::mm</definition>
        <argsstring></argsstring>
        <name>mm</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Order of monomials(mm). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="47" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a337164b9ab4ae1ff179867b3d63d9a95" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mknix::ShapeFunctionMLS::m</definition>
        <argsstring></argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Size of the monomial vectors(depends on mm). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="48" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d02/classmknix_1_1_shape_function_m_l_s_1ac7aa038ba34929ba1aab976736839add" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int mknix::ShapeFunctionMLS::weightType</definition>
        <argsstring></argsstring>
        <name>weightType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Selector of radial basis functions type. Can be == 0 for Gaussian (EXP) == 1 Cubic spline == 2 Quartic spline </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="49" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a610e48543de74c24246ad64cfd3b246d" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double mknix::ShapeFunctionMLS::s_max</definition>
        <argsstring></argsstring>
        <name>s_max</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>function&apos;s parameters. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="53" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d02/classmknix_1_1_shape_function_m_l_s_1af9f6b05bef9539808df21a2a70c0da26" prot="private" static="no" mutable="no">
        <type><ref refid="d2/d8d/classlmx_1_1_dense_matrix" kindref="compound">lmx::DenseMatrix</ref>&lt; double &gt;</type>
        <definition>lmx::DenseMatrix&lt; double &gt; mknix::ShapeFunctionMLS::w</definition>
        <argsstring></argsstring>
        <name>w</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Weights and derivatives </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="54" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a2a79d7ba98e92b817d4817e195e26541" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; double &gt;</type>
        <definition>lmx::Vector&lt; double &gt; mknix::ShapeFunctionMLS::p</definition>
        <argsstring></argsstring>
        <name>p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shifted polynomials of interest point </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="55" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d02/classmknix_1_1_shape_function_m_l_s_1ac33143b17144e12a263227ea5f7ae4e3" prot="private" static="no" mutable="no">
        <type><ref refid="d2/d8d/classlmx_1_1_dense_matrix" kindref="compound">lmx::DenseMatrix</ref>&lt; double &gt;</type>
        <definition>lmx::DenseMatrix&lt; double &gt; mknix::ShapeFunctionMLS::P</definition>
        <argsstring></argsstring>
        <name>P</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Shifted Polynomials of support points </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="56" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a420cf219331889d57a5af386f3803476" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="d2/d8d/classlmx_1_1_dense_matrix" kindref="compound">lmx::DenseMatrix</ref>&lt; double &gt; &gt;</type>
        <definition>std::vector&lt; lmx::DenseMatrix&lt; double &gt; &gt; mknix::ShapeFunctionMLS::A</definition>
        <argsstring></argsstring>
        <name>A</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>vector of moment matrices </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="57" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a25a2736951cbd8d53f9d4bdb92fca228" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::vector&lt; <ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector</ref>&lt; double &gt; &gt; &gt;</type>
        <definition>std::vector&lt; std::vector&lt; lmx::Vector&lt; double &gt; &gt; &gt; mknix::ShapeFunctionMLS::B</definition>
        <argsstring></argsstring>
        <name>B</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="58" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a4f54b158c12126b557284995ee1ae561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::ShapeFunctionMLS::ShapeFunctionMLS</definition>
        <argsstring>()</argsstring>
        <name>ShapeFunctionMLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container of B_I </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="61" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.cpp" bodystart="10" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1aa650080de7f2243efce2e14c17e9e2c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::ShapeFunctionMLS::ShapeFunctionMLS</definition>
        <argsstring>(int, int, int, double &amp;, double &amp;, Point *)</argsstring>
        <name>ShapeFunctionMLS</name>
        <param>
          <type>int</type>
          <defname>nn_in</defname>
        </param>
        <param>
          <type>int</type>
          <defname>mm_in</defname>
        </param>
        <param>
          <type>int</type>
          <defname>weightType_in</defname>
        </param>
        <param>
          <type>double &amp;</type>
          <defname>alpha_c_in</defname>
        </param>
        <param>
          <type>double &amp;</type>
          <defname>d_c_in</defname>
        </param>
        <param>
          <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
          <defname>gp_in</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="63" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.cpp" bodystart="15" bodyend="66"/>
        <references refid="dd/d8d/classmknix_1_1_shape_function_1a70f36189e78b80d045076234e4c668da" compoundref="d3/d16/shapefunction_8h" startline="48">mknix::ShapeFunction::gp</references>
        <references refid="d3/d19/classmknix_1_1_point_1a141fd098ad72a85cb4d11362b80ca0d8" compoundref="d2/d91/point_8h" startline="183">mknix::Point::supportNodesSize</references>
        <references refid="dd/d8d/classmknix_1_1_shape_function_1a1ca9a4d7bc5f82c887ac7e9bdd54aa1e" compoundref="d3/d16/shapefunction_8h" startline="46">mknix::ShapeFunction::dim</references>
        <references refid="dd/d8d/classmknix_1_1_shape_function_1ac1eaf8c2e5d8d6abf4726eb416de13d9" compoundref="d3/d16/shapefunction_8h" startline="47">mknix::ShapeFunction::phi</references>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a023ccf7cbc4ad50738271c4807c5f32a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::ShapeFunctionMLS::~ShapeFunctionMLS</definition>
        <argsstring>()</argsstring>
        <name>~ShapeFunctionMLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="65" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a45b9a5887f30125379ec7ba0ed6fb8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::calc</definition>
        <argsstring>()</argsstring>
        <name>calc</name>
        <reimplements refid="dd/d8d/classmknix_1_1_shape_function_1ac4a0d1b43ff7d4adf788e677912a87f7">calc</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="67" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.cpp" bodystart="73" bodyend="81"/>
        <references refid="dd/d8d/classmknix_1_1_shape_function_1a70f36189e78b80d045076234e4c668da" compoundref="d3/d16/shapefunction_8h" startline="48">mknix::ShapeFunction::gp</references>
        <references refid="d3/d19/classmknix_1_1_point_1a1ab5edb86e6de2df07c3d11ed7c2ca99" compoundref="d2/d91/point_8h" startline="177">mknix::Point::X</references>
        <references refid="d3/d19/classmknix_1_1_point_1aeb9947adb5c6a4cd01ca81f4c4934ed5" compoundref="d2/d91/point_8h" startline="177">mknix::Point::Y</references>
        <references refid="d3/d19/classmknix_1_1_point_1a1742974a0d33897c3b04bc420ef87d31" compoundref="d2/d91/point_8h" startline="177">mknix::Point::Z</references>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a4f54b158c12126b557284995ee1ae561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::ShapeFunctionMLS::ShapeFunctionMLS</definition>
        <argsstring>()</argsstring>
        <name>ShapeFunctionMLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container of B_I </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS2D.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1aa650080de7f2243efce2e14c17e9e2c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::ShapeFunctionMLS::ShapeFunctionMLS</definition>
        <argsstring>(int, int, int, double &amp;, double &amp;, Point *)</argsstring>
        <name>ShapeFunctionMLS</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>double &amp;</type>
        </param>
        <param>
          <type>double &amp;</type>
        </param>
        <param>
          <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS2D.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a023ccf7cbc4ad50738271c4807c5f32a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::ShapeFunctionMLS::~ShapeFunctionMLS</definition>
        <argsstring>()</argsstring>
        <name>~ShapeFunctionMLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS2D.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a45b9a5887f30125379ec7ba0ed6fb8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::calc</definition>
        <argsstring>()</argsstring>
        <name>calc</name>
        <reimplements refid="dd/d8d/classmknix_1_1_shape_function_1ac4a0d1b43ff7d4adf788e677912a87f7">calc</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS2D.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a4f54b158c12126b557284995ee1ae561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::ShapeFunctionMLS::ShapeFunctionMLS</definition>
        <argsstring>()</argsstring>
        <name>ShapeFunctionMLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Container of B_I </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS3D.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1aa650080de7f2243efce2e14c17e9e2c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::ShapeFunctionMLS::ShapeFunctionMLS</definition>
        <argsstring>(int, int, int, double &amp;, double &amp;, Point *)</argsstring>
        <name>ShapeFunctionMLS</name>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>int</type>
        </param>
        <param>
          <type>double &amp;</type>
        </param>
        <param>
          <type>double &amp;</type>
        </param>
        <param>
          <type><ref refid="d3/d19/classmknix_1_1_point" kindref="compound">Point</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS3D.h" line="63" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a023ccf7cbc4ad50738271c4807c5f32a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>mknix::ShapeFunctionMLS::~ShapeFunctionMLS</definition>
        <argsstring>()</argsstring>
        <name>~ShapeFunctionMLS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS3D.h" line="65" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a45b9a5887f30125379ec7ba0ed6fb8c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::calc</definition>
        <argsstring>()</argsstring>
        <name>calc</name>
        <reimplements refid="dd/d8d/classmknix_1_1_shape_function_1ac4a0d1b43ff7d4adf788e677912a87f7">calc</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS3D.h" line="67" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1ac25d89dc1dab4a9a91439c653b565739" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::computeWeights</definition>
        <argsstring>()</argsstring>
        <name>computeWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="70" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.cpp" bodystart="83" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a705f207580a4d35e55cbf60684d6c3e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::computeMomentMatrix</definition>
        <argsstring>()</argsstring>
        <name>computeMomentMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="71" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.cpp" bodystart="191" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1ae447a053da5746c9d0bbddf06ca3f3d6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::computePhi</definition>
        <argsstring>(double, double y=0, double z=0)</argsstring>
        <name>computePhi</name>
        <param>
          <type>double</type>
          <defname>xp</defname>
        </param>
        <param>
          <type>double</type>
          <declname>y</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; auxiliary variables</para><para>&lt; auxiliary variables</para><para>&lt; auxiliary variables </para>        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="73" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.cpp" bodystart="275" bodyend="404"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1ac25d89dc1dab4a9a91439c653b565739" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::computeWeights</definition>
        <argsstring>()</argsstring>
        <name>computeWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS2D.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a705f207580a4d35e55cbf60684d6c3e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::computeMomentMatrix</definition>
        <argsstring>()</argsstring>
        <name>computeMomentMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS2D.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1aea9e8d51fc0ce5279449c90d9df0c254" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::computePhi</definition>
        <argsstring>(double, double)</argsstring>
        <name>computePhi</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS2D.h" line="73" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1ac25d89dc1dab4a9a91439c653b565739" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::computeWeights</definition>
        <argsstring>()</argsstring>
        <name>computeWeights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS3D.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a705f207580a4d35e55cbf60684d6c3e4" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::computeMomentMatrix</definition>
        <argsstring>()</argsstring>
        <name>computeMomentMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS3D.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="db/d02/classmknix_1_1_shape_function_m_l_s_1a6c74aaf320a7695f254b95e9c93cf343" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mknix::ShapeFunctionMLS::computePhi</definition>
        <argsstring>(double, double, double z=0)</argsstring>
        <name>computePhi</name>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
        </param>
        <param>
          <type>double</type>
          <declname>z</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS3D.h" line="73" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Daniel Iglesias </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="800">
        <label>mknix::ShapeFunction</label>
        <link refid="dd/d8d/classmknix_1_1_shape_function"/>
      </node>
      <node id="799">
        <label>mknix::ShapeFunctionMLS</label>
        <link refid="db/d02/classmknix_1_1_shape_function_m_l_s"/>
        <childnode refid="800" relation="public-inheritance">
        </childnode>
        <childnode refid="800" relation="public-inheritance">
        </childnode>
        <childnode refid="800" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="804">
        <label>mknix::Point</label>
        <link refid="d3/d19/classmknix_1_1_point"/>
        <childnode refid="802" relation="usage">
          <edgelabel>shapeFun</edgelabel>
        </childnode>
      </node>
      <node id="802">
        <label>mknix::ShapeFunction</label>
        <link refid="dd/d8d/classmknix_1_1_shape_function"/>
        <childnode refid="803" relation="usage">
          <edgelabel>phi</edgelabel>
        </childnode>
        <childnode refid="804" relation="usage">
          <edgelabel>gp</edgelabel>
        </childnode>
      </node>
      <node id="803">
        <label>lmx::DenseMatrix&lt; double &gt;</label>
        <link refid="d2/d8d/classlmx_1_1_dense_matrix"/>
      </node>
      <node id="801">
        <label>mknix::ShapeFunctionMLS</label>
        <link refid="db/d02/classmknix_1_1_shape_function_m_l_s"/>
        <childnode refid="802" relation="public-inheritance">
        </childnode>
        <childnode refid="802" relation="public-inheritance">
        </childnode>
        <childnode refid="802" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" line="42" column="1" bodyfile="/home/daniel/Projects/MkniX/src/core/shapefunctionMLS.h" bodystart="42" bodyend="76"/>
    <listofallmembers>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a420cf219331889d57a5af386f3803476" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>A</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a25a2736951cbd8d53f9d4bdb92fca228" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>B</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a45b9a5887f30125379ec7ba0ed6fb8c9" prot="public" virt="virtual"><scope>mknix::ShapeFunctionMLS</scope><name>calc</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a45b9a5887f30125379ec7ba0ed6fb8c9" prot="public" virt="virtual"><scope>mknix::ShapeFunctionMLS</scope><name>calc</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a45b9a5887f30125379ec7ba0ed6fb8c9" prot="public" virt="virtual"><scope>mknix::ShapeFunctionMLS</scope><name>calc</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a705f207580a4d35e55cbf60684d6c3e4" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>computeMomentMatrix</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a705f207580a4d35e55cbf60684d6c3e4" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>computeMomentMatrix</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a705f207580a4d35e55cbf60684d6c3e4" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>computeMomentMatrix</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1ae447a053da5746c9d0bbddf06ca3f3d6" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>computePhi</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1aea9e8d51fc0ce5279449c90d9df0c254" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>computePhi</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a6c74aaf320a7695f254b95e9c93cf343" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>computePhi</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1ac25d89dc1dab4a9a91439c653b565739" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>computeWeights</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1ac25d89dc1dab4a9a91439c653b565739" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>computeWeights</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1ac25d89dc1dab4a9a91439c653b565739" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>computeWeights</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1a1ca9a4d7bc5f82c887ac7e9bdd54aa1e" prot="protected" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>dim</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1a13f35e2b1cfc89c26ee03ede4bfff586" prot="public" virt="virtual"><scope>mknix::ShapeFunctionMLS</scope><name>getPhi</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1a6b287c3758e7d16be4c7c8e86bbb7077" prot="public" virt="virtual"><scope>mknix::ShapeFunctionMLS</scope><name>gnuplotOut</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1a70f36189e78b80d045076234e4c668da" prot="protected" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>gp</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a337164b9ab4ae1ff179867b3d63d9a95" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>m</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a912e74c289f8857437c169d394152262" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>mm</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a413cca266878018b886d59c1343ef90b" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>nn</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1a50beef3ce4e90c4f884df14f727296f6" prot="public" virt="virtual"><scope>mknix::ShapeFunctionMLS</scope><name>outputValues</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1ac33143b17144e12a263227ea5f7ae4e3" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>P</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a2a79d7ba98e92b817d4817e195e26541" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>p</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1ac1eaf8c2e5d8d6abf4726eb416de13d9" prot="protected" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>phi</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a610e48543de74c24246ad64cfd3b246d" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>s_max</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1a45248275e5e6fcaed37195155009e72e" prot="public" virt="virtual"><scope>mknix::ShapeFunctionMLS</scope><name>setPhi</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1a4a35da60e8eb2645a217cce36e6e323a" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>ShapeFunction</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1ae8a319daf0505fbacb0f159226e1a5ab" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>ShapeFunction</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1adaf264f0f7ae964f9c9dc513e3fe7195" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>ShapeFunction</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a4f54b158c12126b557284995ee1ae561" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>ShapeFunctionMLS</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1aa650080de7f2243efce2e14c17e9e2c5" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>ShapeFunctionMLS</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a4f54b158c12126b557284995ee1ae561" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>ShapeFunctionMLS</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1aa650080de7f2243efce2e14c17e9e2c5" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>ShapeFunctionMLS</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a4f54b158c12126b557284995ee1ae561" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>ShapeFunctionMLS</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1aa650080de7f2243efce2e14c17e9e2c5" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>ShapeFunctionMLS</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1af9f6b05bef9539808df21a2a70c0da26" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>w</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1ac7aa038ba34929ba1aab976736839add" prot="private" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>weightType</name></member>
      <member refid="dd/d8d/classmknix_1_1_shape_function_1ac5762f37f460aa48b8d2a53a1f422220" prot="public" virt="virtual"><scope>mknix::ShapeFunctionMLS</scope><name>~ShapeFunction</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a023ccf7cbc4ad50738271c4807c5f32a" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>~ShapeFunctionMLS</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a023ccf7cbc4ad50738271c4807c5f32a" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>~ShapeFunctionMLS</name></member>
      <member refid="db/d02/classmknix_1_1_shape_function_m_l_s_1a023ccf7cbc4ad50738271c4807c5f32a" prot="public" virt="non-virtual"><scope>mknix::ShapeFunctionMLS</scope><name>~ShapeFunctionMLS</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

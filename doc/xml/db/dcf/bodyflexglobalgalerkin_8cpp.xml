<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="db/dcf/bodyflexglobalgalerkin_8cpp" kind="file" language="C++">
    <compoundname>bodyflexglobalgalerkin.cpp</compoundname>
    <includes refid="df/d1c/bodyflexglobalgalerkin_8h" local="yes">bodyflexglobalgalerkin.h</includes>
    <includes refid="d0/ddd/cell_8h" local="no">core/cell.h</includes>
    <includes refid="dd/d6a/simulation_8h" local="no">simulation/simulation.h</includes>
    <incdepgraph>
      <node id="2521">
        <label>simulation/simulation.h</label>
        <link refid="dd/d6a/simulation_8h"/>
        <childnode refid="2513" relation="include">
        </childnode>
        <childnode refid="2510" relation="include">
        </childnode>
        <childnode refid="2522" relation="include">
        </childnode>
      </node>
      <node id="2520">
        <label>core/cell.h</label>
        <link refid="d0/ddd/cell_8h"/>
        <childnode refid="2516" relation="include">
        </childnode>
        <childnode refid="2517" relation="include">
        </childnode>
        <childnode refid="2510" relation="include">
        </childnode>
      </node>
      <node id="2515">
        <label>core/cellboundary.h</label>
        <link refid="db/d20/cellboundary_8h"/>
        <childnode refid="2516" relation="include">
        </childnode>
        <childnode refid="2517" relation="include">
        </childnode>
        <childnode refid="2510" relation="include">
        </childnode>
      </node>
      <node id="2506">
        <label>bodyflexglobalgalerkin.cpp</label>
        <link refid="bodyflexglobalgalerkin.cpp"/>
        <childnode refid="2507" relation="include">
        </childnode>
        <childnode refid="2520" relation="include">
        </childnode>
        <childnode refid="2521" relation="include">
        </childnode>
      </node>
      <node id="2517">
        <label>string</label>
      </node>
      <node id="2511">
        <label>map</label>
      </node>
      <node id="2510">
        <label>common.h</label>
        <link refid="dc/d54/common_8h"/>
        <childnode refid="2511" relation="include">
        </childnode>
        <childnode refid="2512" relation="include">
        </childnode>
      </node>
      <node id="2508">
        <label>bodyflex.h</label>
        <link refid="dd/dbc/bodyflex_8h"/>
        <childnode refid="2509" relation="include">
        </childnode>
        <childnode refid="2519" relation="include">
        </childnode>
      </node>
      <node id="2522">
        <label>core/material.h</label>
        <link refid="d3/d65/material_8h"/>
        <childnode refid="2513" relation="include">
        </childnode>
        <childnode refid="2510" relation="include">
        </childnode>
      </node>
      <node id="2514">
        <label>boundarygroup.h</label>
        <link refid="dc/d6b/boundarygroup_8h"/>
        <childnode refid="2510" relation="include">
        </childnode>
        <childnode refid="2513" relation="include">
        </childnode>
      </node>
      <node id="2516">
        <label>vector</label>
      </node>
      <node id="2507">
        <label>bodyflexglobalgalerkin.h</label>
        <link refid="df/d1c/bodyflexglobalgalerkin_8h"/>
        <childnode refid="2508" relation="include">
        </childnode>
      </node>
      <node id="2513">
        <label>LMX/lmx.h</label>
      </node>
      <node id="2518">
        <label>core/node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="2519" relation="include">
        </childnode>
        <childnode refid="2513" relation="include">
        </childnode>
      </node>
      <node id="2519">
        <label>point.h</label>
        <link refid="d2/d91/point_8h"/>
        <childnode refid="2516" relation="include">
        </childnode>
        <childnode refid="2511" relation="include">
        </childnode>
        <childnode refid="2517" relation="include">
        </childnode>
        <childnode refid="2510" relation="include">
        </childnode>
      </node>
      <node id="2509">
        <label>body.h</label>
        <link refid="d0/d77/body_8h"/>
        <childnode refid="2510" relation="include">
        </childnode>
        <childnode refid="2513" relation="include">
        </childnode>
        <childnode refid="2514" relation="include">
        </childnode>
        <childnode refid="2515" relation="include">
        </childnode>
        <childnode refid="2518" relation="include">
        </childnode>
      </node>
      <node id="2512">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innernamespace refid="d2/dde/namespacemknix">mknix</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2013<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://code.google.com/p/mknix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307,<sp/>USA.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d1c/bodyflexglobalgalerkin_8h" kindref="compound">bodyflexglobalgalerkin.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="d0/ddd/cell_8h" kindref="compound">core/cell.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="dd/d6a/simulation_8h" kindref="compound">simulation/simulation.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="d2/dde/namespacemknix" kindref="compound">mknix</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a29073fc9c4530cafc194be20b5a713be" refkind="member"><highlight class="normal"><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a29073fc9c4530cafc194be20b5a713be" kindref="member">FlexGlobalGalerkin::FlexGlobalGalerkin</ref>()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body" kindref="compound">FlexBody</ref>()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ac6b6f20633619ffb6e1d6e7d5782659f" refkind="member"><highlight class="normal"><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a29073fc9c4530cafc194be20b5a713be" kindref="member">FlexGlobalGalerkin::FlexGlobalGalerkin</ref>(std::string<sp/>title_in)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body" kindref="compound">FlexBody</ref>(title_in)</highlight></codeline>
<codeline lineno="35"><highlight class="normal">{</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1af036ee6bdc4450fd457e0d95b22ace7c" refkind="member"><highlight class="normal"><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1af036ee6bdc4450fd457e0d95b22ace7c" kindref="member">FlexGlobalGalerkin::~FlexGlobalGalerkin</ref>()</highlight></codeline>
<codeline lineno="40"><highlight class="normal">{</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ae5bb8c27e7494b233a96d971833a0d0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ae5bb8c27e7494b233a96d971833a0d0d" kindref="member">FlexGlobalGalerkin::calcMassMatrix</ref>()</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;computeMGaussPoints();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;computeFextGaussPoints();<sp/></highlight><highlight class="comment">//<sp/>Depends<sp/>on<sp/>M<sp/>and<sp/>gravity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ad9cbe937a3795ad5f9c5bd1990a14731" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ad9cbe937a3795ad5f9c5bd1990a14731" kindref="member">FlexGlobalGalerkin::calcInternalForces</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NONLINEAR&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;computeNLFintGaussPoints();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LINEAR&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;computeFintGaussPoints();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a2ed7079f0f2674c3556ff8dbbf3a63d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a2ed7079f0f2674c3556ff8dbbf3a63d3" kindref="member">FlexGlobalGalerkin::calcExternalForces</ref>()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Moved<sp/>to<sp/>calcMassMatrix(),<sp/>as<sp/>M<sp/>and<sp/>Gravity<sp/>are<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cells[i]-&gt;computeFextGaussPoints(<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a723916e65683c2ed77385ce0e3c3bd1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a723916e65683c2ed77385ce0e3c3bd1a" kindref="member">FlexGlobalGalerkin::calcTangentMatrix</ref>()</highlight></codeline>
<codeline lineno="83"><highlight class="normal">{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NONLINEAR&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;computeNLKGaussPoints();</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LINEAR&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;computeKGaussPoints();</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a689a56babe9734eb504a9c948b6a3587" kindref="member">FlexGlobalGalerkin::assembleMassMatrix</ref></highlight></codeline>
<codeline lineno="101" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a689a56babe9734eb504a9c948b6a3587" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix&lt;data_type&gt;</ref>&amp;<sp/>globalMass)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;cells.size();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cells[i]-&gt;assembleMGaussPoints(globalMass);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Chapuza...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/d0b/classmknix_1_1_simulation_1a49263e8630678644836bbba466e6ab4b" kindref="member">Simulation::getSmoothingType</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;GLOBAL&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(smoothingMassMatrix.rows()<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>smoothing<sp/>matrix<sp/>(local<sp/>mass<sp/>matrix<sp/>in<sp/>1D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smoothingMassMatrix.resize(nodes.size(),<sp/>nodes.size());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>nodes.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0u;<sp/>j<sp/>&lt;<sp/>nodes.size();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smoothingMassMatrix.writeElement(globalMass.readElement</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>*<sp/>(nodes[i]-&gt;getNumber()),</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>*<sp/>(nodes[j]-&gt;getNumber())),</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a53478bc093d332f42128861a059c974c" kindref="member">FlexGlobalGalerkin::assembleInternalForces</ref></highlight></codeline>
<codeline lineno="126" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a53478bc093d332f42128861a059c974c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;<sp/>globalInternalForces)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;cells.size();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cells[i]-&gt;assembleFintGaussPoints(globalInternalForces);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1acc0254dbedc2543be9051aab1acb7d99" kindref="member">FlexGlobalGalerkin::assembleExternalForces</ref></highlight></codeline>
<codeline lineno="136" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1acc0254dbedc2543be9051aab1acb7d99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;<sp/>globalExternalForces)</highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;cells.size();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;cells[i]-&gt;assembleFextGaussPoints(globalExternalForces);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ab5ddc03826dcf8dea98fd53093b2dfe7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ab5ddc03826dcf8dea98fd53093b2dfe7" kindref="member">FlexGlobalGalerkin::assembleTangentMatrix</ref>(<ref refid="d9/db0/classlmx_1_1_matrix" kindref="compound">lmx::Matrix&lt;data_type&gt;</ref>&amp;<sp/>globalTangent)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;assembleKGaussPoints(globalTangent);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal">}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a031a130b73e3fe0fc862393f94d235cb" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" kindref="member">FlexGlobalGalerkin::outputStep</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;<sp/>q,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;<sp/>qdot)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" kindref="member">Body::outputStep</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stressVectorSize<sp/>=<sp/>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>==<sp/>2)<sp/>?<sp/>3<sp/>:<sp/>6;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1aaacb11b0809c01edca2c7ef4ea41de7a" kindref="member">computeStress</ref>)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LINEAR&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>.push_back(<ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>(stressVectorSize<sp/>*<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.size()));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;assembleRGaussPoints(<ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>.back(),<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>[0]-&gt;getNumber());</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NONLINEAR&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>.push_back(<ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>(stressVectorSize<sp/>*<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.size()));</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;assembleNLRGaussPoints(<ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>.back(),<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>[0]-&gt;getNumber());</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoverStressField(stressVectorSize);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1a653efdbfbf4f6ec147407a1c7ffb3779" kindref="member">computeEnergy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>(4));<sp/></highlight><highlight class="comment">//potential,<sp/>kinetic,<sp/>elastic,<sp/>total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;fillIdentity(0.);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;operator()(0)<sp/>+=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;calcPotentialEGaussPoints(q);<sp/></highlight><highlight class="comment">//potential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;operator()(1)<sp/>+=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;calcKineticEGaussPoints(qdot);<sp/></highlight><highlight class="comment">//kinetic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;operator()(2)<sp/>+=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;calcElasticEGaussPoints();<sp/></highlight><highlight class="comment">//elastic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="comment">//total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;operator()(3)<sp/>+=</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;readElement(0)<sp/>+<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;readElement(1)<sp/>+<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;readElement(2);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="212" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a1882efa0a8f8c8832f6116b8f7874d2a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" kindref="member">FlexGlobalGalerkin::outputStep</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>&amp;<sp/>q)</highlight></codeline>
<codeline lineno="213"><highlight class="normal">{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/de3/classmknix_1_1_body_1ae41a00911e832630c5b18e874a503e34" kindref="member">Body::outputStep</ref>();</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stressVectorSize<sp/>=<sp/>(<ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>==<sp/>2)<sp/>?<sp/>3<sp/>:<sp/>6;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1aaacb11b0809c01edca2c7ef4ea41de7a" kindref="member">computeStress</ref>)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LINEAR&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>.push_back(<ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>(stressVectorSize<sp/>*<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.size()));</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;assembleRGaussPoints(<ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>.back(),<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>[0]-&gt;getNumber());</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NONLINEAR&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>.push_back(<ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>(stressVectorSize<sp/>*<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.size()));</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;assembleNLRGaussPoints(<ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>.back(),<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>[0]-&gt;getNumber());</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recoverStressField(stressVectorSize);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dd/d8d/classmknix_1_1_flex_body_1a653efdbfbf4f6ec147407a1c7ffb3779" kindref="member">computeEnergy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.push_back(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref>(4));<sp/></highlight><highlight class="comment">//potential,<sp/>kinetic,<sp/>elastic,<sp/>total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;fillIdentity(0.);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/>end_int;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;operator()(0)<sp/>+=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;calcPotentialEGaussPoints(q);<sp/></highlight><highlight class="comment">//potential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>kinetic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;operator()(2)<sp/>+=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1ae42afe33182ecd4ab758fd252e079221" kindref="member">cells</ref>[i]-&gt;calcElasticEGaussPoints();<sp/></highlight><highlight class="comment">//elastic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;operator()(3)<sp/>+=</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;readElement(0)<sp/>+<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;readElement(1)<sp/>+<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a1e6af3de339ebfd54b79e11827121622" kindref="member">energies</ref>.back()-&gt;readElement(2);<sp/></highlight><highlight class="comment">//total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal">}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FlexGlobalGalerkin::recoverStressField(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stressVectorSize)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="db/d0b/classmknix_1_1_simulation_1a49263e8630678644836bbba466e6ab4b" kindref="member">Simulation::getSmoothingType</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;GLOBAL&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Solve<sp/>linear<sp/>systems<sp/>for<sp/>stress<sp/>smoothing:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref><sp/>rhs(<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.size());</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d1/d20/classlmx_1_1_vector" kindref="compound">lmx::Vector&lt;data_type&gt;</ref><sp/>smooth(<ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.size());</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(j=0;<sp/>j&lt;stressVectorSize;<sp/>++j){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.writeElement(<ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>.back().readElement(stressVectorSize<sp/>*<sp/>i<sp/>+<sp/>j),<sp/>i);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::LinearSystem&lt;data_type&gt;<sp/>theLSolver(<ref refid="dd/d8d/classmknix_1_1_flex_body_1a39cbb448870d5dee6fcc02362bec9940" kindref="member">smoothingMassMatrix</ref>,<sp/>smooth,<sp/>rhs);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>smoothingMassMatrix<sp/>&lt;&lt;<sp/>rhs<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theLSolver.solveYourself();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0u;<sp/>i<sp/>&lt;<sp/><ref refid="dd/de3/classmknix_1_1_body_1acbfce7ce37d4e7f616850da2a5850280" kindref="member">nodes</ref>.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aa3ee6a81c465127e810ec9cec2f3ab58" kindref="member">stresses</ref>.back().writeElement(smooth.readElement(i),<sp/>stressVectorSize<sp/>*<sp/>i<sp/>+<sp/>j);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>smooth<sp/>&lt;&lt;<sp/>endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal">}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/daniel/Projects/MkniX/src/system/bodyflexglobalgalerkin.cpp"/>
  </compounddef>
</doxygen>

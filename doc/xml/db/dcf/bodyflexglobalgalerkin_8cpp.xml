<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.4">
  <compounddef id="db/dcf/bodyflexglobalgalerkin_8cpp" kind="file">
    <compoundname>bodyflexglobalgalerkin.cpp</compoundname>
    <includes refid="df/d1c/bodyflexglobalgalerkin_8h" local="yes">bodyflexglobalgalerkin.h</includes>
    <includes refid="dd/d6a/simulation_8h" local="yes">simulation.h</includes>
    <incdepgraph>
      <node id="4923">
        <label>celltriang.h</label>
        <link refid="dc/d6a/celltriang_8h"/>
        <childnode refid="4915" relation="include">
        </childnode>
      </node>
      <node id="4939">
        <label>bodyrigid2D.h</label>
        <link refid="d3/d80/bodyrigid2_d_8h"/>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4919" relation="include">
        </childnode>
      </node>
      <node id="4947">
        <label>constraintclearance.h</label>
        <link refid="df/de4/constraintclearance_8h"/>
        <childnode refid="4944" relation="include">
        </childnode>
      </node>
      <node id="4909">
        <label>bodyflexglobalgalerkin.h</label>
        <link refid="df/d1c/bodyflexglobalgalerkin_8h"/>
        <childnode refid="4910" relation="include">
        </childnode>
      </node>
      <node id="4922">
        <label>material.h</label>
        <link refid="d3/d65/material_8h"/>
        <childnode refid="4913" relation="include">
        </childnode>
      </node>
      <node id="4911">
        <label>body.h</label>
        <link refid="d0/d77/body_8h"/>
        <childnode refid="4912" relation="include">
        </childnode>
        <childnode refid="4913" relation="include">
        </childnode>
      </node>
      <node id="4915">
        <label>cell.h</label>
        <link refid="d0/ddd/cell_8h"/>
        <childnode refid="4916" relation="include">
        </childnode>
      </node>
      <node id="4944">
        <label>constraint.h</label>
        <link refid="dc/d4d/constraint_8h"/>
        <childnode refid="4912" relation="include">
        </childnode>
        <childnode refid="4913" relation="include">
        </childnode>
      </node>
      <node id="4921">
        <label>string</label>
      </node>
      <node id="4918">
        <label>map</label>
      </node>
      <node id="4920">
        <label>point.h</label>
        <link refid="d2/d91/point_8h"/>
        <childnode refid="4917" relation="include">
        </childnode>
        <childnode refid="4918" relation="include">
        </childnode>
        <childnode refid="4921" relation="include">
        </childnode>
        <childnode refid="4912" relation="include">
        </childnode>
      </node>
      <node id="4932">
        <label>analysisthermaldynamic.h</label>
        <link refid="d1/d1f/analysisthermaldynamic_8h"/>
        <childnode refid="4929" relation="include">
        </childnode>
      </node>
      <node id="4912">
        <label>common.h</label>
        <link refid="dc/d54/common_8h"/>
      </node>
      <node id="4941">
        <label>bodythermal.h</label>
        <link refid="d3/d0b/bodythermal_8h"/>
        <childnode refid="4913" relation="include">
        </childnode>
        <childnode refid="4914" relation="include">
        </childnode>
        <childnode refid="4923" relation="include">
        </childnode>
        <childnode refid="4924" relation="include">
        </childnode>
        <childnode refid="4925" relation="include">
        </childnode>
        <childnode refid="4926" relation="include">
        </childnode>
        <childnode refid="4919" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
      </node>
      <node id="4927">
        <label>simulation.h</label>
        <link refid="dd/d6a/simulation_8h"/>
        <childnode refid="4928" relation="include">
        </childnode>
        <childnode refid="4932" relation="include">
        </childnode>
        <childnode refid="4933" relation="include">
        </childnode>
        <childnode refid="4934" relation="include">
        </childnode>
        <childnode refid="4935" relation="include">
        </childnode>
        <childnode refid="4919" relation="include">
        </childnode>
        <childnode refid="4922" relation="include">
        </childnode>
      </node>
      <node id="4934">
        <label>analysisthermalstatic.h</label>
        <link refid="db/d65/analysisthermalstatic_8h"/>
        <childnode refid="4929" relation="include">
        </childnode>
      </node>
      <node id="4942">
        <label>thermalload.h</label>
        <link refid="de/df4/thermalload_8h"/>
        <childnode refid="4912" relation="include">
        </childnode>
        <childnode refid="4913" relation="include">
        </childnode>
        <childnode refid="4918" relation="include">
        </childnode>
      </node>
      <node id="4928">
        <label>analysisdynamic.h</label>
        <link refid="da/d83/analysisdynamic_8h"/>
        <childnode refid="4929" relation="include">
        </childnode>
      </node>
      <node id="4926">
        <label>elemtetrahedron.h</label>
        <link refid="d3/d9f/elemtetrahedron_8h"/>
        <childnode refid="4924" relation="include">
        </childnode>
      </node>
      <node id="4933">
        <label>analysisstatic.h</label>
        <link refid="d4/d87/analysisstatic_8h"/>
        <childnode refid="4929" relation="include">
        </childnode>
      </node>
      <node id="4948">
        <label>force.h</label>
        <link refid="dd/d0d/force_8h"/>
        <childnode refid="4949" relation="include">
        </childnode>
      </node>
      <node id="4925">
        <label>elemtriangle.h</label>
        <link refid="df/d03/elemtriangle_8h"/>
        <childnode refid="4923" relation="include">
        </childnode>
      </node>
      <node id="4917">
        <label>vector</label>
      </node>
      <node id="4945">
        <label>constraintfixedcoordinates.h</label>
        <link refid="d4/d28/constraintfixedcoordinates_8h"/>
        <childnode refid="4944" relation="include">
        </childnode>
      </node>
      <node id="4914">
        <label>cellrect.h</label>
        <link refid="d8/d84/cellrect_8h"/>
        <childnode refid="4915" relation="include">
        </childnode>
      </node>
      <node id="4943">
        <label>constraintdistance.h</label>
        <link refid="da/df6/constraintdistance_8h"/>
        <childnode refid="4944" relation="include">
        </childnode>
      </node>
      <node id="4913">
        <label>LMX/lmx.h</label>
      </node>
      <node id="4910">
        <label>bodyflex.h</label>
        <link refid="dd/dbc/bodyflex_8h"/>
        <childnode refid="4911" relation="include">
        </childnode>
        <childnode refid="4914" relation="include">
        </childnode>
        <childnode refid="4923" relation="include">
        </childnode>
        <childnode refid="4924" relation="include">
        </childnode>
        <childnode refid="4925" relation="include">
        </childnode>
        <childnode refid="4926" relation="include">
        </childnode>
        <childnode refid="4919" relation="include">
        </childnode>
      </node>
      <node id="4930">
        <label>LMX/lmx_diff_problem_first.h</label>
      </node>
      <node id="4935">
        <label>system.h</label>
        <link refid="dc/db2/system_8h"/>
        <childnode refid="4918" relation="include">
        </childnode>
        <childnode refid="4921" relation="include">
        </childnode>
        <childnode refid="4913" relation="include">
        </childnode>
        <childnode refid="4909" relation="include">
        </childnode>
        <childnode refid="4936" relation="include">
        </childnode>
        <childnode refid="4938" relation="include">
        </childnode>
        <childnode refid="4939" relation="include">
        </childnode>
        <childnode refid="4940" relation="include">
        </childnode>
        <childnode refid="4941" relation="include">
        </childnode>
        <childnode refid="4943" relation="include">
        </childnode>
        <childnode refid="4945" relation="include">
        </childnode>
        <childnode refid="4946" relation="include">
        </childnode>
        <childnode refid="4947" relation="include">
        </childnode>
        <childnode refid="4948" relation="include">
        </childnode>
        <childnode refid="4942" relation="include">
        </childnode>
      </node>
      <node id="4946">
        <label>constraintfixedaxis.h</label>
        <link refid="d8/dfb/constraintfixedaxis_8h"/>
        <childnode refid="4944" relation="include">
        </childnode>
      </node>
      <node id="4924">
        <label>celltetrahedron.h</label>
        <link refid="d1/d94/celltetrahedron_8h"/>
        <childnode refid="4915" relation="include">
        </childnode>
      </node>
      <node id="4938">
        <label>bodyrigid1D.h</label>
        <link refid="d7/d1c/bodyrigid1_d_8h"/>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4919" relation="include">
        </childnode>
      </node>
      <node id="4916">
        <label>gausspoint.h</label>
        <link refid="d4/dc6/gausspoint_8h"/>
        <childnode refid="4917" relation="include">
        </childnode>
        <childnode refid="4918" relation="include">
        </childnode>
        <childnode refid="4919" relation="include">
        </childnode>
        <childnode refid="4920" relation="include">
        </childnode>
        <childnode refid="4912" relation="include">
        </childnode>
        <childnode refid="4922" relation="include">
        </childnode>
      </node>
      <node id="4919">
        <label>node.h</label>
        <link refid="d1/d77/node_8h"/>
        <childnode refid="4917" relation="include">
        </childnode>
        <childnode refid="4920" relation="include">
        </childnode>
        <childnode refid="4913" relation="include">
        </childnode>
      </node>
      <node id="4931">
        <label>LMX/lmx_diff_problem_second.h</label>
      </node>
      <node id="4936">
        <label>bodyrigid0D.h</label>
        <link refid="da/d60/bodyrigid0_d_8h"/>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4919" relation="include">
        </childnode>
      </node>
      <node id="4908">
        <label>bodyflexglobalgalerkin.cpp</label>
        <link refid="bodyflexglobalgalerkin.cpp"/>
        <childnode refid="4909" relation="include">
        </childnode>
        <childnode refid="4927" relation="include">
        </childnode>
      </node>
      <node id="4929">
        <label>analysis.h</label>
        <link refid="d2/d40/analysis_8h"/>
        <childnode refid="4912" relation="include">
        </childnode>
        <childnode refid="4913" relation="include">
        </childnode>
        <childnode refid="4930" relation="include">
        </childnode>
        <childnode refid="4931" relation="include">
        </childnode>
      </node>
      <node id="4937">
        <label>bodyrigid.h</label>
        <link refid="d1/d67/bodyrigid_8h"/>
        <childnode refid="4911" relation="include">
        </childnode>
      </node>
      <node id="4940">
        <label>bodyrigid3D.h</label>
        <link refid="d1/dbe/bodyrigid3_d_8h"/>
        <childnode refid="4937" relation="include">
        </childnode>
        <childnode refid="4919" relation="include">
        </childnode>
      </node>
      <node id="4949">
        <label>load.h</label>
        <link refid="dc/d61/load_8h"/>
        <childnode refid="4912" relation="include">
        </childnode>
        <childnode refid="4913" relation="include">
        </childnode>
        <childnode refid="4919" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="d2/dde/namespacemknix">mknix</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2013<sp/>by<sp/>Daniel<sp/>Iglesias<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/>http://code.google.com/p/mknix<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify<sp/><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by<sp/><sp/>*</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/>Free<sp/>Software<sp/>Foundation,<sp/>Inc.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/><sp/>59<sp/>Temple<sp/>Place<sp/>-<sp/>Suite<sp/>330,<sp/>Boston,<sp/>MA<sp/><sp/>02111-1307,<sp/>USA.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df/d1c/bodyflexglobalgalerkin_8h" kindref="compound">bodyflexglobalgalerkin.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dd/d6a/simulation_8h" kindref="compound">simulation.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mknix<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a29073fc9c4530cafc194be20b5a713be" refkind="member"><highlight class="normal"><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a29073fc9c4530cafc194be20b5a713be" kindref="member">FlexGlobalGalerkin::FlexGlobalGalerkin</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body" kindref="compound">FlexBody</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal">}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ac6b6f20633619ffb6e1d6e7d5782659f" refkind="member"><highlight class="normal"><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a29073fc9c4530cafc194be20b5a713be" kindref="member">FlexGlobalGalerkin::FlexGlobalGalerkin</ref>(<sp/>std::string<sp/>title_in<sp/>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>:<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body" kindref="compound">FlexBody</ref>(<sp/>title_in<sp/>)</highlight></codeline>
<codeline lineno="33"><highlight class="normal">{</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1af036ee6bdc4450fd457e0d95b22ace7c" refkind="member"><highlight class="normal"><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1af036ee6bdc4450fd457e0d95b22ace7c" kindref="member">FlexGlobalGalerkin::~FlexGlobalGalerkin</ref>()</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a24bad02ef3ea95123581550297ac82a0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a24bad02ef3ea95123581550297ac82a0" kindref="member">FlexGlobalGalerkin::initialize</ref>()</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="46"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;initialize(<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref><sp/>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;computeShapeFunctions(<sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Checking<sp/>the<sp/>output<sp/>of<sp/>a<sp/>shapefunction:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>int<sp/>mid_int<sp/>=<sp/>this-&gt;cells.size()/2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>this-&gt;cells[mid_int]-&gt;gnuplotOut(cell_data,<sp/>gpoint_data);<sp/>//<sp/>Bus<sp/>error</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>output<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>cell_data(</highlight><highlight class="stringliteral">&quot;cell_data.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>std::ofstream<sp/>gpoint_data(</highlight><highlight class="stringliteral">&quot;cell_gpoint_data.dat&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">//The<sp/>iteration<sp/>on<sp/>nodes<sp/>MUST<sp/>be<sp/>done<sp/>AFTER<sp/>the<sp/>cells.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>.size();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[i]-&gt;getShapeFunType()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;RBF&quot;</highlight><highlight class="normal"><sp/>||</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[i]-&gt;getShapeFunType()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;MLS&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[i]-&gt;findSupportNodes(<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref><sp/>);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[i]-&gt;getShapeFunType()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;RBF&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[i]-&gt;shapeFunSolve(<sp/></highlight><highlight class="stringliteral">&quot;RBF&quot;</highlight><highlight class="normal">,<sp/>1.03<sp/>);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[i]-&gt;getShapeFunType()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;MLS&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[i]-&gt;shapeFunSolve(<sp/></highlight><highlight class="stringliteral">&quot;MLS&quot;</highlight><highlight class="normal">,<sp/>1.03<sp/>);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ae5bb8c27e7494b233a96d971833a0d0d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ae5bb8c27e7494b233a96d971833a0d0d" kindref="member">FlexGlobalGalerkin::calcMassMatrix</ref>()</highlight></codeline>
<codeline lineno="96"><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;computeMGaussPoints(<sp/>);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal">}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ad9cbe937a3795ad5f9c5bd1990a14731" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ad9cbe937a3795ad5f9c5bd1990a14731" kindref="member">FlexGlobalGalerkin::calcInternalForces</ref>()</highlight></codeline>
<codeline lineno="109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>this-&gt;<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NONLINEAR&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;computeNLFintGaussPoints(<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>this-&gt;<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LINEAR&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;computeFintGaussPoints(<sp/>);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a2ed7079f0f2674c3556ff8dbbf3a63d3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a2ed7079f0f2674c3556ff8dbbf3a63d3" kindref="member">FlexGlobalGalerkin::calcExternalForces</ref>()</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="136"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;computeFextGaussPoints(<sp/>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a723916e65683c2ed77385ce0e3c3bd1a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a723916e65683c2ed77385ce0e3c3bd1a" kindref="member">FlexGlobalGalerkin::calcTangentMatrix</ref>()</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>this-&gt;<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;NONLINEAR&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;computeNLKGaussPoints(<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>this-&gt;<ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;LINEAR&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;computeKGaussPoints(<sp/>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a689a56babe9734eb504a9c948b6a3587" kindref="member">FlexGlobalGalerkin::assembleMassMatrix</ref></highlight></codeline>
<codeline lineno="170" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a689a56babe9734eb504a9c948b6a3587" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>(lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalMass)</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;cells.size();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cells[i]-&gt;assembleMGaussPoints(<sp/>globalMass<sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Chapuza...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a49263e8630678644836bbba466e6ab4b" kindref="member">Simulation::getSmoothingType</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;GLOBAL&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>localMassMatrix.rows()<sp/>==<sp/>0<sp/>){</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>smoothing<sp/>matrix<sp/>(local<sp/>mass<sp/>matrix)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localMassMatrix.resize(<sp/>nodes.size(),<sp/>nodes.size()<sp/>);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;nodes.size();<sp/>++i){</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;nodes.size();<sp/>++j){</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localMassMatrix.writeElement(<sp/>globalMass.readElement</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>*<sp/>(nodes[i]-&gt;getNumber()),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()<sp/>*<sp/>(nodes[j]-&gt;getNumber())<sp/>),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i,<sp/>j<sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a53478bc093d332f42128861a059c974c" kindref="member">FlexGlobalGalerkin::assembleInternalForces</ref></highlight></codeline>
<codeline lineno="200" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a53478bc093d332f42128861a059c974c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>(lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalInternalForces)</highlight></codeline>
<codeline lineno="201"><highlight class="normal">{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;cells.size();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cells[i]-&gt;assembleFintGaussPoints(<sp/>globalInternalForces<sp/>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal">}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1acc0254dbedc2543be9051aab1acb7d99" kindref="member">FlexGlobalGalerkin::assembleExternalForces</ref></highlight></codeline>
<codeline lineno="214" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1acc0254dbedc2543be9051aab1acb7d99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>(lmx::Vector&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalExternalForces)</highlight></codeline>
<codeline lineno="215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;cells.size();</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;cells[i]-&gt;assembleFextGaussPoints(<sp/>globalExternalForces<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ab5ddc03826dcf8dea98fd53093b2dfe7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1ab5ddc03826dcf8dea98fd53093b2dfe7" kindref="member">FlexGlobalGalerkin::assembleTangentMatrix</ref>(lmx::Matrix&lt;<sp/>data_type<sp/>&gt;<sp/>&amp;<sp/>globalTangent)</highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="231"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;assembleKGaussPoints(<sp/>globalTangent<sp/>);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a031a130b73e3fe0fc862393f94d235cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a031a130b73e3fe0fc862393f94d235cb" kindref="member">FlexGlobalGalerkin::outputStep</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>q,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>qdot<sp/>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aaacb11b0809c01edca2c7ef4ea41de7a" kindref="member">computeStress</ref><sp/>&amp;&amp;<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()==2<sp/>){</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref>==</highlight><highlight class="stringliteral">&quot;LINEAR&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ab7e82d08982714b26de3fff2a281d4f2" kindref="member">stress</ref>.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;(<sp/>3*<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>.size()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;assembleRGaussPoints(<sp/>*<ref refid="dd/d8d/classmknix_1_1_flex_body_1ab7e82d08982714b26de3fff2a281d4f2" kindref="member">stress</ref>.back(),<sp/><ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[0]-&gt;getNumber()<sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref>==</highlight><highlight class="stringliteral">&quot;NONLINEAR&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ab7e82d08982714b26de3fff2a281d4f2" kindref="member">stress</ref>.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;(<sp/>3*<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>.size()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;assembleNLRGaussPoints(<sp/>*<ref refid="dd/d8d/classmknix_1_1_flex_body_1ab7e82d08982714b26de3fff2a281d4f2" kindref="member">stress</ref>.back(),<sp/><ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[0]-&gt;getNumber()<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1a49263e8630678644836bbba466e6ab4b" kindref="member">Simulation::getSmoothingType</ref>()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;GLOBAL&quot;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,j;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Solve<sp/>linear<sp/>systems<sp/>for<sp/>stress<sp/>smoothing:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;data_type&gt;<sp/>rhs(<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>.size());</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::Vector&lt;data_type&gt;<sp/>smooth(<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>.size());</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j=0;<sp/>j&lt;3;<sp/>++j){</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs.writeElement(<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ab7e82d08982714b26de3fff2a281d4f2" kindref="member">stress</ref>.back()-&gt;readElement(3*i+j),<sp/>i<sp/>);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lmx::LinearSystem&lt;data_type&gt;<sp/>theLSolver(<sp/><ref refid="dd/de3/classmknix_1_1_body_1abf69d9fd5ede2c511d85c5d644902c6e" kindref="member">localMassMatrix</ref>,<sp/>smooth,<sp/>rhs<sp/>);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theLSolver.solveYourself();</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i=0;<sp/>i&lt;<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>.size();<sp/>++i)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ab7e82d08982714b26de3fff2a281d4f2" kindref="member">stress</ref>.back()-&gt;writeElement(<sp/>rhs.readElement(i),<sp/>3*i+j<sp/>);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a653efdbfbf4f6ec147407a1c7ffb3779" kindref="member">computeEnergy</ref><sp/>){</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;(<sp/>4<sp/>)<sp/>);<sp/></highlight><highlight class="comment">//potential,<sp/>kinetic,<sp/>elastic,<sp/>total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;fillIdentity(<sp/>0.<sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;operator()(0)<sp/>+=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;calcPotentialEGaussPoints(<sp/>q<sp/>);<sp/></highlight><highlight class="comment">//potential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;operator()(1)<sp/>+=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;calcKineticEGaussPoints(<sp/>qdot<sp/>);<sp/></highlight><highlight class="comment">//kinetic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;operator()(2)<sp/>+=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;calcElasticEGaussPoints(<sp/>);<sp/></highlight><highlight class="comment">//elastic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;operator()(3)<sp/>+=<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;readElement(0)<sp/>+<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;readElement(1)<sp/>+<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;readElement(2);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305" refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a1882efa0a8f8c8832f6116b8f7874d2a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="d6/d4a/classmknix_1_1_flex_global_galerkin_1a031a130b73e3fe0fc862393f94d235cb" kindref="member">FlexGlobalGalerkin::outputStep</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;&amp;<sp/>q<sp/>)</highlight></codeline>
<codeline lineno="306"><highlight class="normal">{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1aaacb11b0809c01edca2c7ef4ea41de7a" kindref="member">computeStress</ref><sp/>&amp;&amp;<sp/><ref refid="db/d0b/classmknix_1_1_simulation_1adda4efbeb29fecf80bcd8552703bfed4" kindref="member">Simulation::getDim</ref>()==2<sp/>){</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref>==</highlight><highlight class="stringliteral">&quot;LINEAR&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ab7e82d08982714b26de3fff2a281d4f2" kindref="member">stress</ref>.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;(<sp/>3*<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>.size()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="314"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;assembleRGaussPoints(<sp/>*<ref refid="dd/d8d/classmknix_1_1_flex_body_1ab7e82d08982714b26de3fff2a281d4f2" kindref="member">stress</ref>.back(),<sp/><ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[0]-&gt;getNumber()<sp/>);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1acb6f1ed2a9f207ceb39d485aabc2fbcf" kindref="member">formulation</ref>==</highlight><highlight class="stringliteral">&quot;NONLINEAR&quot;</highlight><highlight class="normal"><sp/>){</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1ab7e82d08982714b26de3fff2a281d4f2" kindref="member">stress</ref>.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;(<sp/>3*<ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>.size()<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="327"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;assembleNLRGaussPoints(<sp/>*<ref refid="dd/d8d/classmknix_1_1_flex_body_1ab7e82d08982714b26de3fff2a281d4f2" kindref="member">stress</ref>.back(),<sp/><ref refid="dd/de3/classmknix_1_1_body_1a3393da3459cbf7b35ee3dedb982180bf" kindref="member">nodes</ref>[0]-&gt;getNumber()<sp/>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a653efdbfbf4f6ec147407a1c7ffb3779" kindref="member">computeEnergy</ref><sp/>){</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>lmx::Vector&lt;data_type&gt;(<sp/>4<sp/>)<sp/>);<sp/></highlight><highlight class="comment">//potential,<sp/>kinetic,<sp/>elastic,<sp/>total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;fillIdentity(<sp/>0.<sp/>);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_int<sp/>=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>.size();</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>omp<sp/>parallel<sp/>for</highlight></codeline>
<codeline lineno="343"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>&lt;<sp/>end_int;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;operator()(0)<sp/>+=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;calcPotentialEGaussPoints(<sp/>q<sp/>);<sp/></highlight><highlight class="comment">//potential</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>kinetic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;operator()(2)<sp/>+=<sp/>this-&gt;<ref refid="dd/de3/classmknix_1_1_body_1afa538e2bc24cd6623e63b44704037a73" kindref="member">cells</ref>[i]-&gt;calcElasticEGaussPoints(<sp/>);<sp/></highlight><highlight class="comment">//elastic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;operator()(3)<sp/>+=<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;readElement(0)<sp/>+<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;readElement(1)<sp/>+<sp/><ref refid="dd/d8d/classmknix_1_1_flex_body_1a9152c5c0047a854fd4875082e6ca191e" kindref="member">energy</ref>.back()-&gt;readElement(2);<sp/></highlight><highlight class="comment">//total</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>if<sp/>(<sp/>formulation==&quot;THERMAL&quot;<sp/>){</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>temperature.push_back(<sp/>new<sp/>lmx::Vector&lt;data_type&gt;(<sp/>nodes.size()<sp/>)<sp/>);<sp/>//temperature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;nodes.size();<sp/>++i)<sp/>temperature.back()-&gt;writeElement(<sp/>q.readElement(i),<sp/>i<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal">}</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/dani/Dropbox/MkniX_cmake/src/bodyflexglobalgalerkin.cpp"/>
  </compounddef>
</doxygen>
